{
  "version": 3,
  "sources": [
    "../node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "src\\acc.config.js",
    "src\\acc.module.js",
    "src\\apis\\bankApi.js",
    "src\\apis\\chequeApi.js",
    "src\\apis\\chequeCategoryApi.js",
    "src\\apis\\detailAccountApi.js",
    "src\\apis\\dimensionApi.js",
    "src\\apis\\dimensionCategoryApi.js",
    "src\\apis\\generalLedgerAccountApi.js",
    "src\\apis\\journalApi.js",
    "src\\apis\\journalLineApi.js",
    "src\\apis\\subsidiaryLedgerAccountApi.js",
    "src\\config\\gridFilterCellTypeConfig.js",
    "src\\config\\menu.config.js",
    "src\\config\\route.config.js",
    "src\\config\\translate.config.js",
    "src\\controllers\\banksController.js",
    "src\\controllers\\chequeCategoriesController.js",
    "src\\controllers\\detailAccountCreateController.js",
    "src\\controllers\\detailAccountUpdateController.js",
    "src\\controllers\\detailAccountsController.js",
    "src\\controllers\\dimensionsController.js",
    "src\\controllers\\generalLedgerAccountsController.js",
    "src\\controllers\\homeController.js",
    "src\\controllers\\journalLineCreateOrUpdateController.js",
    "src\\controllers\\journalLineUpdateController.js",
    "src\\controllers\\journalUpdateController.js",
    "src\\controllers\\journalsController.js",
    "src\\controllers\\shellController.js",
    "src\\controllers\\subsidiaryLedgerAccountCreateController.js",
    "src\\controllers\\subsidiaryLedgerAccountUpdateController.js",
    "src\\controllers\\subsidiaryLedgerAccountsController.js",
    "src\\directives\\alert.js",
    "src\\directives\\blockUi.js",
    "src\\directives\\button.js",
    "src\\directives\\combobox.js",
    "src\\directives\\content.js",
    "src\\directives\\customValidator.js",
    "src\\directives\\datepicker.js",
    "src\\directives\\dropdownlist.js",
    "src\\directives\\focusMe.js",
    "src\\directives\\grid.js",
    "src\\directives\\layout.js",
    "src\\directives\\numeric.js",
    "src\\directives\\subContent.js",
    "src\\directives\\textEditor.js",
    "src\\directives\\uploader.js",
    "src\\directives\\validationSummary.js",
    "src\\filters\\amount.js",
    "src\\localData\\config.js",
    "src\\localData\\constants.js",
    "src\\localData\\enumType.js",
    "src\\localData\\enums.js",
    "src\\localData\\urls.js",
    "src\\modals\\chequeCategroyCreate.js",
    "src\\modals\\chequeCategroyUpdate.js",
    "src\\modals\\dimensionCreate.js",
    "src\\modals\\dimensionUpdate.js",
    "src\\modals\\generalLedgerAccountCreate.js",
    "src\\modals\\generalLedgerAccountUpdate.js",
    "src\\modals\\journalAttachImage.js",
    "src\\modals\\journalBookkeeping.js",
    "src\\modals\\journalCreate.js",
    "src\\modals\\journalLineCreateOrUpdate.js",
    "src\\modals\\writeChequeOnJournalLineEntry.js",
    "src\\services\\apiPromise.js",
    "src\\services\\confirm.js",
    "src\\services\\formService.js",
    "src\\services\\gridFilterCellTypeProvider.js",
    "src\\services\\logger.js",
    "src\\services\\menuItemsProvider.js",
    "src\\services\\modalBase.js",
    "src\\services\\routeNavigatorService.js",
    "src\\services\\translate.js",
    "src\\services\\translateStorageService.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import accModule from './acc.module';\r\n\r\n// load config\r\nimport  './config/route.config';\r\nimport  './config/menu.config.js';\r\nimport  './config/translate.config';\r\nimport './config/gridFilterCellTypeConfig';\r\n\r\n//load controllers\r\nimport './controllers/shellController';\r\nimport './controllers/homeController';\r\nimport './controllers/generalLedgerAccountsController';\r\nimport './controllers/subsidiaryLedgerAccountsController';\r\nimport './controllers/subsidiaryLedgerAccountCreateController';\r\nimport './controllers/subsidiaryLedgerAccountUpdateController';\r\nimport './controllers/detailAccountsController';\r\nimport './controllers/detailAccountCreateController';\r\nimport './controllers/detailAccountUpdateController';\r\nimport './controllers/dimensionsController';\r\nimport './controllers/journalsController';\r\nimport './controllers/journalUpdateController';\r\nimport './controllers/journalLineCreateOrUpdateController';\r\nimport './controllers/journalLineUpdateController';\r\nimport './controllers/chequeCategoriesController';\r\nimport './controllers/banksController';\r\n\r\n\r\n// load apis\r\nimport './apis/generalLedgerAccountApi';\r\nimport './apis/subsidiaryLedgerAccountApi';\r\nimport './apis/detailAccountApi';\r\nimport './apis/dimensionCategoryApi';\r\nimport './apis/dimensionApi';\r\nimport './apis/journalApi';\r\nimport './apis/journalLineApi';\r\nimport './apis/chequeCategoryApi';\r\nimport './apis/bankApi';\r\nimport './apis/chequeApi';\r\n\r\n// load modals\r\nimport './modals/generalLedgerAccountCreate';\r\nimport './modals/generalLedgerAccountUpdate';\r\nimport './modals/dimensionCreate';\r\nimport './modals/dimensionUpdate';\r\nimport './modals/journalCreate';\r\nimport './modals/journalLineCreateOrUpdate';\r\nimport './modals/journalBookkeeping';\r\nimport './modals/journalAttachImage';\r\nimport './modals/chequeCategroyCreate';\r\nimport './modals/chequeCategroyUpdate';\r\nimport './modals/writeChequeOnJournalLineEntry';\r\n\r\nimport './localData/constants';\r\n\r\n//directives\r\nimport './directives/alert';\r\nimport './directives/subContent';\r\nimport './directives/blockUi';\r\nimport './directives/customValidator';\r\nimport './directives/validationSummary';\r\nimport './directives/focusMe';\r\nimport './directives/uploader';\r\nimport './directives/button';\r\nimport './directives/combobox';\r\nimport './directives/content';\r\nimport './directives/datepicker';\r\nimport './directives/dropdownlist';\r\nimport './directives/grid';\r\nimport './directives/layout';\r\nimport './directives/numeric';\r\nimport './directives/textEditor';\r\n\r\n//filter\r\nimport './filters/amount';\r\n\r\n//service\r\nimport './services/formService';\r\nimport './services/translateStorageService';\r\nimport './services/apiPromise';\r\nimport './services/confirm';\r\nimport './services/gridFilterCellTypeProvider';\r\nimport './services/logger';\r\nimport './services/menuItemsProvider';\r\nimport './services/modalBase';\r\nimport './services/routeNavigatorService';\r\nimport './services/translate';\r\n\r\naccModule.init();\r\n\r\n",
    "import angular from 'angular';\r\nimport 'angular-animate';\r\nimport 'angular-route';\r\nimport 'angular-sanitize';\r\nimport 'angular-bootstrap';\r\nimport 'angular-resource';\r\nimport 'angular-translate';\r\nimport 'angular-messages';\r\nimport 'angular-cookies';\r\nimport 'kendo';\r\n\r\n/*import 'angular-animate';\r\nimport 'angular-bootstrap';\r\nimport 'angular-route';\r\nimport 'angular-sanitize';\r\nimport 'angular-translate';\r\nimport 'angular-resource';\r\nimport 'angular-messages';\r\nimport 'angular-cookies';\r\nimport 'kendo';\r\nimport 'kendo.messages';\r\nimport 'angular-cookies';*/\r\n\r\nlet accModule = angular.module('acc.module', [\r\n    'ngAnimate', 'ngRoute', 'ngSanitize', 'ui.bootstrap','ngResource','pascalprecht.translate','ngMessages','ngCookies','kendo.directives'\r\n]);\r\n\r\naccModule.init = () => {\r\n    angular.element(document).ready(function () {\r\n        angular.bootstrap(document, ['acc.module']);\r\n    });\r\n};\r\n\r\nexport default accModule;",
    "import accModule from '../acc.module';\r\n\r\nfunction bankApi(apiPromise) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/banks/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/banks'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/banks/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/banks/{1}'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('bankApi', bankApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction chequeApi(apiPromise) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/cheques/{1}'.format(urlPrefix, id));\r\n        },\r\n        write: (id, data)=> apiPromise.put('{0}/cheques/{1}/write'.format(urlPrefix, id),data)\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('chequeApi', chequeApi);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction chequeCategoryApi(apiPromise) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        getOpens: (detailAccountId)=>\r\n            apiPromise.get('{0}/cheque-categories/detail-account/{1}/opens'\r\n            .format(urlPrefix, detailAccountId)),\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/cheque-categories/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/cheque-categories'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/cheque-categories/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/cheque-categories/{1}'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('chequeCategoryApi', chequeCategoryApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction detailAccountApi(apiPromise) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: '{0}/detail-accounts'.format(urlPrefix),\r\n            getAllActive: '{0}/detail-accounts/active'.format(urlPrefix)\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/detail-accounts/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/detail-accounts'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/detail-accounts/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/detail-accounts/{1}'.format(urlPrefix, id));\r\n        },\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/detail-accounts/{1}/activate'.format(urlPrefix, id));\r\n        },\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/detail-accounts/{1}/deactivate'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('detailAccountApi', detailAccountApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction dimensionApi(apiPromise) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: function (parentId) {\r\n                return '{0}/dimensions/category/{1}'.format(urlPrefix, parentId);\r\n            }\r\n        },\r\n        getAll: function () {\r\n            return apiPromise.get('{0}/dimensions'.format(urlPrefix));\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/dimensions/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (categoryId, data) {\r\n            return apiPromise.post('{0}/dimensions/category/{1}'.format(urlPrefix, categoryId), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/dimensions/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/dimensions/{1}'.format(urlPrefix, id));\r\n        },\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/dimensions/{1}/activate'.format(urlPrefix, id));\r\n        },\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/dimensions/{1}/deactivate'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('dimensionApi', dimensionApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction dimensionCategoryApi(apiPromise) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: '{0}/dimension-categories'.format(urlPrefix)\r\n        },\r\n        getAll: function () {\r\n            return apiPromise.get('{0}/dimension-categories'.format(urlPrefix));\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/dimension-categories/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/dimension-categories'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/dimension-categories/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/dimension-categories/{1}'.format(urlPrefix, id));\r\n        },\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/dimension-categories/{1}/activate'.format(urlPrefix, id));\r\n        },\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/dimension-categories/{1}/deactivate'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('dimensionCategoryApi', dimensionCategoryApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction generalLedgerAccountApi(apiPromise) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: '{0}/general-ledger-accounts'.format(urlPrefix),\r\n            getAllActive: '{0}/general-ledger-accounts/active'\r\n                .format(urlPrefix)\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/general-ledger-accounts/{1}'\r\n                .format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/general-ledger-accounts'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/general-ledger-accounts/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/general-ledger-accounts/{1}'.format(urlPrefix, id));\r\n        },\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/general-ledger-accounts/{1}/activate'.format(urlPrefix, id));\r\n        },\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/general-ledger-accounts/{1}/deactivate'.format(urlPrefix, id));\r\n        }\r\n    };\r\n}\r\n\r\naccModule.factory('generalLedgerAccountApi', generalLedgerAccountApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalApi(apiPromise) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: '{0}/journals'.format(urlPrefix)\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/journals/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/journals'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/journals/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/journals/{1}'.format(urlPrefix, id));\r\n        },\r\n        bookkeeping: (id, data)=> apiPromise.put('{0}/journals/{1}/bookkeeping'.format(urlPrefix, id), data),\r\n        attachImage: (id, data)=> apiPromise.put('{0}/journals/{1}/attach-image'.format(urlPrefix, id), data)\r\n    };\r\n}\r\n\r\naccModule.factory('journalApi', journalApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalLineApi(apiPromise) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: (journalId)=> '{0}/journal-lines/journal/{1}'.format(urlPrefix, journalId)\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/journal-lines/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (journalId, data) {\r\n            return apiPromise.post('{0}/journal-lines/journal/{1}'.format(urlPrefix, journalId), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/journal-lines/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/journal-lines/{1}'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('journalLineApi', journalLineApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction subsidiaryLedgerAccountApi(apiPromise) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: function (parentId) {\r\n                return '{0}/subsidiary-ledger-accounts/general-ledger-account/{1}'.format(urlPrefix, parentId);\r\n            },\r\n            getAllActive: function (parentId) {\r\n                return '{0}/subsidiary-ledger-accounts/general-ledger-account/{1}/active'.format(urlPrefix, parentId)\r\n            }\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/subsidiary-ledger-accounts/{1}/'\r\n                .format(urlPrefix, id));\r\n        },\r\n        create: function (parentId, data) {\r\n            return apiPromise.post('{0}/subsidiary-ledger-accounts/general-ledger-account/{1}'\r\n                .format(urlPrefix, parentId), data);\r\n        }\r\n        ,\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/subsidiary-ledger-accounts/{1}'\r\n                .format(urlPrefix, id), data);\r\n        }\r\n        ,\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/subsidiary-ledger-accounts/{1}'\r\n                .format(urlPrefix, id))\r\n        }\r\n        ,\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/subsidiary-ledger-accounts/{1}/activate'\r\n                .format(urlPrefix, id));\r\n        }\r\n        ,\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/subsidiary-ledger-accounts/{1}/deactivate'\r\n                .format(urlPrefix, id));\r\n        }\r\n    }\r\n}\r\n\r\naccModule\r\n    .factory('subsidiaryLedgerAccountApi', subsidiaryLedgerAccountApi)\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\nimport constants from '../localData/constants';\r\n\r\naccModule.config(function (gridFilterCellTypeProvider) {\r\n\r\n    var postingType = {\r\n        cell: gridFilterCellTypeProvider.control.dropdown({\r\n            text: 'display',\r\n            value: 'key',\r\n            data: constants.enums.AccountPostingType()\r\n        }),\r\n        modelType: 'string'\r\n    };\r\n    var balanceType = {\r\n        cell: gridFilterCellTypeProvider.control.dropdown({\r\n            text: 'display',\r\n            value: 'key',\r\n            data: constants.enums.AccountBalanceType()\r\n        }),\r\n        modelType: 'string'\r\n    };\r\n\r\n    var activeType = {\r\n        cell: gridFilterCellTypeProvider.control.dropdown({\r\n            text: 'display',\r\n            value: 'key',\r\n            data: constants.enums.Active()\r\n        }),\r\n        modelType: 'boolean'\r\n    }\r\n\r\n    let journalType = {\r\n        cell: gridFilterCellTypeProvider.control.dropdown({\r\n            text: 'display',\r\n            value: 'key',\r\n            data: constants.enums.JournalType()\r\n        }),\r\n        modelType: 'number'\r\n    };\r\n\r\n    let journalStatus = {\r\n        cell: gridFilterCellTypeProvider.control.dropdown({\r\n            text: 'display',\r\n            value: 'key',\r\n            data: constants.enums.JournalStatus()\r\n        }),\r\n        modelType: 'number'\r\n    }\r\n\r\n    let chequeCategoryStatus = {\r\n        cell: gridFilterCellTypeProvider.control.dropdown({\r\n            text: 'display',\r\n            value: 'key',\r\n            data: constants.enums.ChequeCategoryStatus()\r\n        }),\r\n        modelType: 'number'\r\n    }\r\n\r\n    let generalLedgerAccount = {\r\n        cell: gridFilterCellTypeProvider.control.combo({\r\n            text: 'title',\r\n            value: 'id',\r\n            url: constants.urls.generalLedgerAccount.all()\r\n        }),\r\n        modelType: 'string'\r\n    }\r\n\r\n    let subsidiaryLedgerAccount = {\r\n        cell: gridFilterCellTypeProvider.control.combo({\r\n            text: 'title',\r\n            value: 'id',\r\n            url: constants.urls.subsidiaryLedgerAccount.all()\r\n        }),\r\n        modelType: 'string'\r\n    }\r\n\r\n    let detailAccount = {\r\n        cell: gridFilterCellTypeProvider.control.combo({\r\n            text: 'display',\r\n            value: 'id',\r\n            url: constants.urls.detailAccount.all()\r\n        }),\r\n        modelType: 'string'\r\n    };\r\n\r\n    let bank = {\r\n        cell: gridFilterCellTypeProvider.control.combo({\r\n            text: 'title',\r\n            value: 'id',\r\n            url: constants.urls.bank.all()\r\n        }),\r\n        modelType: 'number'\r\n\r\n    };\r\n\r\n    gridFilterCellTypeProvider.set({\r\n        postingType: postingType,\r\n        balanceType: balanceType,\r\n        activeType: activeType,\r\n        journalType: journalType,\r\n        journalStatus: journalStatus,\r\n        chequeCategoryStatus: chequeCategoryStatus,\r\n        generalLedgerAccount: generalLedgerAccount,\r\n        subsidiaryLedgerAccount: subsidiaryLedgerAccount,\r\n        detailAccount: detailAccount,\r\n        bank: bank\r\n    });\r\n});",
    "import accModule from '../acc.module';\r\n\r\naccModule.config(menuItemsProvider => {\r\n    \"use strict\";\r\n\r\n    menuItemsProvider\r\n        .add({\r\n            title: 'سرفصل حسابها و سطوح',\r\n            url: '',\r\n            icon: '',\r\n            children: [\r\n                {\r\n                    title: 'حسابهای کل و معین',\r\n                    url: '#/general-ledger-accounts'\r\n                },\r\n                {\r\n                    title: 'حساب تفصیل',\r\n                    url: '#/detail-accounts'\r\n                },\r\n                {\r\n                    title: 'سطوح',\r\n                    url: '#/dimensions'\r\n                }\r\n            ]\r\n        })\r\n        .add({\r\n            title: 'سند حسابداری',\r\n            url: '',\r\n            icon: '',\r\n            children: [\r\n                {\r\n                    title: 'لیست اسناد حسابداری',\r\n                    url: '#/journals',\r\n                    icon: ''\r\n                },\r\n                {\r\n                    title: 'سند حسابداری جدید',\r\n                    url: '#/journal-new',\r\n                    icon: ''\r\n                }\r\n            ]\r\n        })\r\n        .add({\r\n            title: 'خزانه داری',\r\n            url: '',\r\n            icon: '',\r\n            children: [\r\n                {\r\n                    title: 'دسته چک ها',\r\n                    url: '#/cheque-categories',\r\n                    icon: ''\r\n                },\r\n                {\r\n                    title: 'بانک ها',\r\n                    url: '#/banks',\r\n                    icon: ''\r\n                }\r\n            ]\r\n        });\r\n});",
    "import accModule from '../acc.module';\r\n\r\naccModule.config($routeProvider => {\r\n    $routeProvider\r\n        .when('/', {\r\n            controller: 'homeController',\r\n            templateUrl: 'partials/views/home.html'\r\n        })\r\n        .when('/general-ledger-accounts', {\r\n            controller: 'generalLedgerAccountsController',\r\n            templateUrl: 'partials/views/generalLedgerAccounts.html'\r\n        })\r\n        .when('/subsidiary-ledger-accounts/:generalLedgerAccountId', {\r\n            controller: 'subsidiaryLedgerAccountsController',\r\n            templateUrl: 'partials/views/subsidiaryLedgerAccounts.html'\r\n        })\r\n        .when('/subsidiary-ledger-account/:generalLedgerAccountId/create', {\r\n            controller: 'subsidiaryLedgerAccountCreateController',\r\n            templateUrl: 'partials/views/subsidiaryLedgerAccountCreate.html'\r\n        })\r\n        .when('/subsidiary-ledger-account/:id/edit', {\r\n            controller: 'subsidiaryLedgerAccountUpdateController',\r\n            templateUrl: 'partials/views/subsidiaryLedgerAccountUpdate.html'\r\n        })\r\n        .when('/detail-accounts', {\r\n            controller: 'detailAccountsController',\r\n            templateUrl: 'partials/views/detailAccounts.html'\r\n        })\r\n        .when('/detail-account/create', {\r\n            controller: 'detailAccountCreateController',\r\n            templateUrl: 'partials/views/detailAccountCreate.html'\r\n        })\r\n        .when('/detail-account/:id/edit', {\r\n            controller: 'detailAccountUpdateController',\r\n            templateUrl: 'partials/views/detailAccountUpdate.html'\r\n        })\r\n        .when('/dimensions', {\r\n            controller: 'dimensionsController',\r\n            templateUrl: 'partials/views/dimensions.html'\r\n        })\r\n        .when('/journals', {\r\n            controller: 'journalsController',\r\n            templateUrl: 'partials/views/journals.html'\r\n        })\r\n        .when('/journal/:id/edit', {\r\n            controller: 'journalUpdateController',\r\n            templateUrl: 'partials/views/journalUpdate.html'\r\n        })\r\n        .when('/journal-line/:journalId/create', {\r\n            controller: 'journalLineCreateController',\r\n            templateUrl: 'partials/views/journalLineCreateOrUpdate.html'\r\n        })\r\n        .when('/journal-line/:id/edit', {\r\n            controller: 'journalLineUpdateController',\r\n            templateUrl: 'partials/views/journalLineCreateOrUpdate.html'\r\n        }).when('/not-found', {\r\n            templateUrl: 'partials/views/notFound.html'\r\n        })\r\n        .when('/cheque-categories', {\r\n            controller: 'chequeCategoriesController',\r\n            templateUrl: 'partials/views/chequeCategories.html'\r\n        })\r\n        .when('/banks', {\r\n            controller: 'banksController',\r\n            templateUrl: 'partials/views/banks.html'\r\n        })\r\n        .otherwise('/not-found');\r\n});\r\n\r\naccModule.run($route => $route.reload());",
    "import accModule from '../acc.module';\r\nimport 'angular-translate-loader-url';\r\nimport config from '../localData/config';\r\n\r\naccModule.config($translateProvider => {\r\n    if (config.isClientTest()) {\r\n        $translateProvider.useUrlLoader('client/translate.json');\r\n    } else {\r\n        let translate = JSON.parse(localStorage.getItem('translate'));\r\n\r\n        $translateProvider.translations('fa_IR', translate);\r\n        $translateProvider.useStorage('translateStorageService');\r\n    }\r\n\r\n    $translateProvider.preferredLanguage('fa_IR');\r\n    $translateProvider.useSanitizeValueStrategy('escapeParameters');\r\n});",
    "import accModule from '../acc.module';\r\n\r\nfunction banksController($scope, logger, confirm, bankApi, constants, translate) {\r\n    $scope.gridDateSource = {\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.bank.all(),\r\n                dataType: \"json\",\r\n                contentType: 'application/json; charset=utf-8',\r\n                type: 'GET'\r\n            },\r\n            update: {\r\n                url: (model)=> '/api/banks/{0}'.format(model.id),\r\n                dataType: 'json',\r\n                type: \"PUT\"\r\n            },\r\n            create: {\r\n                url: '/api/banks',\r\n                dataType: 'json',\r\n                type: 'POST'\r\n            },\r\n            destroy: {\r\n                url: (model)=> '/api/banks/{0}'.format(model.id),\r\n                dataType: 'json',\r\n                type: \"DELETE\"\r\n            }\r\n        },\r\n        pageSize: 20,\r\n        schema: {\r\n            data: 'data',\r\n            total: 'total',\r\n            model: {\r\n                id: 'id',\r\n                fields: {\r\n                    title: {validation: {required: true}}\r\n                },\r\n\r\n            }\r\n        },\r\n        serverPaging: true,\r\n        serverFiltering: true,\r\n        serverSorting: true\r\n    };\r\n\r\n\r\n    let gridOption = $scope.gridOption = {\r\n        columns: [\r\n            {name: 'title', title: translate('Title'), type: 'string'}\r\n        ],\r\n        commands: [\r\n            'edit',\r\n            {\r\n                title: translate('Remove'),\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove Bank'),\r\n                        translate('Are you sure ?'))\r\n                        .then(function () {\r\n                            gridOption.grid.dataSource.remove(current);\r\n                            gridOption.grid.dataSource.sync()\r\n                                .then(function () {\r\n                                    logger.success();\r\n                                    $scope.$apply();\r\n                                });\r\n                        });\r\n                }\r\n            }\r\n        ],\r\n        editable: \"inline\"\r\n    }\r\n\r\n    $scope.create = ()=> {\r\n        gridOption.grid.addRow();\r\n    }\r\n\r\n\r\n}\r\n\r\naccModule.controller('banksController', banksController);",
    "import accModule from '../acc.module';\r\n\r\nfunction chequeCategoriesController($scope, logger, chequeCategoryApi, confirm, constants, translate, $timeout,\r\n                                    chequeCategoryCreateModalService,\r\n                                    chequeCategoryUpdateModalService) {\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'bankId', title: translate('Bank'), width: '10%', type: 'bank', template: '${data.bank}'},\r\n            {name: 'totalPages', title: translate('Total pages'), type: 'number', width: '10%'},\r\n            {name: 'firstPageNumber', title: translate('First page number'), type: 'number', width: '10%'},\r\n            {name: 'lastPageNumber', title: translate('Last page number'), type: 'number', width: '10%'},\r\n            {\r\n                name: 'detailAccountId',\r\n                title: translate('Detail account'),\r\n                type: 'detailAccount',\r\n                template: '${data.detailAccount}'\r\n            },\r\n            {\r\n                name: 'status',\r\n                title: translate('Status'),\r\n                type: 'chequeCategoryStatus',\r\n                template: '${data.statusDisplay}',\r\n                width: '10%'\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                action: function (current) {\r\n                    chequeCategoryUpdateModalService.show({id: current.id})\r\n                        .then(()=> {\r\n                            logger.success();\r\n                            $scope.gridOption.refresh();\r\n                        });\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove Cheque category'),\r\n                        translate('Are you sure ?'))\r\n                        .then(()=> {\r\n                            chequeCategoryApi.remove(current.id)\r\n                                .then(function () {\r\n                                    logger.success();\r\n                                    $scope.gridOption.refresh();\r\n                                })\r\n                                .catch((errors)=> $scope.errors = errors)\r\n                                .finally(()=> $scope.isSaving = false);\r\n                        })\r\n\r\n                }\r\n            }\r\n        ],\r\n        readUrl: constants.urls.chequeCategory.all(),\r\n        current: null,\r\n        selectable: true\r\n    };\r\n\r\n    $scope.chequeGridOption = {\r\n        columns: [\r\n            {name: 'number', title: translate('Number'), width: '10%', type: 'number'},\r\n            {name: 'date', title: translate('Date'), type: 'date', width: '10%'},\r\n            {name: 'description', title: translate('Description'), type: 'string', width: '30%'},\r\n            {name: 'amount', title: translate('Amount'), type: 'number', width: '10%', format: '{0:#,##}'}\r\n        ],\r\n        commands: [],\r\n        //filterable: false\r\n    };\r\n    $scope.canShowCheques = false;\r\n\r\n    $scope.$watch('gridOption.current', (newValue)=> {\r\n        if (!newValue)\r\n            return $scope.canShowCheques = false;\r\n\r\n        $scope.canShowCheques = false;\r\n\r\n        $timeout(()=> {\r\n            $scope.chequeGridOption.readUrl = constants.urls.cheque.all(newValue.id);\r\n\r\n            $scope.canShowCheques = true;\r\n        }, 500);\r\n\r\n    });\r\n\r\n    $scope.create = ()=> {\r\n        chequeCategoryCreateModalService.show()\r\n            .then(()=> {\r\n                logger.success();\r\n                $scope.gridOption.refresh();\r\n            });\r\n    }\r\n}\r\n\r\naccModule.controller('chequeCategoriesController', chequeCategoriesController);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction detailAccountCreateController($scope, logger, navigate, formService,\r\n                                       detailAccountApi) {\r\n\r\n    $scope.errors = [];\r\n\r\n    $scope.detailAccount = {\r\n        code: '',\r\n        title: '',\r\n        description: ''\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        $scope.errors.asEnumerable().removeAll();\r\n        $scope.isSaving = true;\r\n\r\n        detailAccountApi.create($scope.detailAccount)\r\n            .then(()=> {\r\n                logger.success();\r\n                navigate('detailAccounts');\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n};\r\n\r\naccModule.controller('detailAccountCreateController', detailAccountCreateController);",
    "import accModule from '../acc.module';\r\n\r\nfunction detailAccountUpdateController($scope, logger, navigate, $routeParams,\r\n                                       detailAccountApi) {\r\n\r\n    let id = $routeParams.id;\r\n\r\n    $scope.errors = [];\r\n\r\n    $scope.detailAccount = {\r\n        code: '',\r\n        title: '',\r\n        description: ''\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    detailAccountApi.getById(id)\r\n        .then(result => $scope.detailAccount = result);\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n        if (form.$invalid)\r\n            return;\r\n        $scope.errors.asEnumerable().removeAll();\r\n        $scope.isSaving = true;\r\n\r\n        detailAccountApi.create($scope.detailAccount)\r\n            .then(()=> {\r\n                logger.success();\r\n                navigate('detailAccounts');\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.activate = ()=> {\r\n        detailAccountApi.activate(id)\r\n            .then(()=> {\r\n                $scope.detailAccount.isActive = true;\r\n                logger.success();\r\n            })\r\n            .catch((errors)=> $scope.errors = errors);\r\n    }\r\n\r\n    $scope.deactivate = ()=> {\r\n        detailAccountApi.deactivate(id)\r\n            .then(()=> {\r\n                $scope.detailAccount.isActive = false;\r\n                logger.success();\r\n            })\r\n            .catch((errors)=> $scope.errors = errors);\r\n    }\r\n\r\n};\r\n\r\naccModule.controller('detailAccountUpdateController', detailAccountUpdateController);",
    "import accModule from '../acc.module';\r\n\r\nfunction detailAccountsController($scope, logger, translate, confirm, navigate,\r\n                                  detailAccountApi) {\r\n    \"use strict\";\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'code', title: translate('Code'), width: '120px', type: 'string'},\r\n            {name: 'title', title: translate('Title'), type: 'string'}\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                name: 'edit detail account',\r\n                action: function (current) {\r\n                    navigate('detailAccountUpdate', {id: current.id});\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove Detail account'),\r\n                        translate('Are you sure ?'))\r\n                        .then(function () {\r\n                            detailAccountApi.remove(current.id)\r\n                                .then(function () {\r\n                                    logger.success();\r\n                                    $scope.gridOption.refresh();\r\n                                })\r\n                                .catch((errors)=> $scope.errors = errors)\r\n                                .finally(()=> $scope.isSaving = false);\r\n                        })\r\n\r\n                }\r\n            }\r\n        ],\r\n        readUrl: detailAccountApi.url.getAll\r\n    };\r\n}\r\n\r\naccModule.controller('detailAccountsController', detailAccountsController);",
    "import accModule from '../acc.module';\r\n\r\nfunction dimensionsController($scope, logger, translate, confirm,\r\n                              dimensionCategoryApi, dimensionApi,\r\n                              dimensionCreateModalService,\r\n                              dimensionUpdateModalService) {\r\n    \"use strict\";\r\n    $scope.categories = [];\r\n    $scope.currentCategory = {};\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result)=> {\r\n            let cats = result.data;\r\n\r\n            $scope.categories = cats.asEnumerable().select(cat =>\r\n                angular.extend({}, cat, {\r\n                    gridOption: gridOptionFactory(cat),\r\n                    editMode: 'read',\r\n                    canShowDimensions: false,\r\n                    errors: []\r\n                })\r\n            ).toArray();\r\n        });\r\n\r\n    $scope.createCategory = ()=> {\r\n        $scope.categories.push({\r\n            id: null,\r\n            title: '',\r\n            editMode: 'new',\r\n            canShowDimensions: false,\r\n            isSaving: false,\r\n            errors: []\r\n        });\r\n    }\r\n\r\n    $scope.saveCategory = (cat)=> {\r\n        let cmd = {title: cat.title};\r\n\r\n        if (cat.editMode == 'new') {\r\n            dimensionCategoryApi.create(cmd)\r\n                .then((result)=> {\r\n                    cat.id = result.id;\r\n                    cat.editMode = 'read';\r\n                    cat.gridOption = gridOptionFactory(cat);\r\n\r\n                    logger.success();\r\n                })\r\n                .catch((errors)=> cat.errors = errors)\r\n                .finally(()=> cat.isSaving = false);\r\n        }\r\n        else if (cat.editMode == 'edit') {\r\n            dimensionCategoryApi.update(cat.id, cmd)\r\n                .then(()=> {\r\n                    cat.editMode = 'read';\r\n                    logger.success();\r\n                })\r\n                .catch((errors)=> cat.errors = errors)\r\n                .finally(()=> cat.isSaving = false);\r\n        }\r\n    }\r\n\r\n    $scope.startToEditingCategoryTitle = (cat)=> {\r\n        cat.originalData = {\r\n            title: cat.title\r\n        };\r\n        cat.editMode = 'edit';\r\n    }\r\n\r\n    $scope.cancelEditingCategoryTitle = (cat)=> {\r\n        cat.title = cat.originalData.title;\r\n        cat.editMode = 'read';\r\n    }\r\n\r\n    $scope.changeShowDimensionStatus = (cat) => {\r\n        cat.canShowDimensions = !cat.canShowDimensions;\r\n    };\r\n\r\n    $scope.createDimension = (cat)=> {\r\n        dimensionCreateModalService.show({categoryId: cat.id})\r\n            .then(()=> {\r\n                cat.gridOption.refresh();\r\n                logger.success();\r\n            });\r\n    };\r\n\r\n    $scope.select = (cat)=> $scope.currentCategory = cat;\r\n\r\n    function gridOptionFactory(cat) {\r\n        let columns = [\r\n            {name: 'code', title: translate('Code'), width: '120px', type: 'string'},\r\n            {name: 'title', title: translate('Title'), type: 'string'}\r\n        ];\r\n\r\n        let commands = [\r\n            {\r\n                title: translate('Edit'),\r\n                action: function (current) {\r\n                    dimensionUpdateModalService.show({id: current.id})\r\n                        .then(()=> {\r\n                            getLocalCategoryById(current.categoryId)\r\n                                .gridOption.refresh();\r\n                            logger.success();\r\n                        });\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove Dimension'),\r\n                        translate('Are you sure ?'))\r\n                        .then(function () {\r\n                            dimensionApi.remove(current.id)\r\n                                .then(function () {\r\n                                    getLocalCategoryById(current.categoryId)\r\n                                        .gridOption.refresh();\r\n                                    logger.success();\r\n                                })\r\n                                .catch(function (err) {\r\n                                    err.errors.forEach(function (message) {\r\n                                        logger.error(message);\r\n                                    });\r\n                                });\r\n                        })\r\n\r\n                }\r\n            }\r\n        ];\r\n\r\n        return {\r\n            columns: columns,\r\n            commands: commands,\r\n            readUrl: dimensionApi.url.getAll(cat.id)\r\n        }\r\n    }\r\n\r\n    function getLocalCategoryById(id) {\r\n        let cat = $scope.categories.asEnumerable()\r\n            .first((c)=> c.id == id);\r\n\r\n        return cat;\r\n    }\r\n\r\n}\r\n\r\naccModule.controller('dimensionsController', dimensionsController);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction generalLedgerAccountsController($scope, logger, translate, confirm,\r\n                                         generalLedgerAccountApi,\r\n                                         generalLedgerAccountCreateModalService,\r\n                                         generalLedgerAccountUpdateModalService) {\r\n    let columns = [\r\n        {name: 'code', title: translate('Code'), width: '120px', type: 'string'},\r\n        {name: 'title', title: translate('Title'), type: 'string'},\r\n        {\r\n            name: 'postingType',\r\n            title: translate('Posting type'),\r\n            type: 'postingType',\r\n            width: '150px',\r\n            template: '${data.postingTypeDisplay}'\r\n        },\r\n        {\r\n            name: 'balanceType',\r\n            title: translate('Balance type'),\r\n            type: 'balanceType',\r\n            width: '150px',\r\n            template: '${data.balanceTypeDisplay}'\r\n        },\r\n        {\r\n            name: 'isActive',\r\n            title: translate('Is active ?'),\r\n            type: 'activeType',\r\n            width: '150px',\r\n            template: '<i class=\"glyphicon glyphicon-${data.isActive ? \"ok-circle\" : \"remove-circle\"}\"' +\r\n            'style=\"font-size: 20px;color:${data.isActive ? \"green\" : \"red\"}\">' +\r\n            '</i>'\r\n        }\r\n    ];\r\n\r\n    let commands = [\r\n        {\r\n            title: translate('Edit'),\r\n            name: 'edit general ledger account',\r\n            action: function (current) {\r\n                generalLedgerAccountUpdateModalService.show({id: current.id})\r\n                    .then(function () {\r\n                        $scope.gridOption.refresh();\r\n                    });\r\n            }\r\n        },\r\n        {\r\n            title: translate('Remove'),\r\n            action: function (current) {\r\n                confirm(\r\n                    translate('Remove General ledger account'),\r\n                    translate('Are you sure ?'))\r\n                    .then(function () {\r\n                        generalLedgerAccountApi.remove(current.id)\r\n                            .then(function () {\r\n                                logger.success();\r\n                                $scope.gridOption.refresh();\r\n                            })\r\n                            .catch((errors)=> $scope.errors = errors)\r\n                            .finally(()=> $scope.isSaving = false);\r\n                    })\r\n\r\n            }\r\n        }\r\n    ];\r\n\r\n    $scope.gridOption = {\r\n        columns: columns,\r\n        commands: commands,\r\n        readUrl: generalLedgerAccountApi.url.getAll,\r\n        current: null,\r\n        selectable: true\r\n    };\r\n\r\n    $scope.create = function () {\r\n        generalLedgerAccountCreateModalService.show()\r\n            .then(function () {\r\n                $scope.gridOption.refresh();\r\n            });\r\n    };\r\n}\r\n\r\naccModule\r\n    .controller('generalLedgerAccountsController', generalLedgerAccountsController);",
    "import accModule from '../acc.module';\r\n\r\nfunction homeController($scope, $timeout, $route, $rootScope, constants, logger, $cookies) {\r\n    $scope.current = {\r\n        fiscalPeriod: parseInt($cookies.get('current-period'))\r\n    };\r\n\r\n    $scope.periodDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.period.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.periodOnChange = (e)=> {\r\n        let item = e.sender.dataItem();\r\n        $cookies.put('current-period', item.id);\r\n    };\r\n}\r\n\r\naccModule\r\n    .controller('homeController', homeController);",
    "import accModule from '../acc.module';\r\n\r\nfunction journalLineCreateOrUpdateController($scope, navigate, logger, journalLineApi, $routeParams,\r\n                                             constants, formService, $q, $timeout) {\r\n\r\n    let journalId = $routeParams.journalId;\r\n    let id = $routeParams.id;\r\n    let editMode = $scope.editMode = journalId == undefined ? 'update' : 'create';\r\n\r\n    $scope.errors = [];\r\n\r\n    $scope.journalLine = {\r\n        generalLedgerAccountId: null,\r\n        subsidiaryLedgerAccountId: null,\r\n        detailAccountId: null,\r\n        dimensions: [],\r\n        description: '',\r\n        amount: null,\r\n        balanceType: ''\r\n    };\r\n\r\n    if (editMode == 'update')\r\n        journalLineApi.getById(id)\r\n            .then((result)=> {\r\n                result.amount = 0;\r\n                result.balanceType = '';\r\n\r\n                if (result.creditor > 0) {\r\n                    result.amount = result.creditor;\r\n                    result.balanceType = 'creditor';\r\n                }\r\n\r\n                if (result.debtor > 0) {\r\n                    result.amount = result.debtor;\r\n                    result.balanceType = 'debtor';\r\n                }\r\n\r\n                $scope.journalLine = result\r\n            });\r\n\r\n    let resetForm = (form)=> {\r\n\r\n        $scope.journalLine = {\r\n            generalLedgerAccountId: null,\r\n            subsidiaryLedgerAccount: null,\r\n            detailAccountId: null,\r\n            description: '',\r\n            amount: null,\r\n            balanceType: ''\r\n        };\r\n\r\n        $timeout(()=> formService.setClean(form), 100);\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    let save = (form)=> {\r\n        let deferred = $q.defer();\r\n\r\n        if (form.$invalid) {\r\n            formService.setDirty(form);\r\n            return;\r\n        }\r\n\r\n        $scope.isSaving = true;\r\n\r\n        let journalLine = $scope.journalLine;\r\n\r\n        let cmd = {\r\n            generalLedgerAccountId: journalLine.generalLedgerAccountId,\r\n            subsidiaryLedgerAccountId: journalLine.subsidiaryLedgerAccountId,\r\n            detailAccountId: journalLine.detailAccountId,\r\n            description: journalLine.description,\r\n            amount: journalLine.amount,\r\n            balanceType: journalLine.balanceType\r\n        };\r\n\r\n        cmd.dimensions = $scope.journalLine.dimensions\r\n            .asEnumerable()\r\n            .select(d=> {\r\n                return {\r\n                    categoryId: d.categoryId,\r\n                    id: d.id\r\n                }\r\n            })\r\n            .toArray();\r\n\r\n        if (editMode == 'create')\r\n            journalLineApi.create(journalId, cmd)\r\n                .then(()=> {\r\n                    deferred.resolve();\r\n                    logger.success();\r\n                })\r\n                .catch((errors)=> $scope.errors = errors)\r\n                .finally(()=> $scope.isSaving = false);\r\n\r\n        if (editMode == 'update')\r\n            journalLineApi.update(id, cmd)\r\n                .then(()=> {\r\n                    deferred.resolve();\r\n                    logger.success();\r\n                })\r\n                .catch((errors)=> $scope.errors = errors)\r\n                .finally(()=> $scope.isSaving = false);\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    $scope.saveAndNew = (form)=> {\r\n        save(form)\r\n            .then(()=> resetForm(form));\r\n    };\r\n\r\n    $scope.saveAndReturn = (form)=> {\r\n        save(form)\r\n            .then(()=> navigate('journalUpdate', {id: journalId}));\r\n    }\r\n\r\n    $scope.generalLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.generalLedgerAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    }\r\n\r\n    $scope.generalLedgerAccountOnChange = ()=> {\r\n        $scope.journalLine.subsidiaryLedgerAccountId = null;\r\n\r\n        $scope.journalLine.dimensions = [];\r\n        $scope.journalLine.detailAccount = {\r\n            canShow: false,\r\n            isRequired: false\r\n        }\r\n    }\r\n\r\n    $scope.subsidiaryLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: (filter)=> {\r\n                    let generalLegerAccountId = filter.filter.filters\r\n                        .asEnumerable()\r\n                        .first(f => f.field == 'generalLedgerAccountId')\r\n                        .value;\r\n\r\n                    return constants.urls\r\n                        .subsidiaryLedgerAccount\r\n                        .allByGeneralLedgerAccount(generalLegerAccountId)\r\n                }\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    }\r\n\r\n    $scope.subsidiaryLedgerAccountSelect = (e)=> {\r\n        let item = e.sender.dataItem();\r\n\r\n        if (!item) {\r\n            $scope.journalLine.dimensions = [];\r\n            $scope.journalLine.detailAccount = {\r\n                canShow: false,\r\n                isRequired: false\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        $scope.journalLine.dimensions = Array.from(item.dimensionAssignmentStatus)\r\n            .asEnumerable()\r\n            .select(dimensionStatus=> {\r\n                return {\r\n                    id: getDimensionId(dimensionStatus.id),\r\n                    canShow: constants.enums.AssignmentStatus().getKeys('Required', 'NotRequired')\r\n                        .asEnumerable()\r\n                        .contains(dimensionStatus.status),\r\n                    isRequired: dimensionStatus.status == constants.enums.AssignmentStatus().getKey('Required'),\r\n                    categoryId: dimensionStatus.id,\r\n                    categoryTitle: dimensionStatus.title,\r\n                    dataSource: dimensionDataSource(dimensionStatus.id)\r\n                }\r\n            })\r\n            .toArray();\r\n\r\n        $scope.journalLine.detailAccount = {\r\n            canShow: constants.enums.AssignmentStatus()\r\n                .getKeys('Required', 'NotRequired')\r\n                .asEnumerable()\r\n                .contains(item.detailAccountAssignmentStatus),\r\n            isRequired: item.detailAccountAssignmentStatus == constants.enums.AssignmentStatus().getKey('Required')\r\n        };\r\n    };\r\n\r\n    $scope.subsidiaryLedgerAccountDataBound = (e)=> e.sender.trigger('change');\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    let dimensionDataSource = (categoryId)=> {\r\n        return {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: constants.urls.dimension.allByCategory(categoryId)\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        }\r\n    }\r\n\r\n    $scope.changeAmountBalance = ()=>\r\n        $scope.journalLine.balanceType = $scope.journalLine.balanceType == 'debtor'\r\n            ? 'creditor'\r\n            : 'debtor';\r\n\r\n\r\n    let getDimensionId = (categoryId)=> {\r\n        let dimensions = $scope.journalLine.dimensions;\r\n\r\n        if (dimensions == null)\r\n            return null;\r\n\r\n        if (!dimensions.asEnumerable().any(d=> d.categoryId == categoryId))\r\n            return null;\r\n\r\n        return dimensions.asEnumerable().single(d=> d.categoryId == categoryId).id;\r\n    }\r\n}\r\n\r\naccModule\r\n    .controller('journalLineCreateController', journalLineCreateOrUpdateController)\r\n    .controller('journalLineUpdateController', journalLineCreateOrUpdateController);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalLineUpdateController($scope, navigate, logger, journalLineApi, $routeParams,\r\n                                     constants, formService, $q, $timeout) {\r\n\r\n    let id = $routeParams.id;\r\n\r\n    $scope.errors = [];\r\n\r\n    $scope.journalLine = {\r\n        generalLedgerAccountId: null,\r\n        subsidiaryLedgerAccountId: null,\r\n        detailAccountId: null,\r\n        dimensions: [],\r\n        description: '',\r\n        amount: null,\r\n        balanceType: ''\r\n    };\r\n\r\n\r\n    let resetForm = (form)=> {\r\n\r\n        $scope.journalLine = {\r\n            generalLedgerAccountId: null,\r\n            subsidiaryLedgerAccount: null,\r\n            detailAccountId: null,\r\n            description: '',\r\n            amount: null,\r\n            balanceType: ''\r\n        };\r\n\r\n        $timeout(()=> formService.setClean(form), 100);\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    let save = (form)=> {\r\n        let deferred = $q.defer();\r\n\r\n        if (form.$invalid) {\r\n            formService.setDirty(form);\r\n            return;\r\n        }\r\n\r\n        $scope.isSaving = true;\r\n\r\n        let journalLine = $scope.journalLine;\r\n\r\n        let cmd = {\r\n            generalLedgerAccountId: journalLine.generalLedgerAccountId,\r\n            subsidiaryLedgerAccountId: journalLine.subsidiaryLedgerAccount.id,\r\n            detailAccountId: journalLine.detailAccountId,\r\n            description: journalLine.description,\r\n            amount: journalLine.amount,\r\n            balanceType: journalLine.balanceType\r\n        };\r\n\r\n        cmd.dimensions = $scope.journalLine.subsidiaryLedgerAccount.dimensions\r\n            .asEnumerable()\r\n            .select(d=> {\r\n                return {\r\n                    categoryId: d.categoryId,\r\n                    id: d.id\r\n                }\r\n            })\r\n            .toArray();\r\n\r\n        journalLineApi.create(journalId, cmd)\r\n            .then(()=> {\r\n                deferred.resolve();\r\n                logger.success();\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    $scope.saveAndNew = (form)=> {\r\n        save(form)\r\n            .then(()=> resetForm(form));\r\n    };\r\n\r\n    $scope.saveAndReturn = (form)=> {\r\n        save(form)\r\n            .then(()=> navigate('journalUpdate', {id: journalId}));\r\n    }\r\n\r\n    $scope.generalLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.generalLedgerAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    }\r\n\r\n    $scope.generalLedgerAccountOnChange = ()=> {\r\n        $scope.journalLine.subsidiaryLedgerAccountId = null;\r\n\r\n        $scope.journalLine.dimensions = [];\r\n        $scope.journalLine.detailAccount = {\r\n            canShow: false,\r\n            isRequired: false\r\n        }\r\n    }\r\n\r\n    $scope.subsidiaryLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: (filter)=> {\r\n                    let generalLegerAccountId = filter.filter.filters\r\n                        .asEnumerable()\r\n                        .first(f => f.field == 'generalLedgerAccountId')\r\n                        .value;\r\n\r\n                    return constants.urls\r\n                        .subsidiaryLedgerAccount\r\n                        .allByGeneralLedgerAccount(generalLegerAccountId)\r\n                }\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    }\r\n\r\n    $scope.subsidiaryLedgerAccountDataBound = (e)=> e.sender.trigger('change');\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    let dimensionDataSource = (categoryId)=> {\r\n        return {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: constants.urls.dimension.allByCategory(categoryId)\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        }\r\n    }\r\n\r\n    let getDimensionId = (categoryId)=> {\r\n        let dimensions = $scope.journalLine.dimensions;\r\n\r\n        if (dimensions == null)\r\n            return null;\r\n\r\n        if (!dimensions.asEnumerable().any(d=> d.categoryId == categoryId))\r\n            return null;\r\n\r\n        return dimensions.asEnumerable().single(d=> d.categoryId == categoryId).id;\r\n    }\r\n\r\n    $scope.changeAmountBalance = ()=>\r\n        $scope.journalLine.balanceType = $scope.journalLine.balanceType == 'debtor'\r\n            ? 'creditor'\r\n            : 'debtor';\r\n\r\n    $scope.subsidiaryLedgerAccountSelect = (e)=> {\r\n        let item = e.sender.dataItem();\r\n\r\n        if (!item) {\r\n            $scope.journalLine.dimensions = [];\r\n            $scope.journalLine.detailAccount = {\r\n                canShow: false,\r\n                isRequired: false\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        $scope.journalLine.dimensions = Array.from(item.dimensionAssignmentStatus)\r\n            .asEnumerable()\r\n            .select(dimensionStatus=> {\r\n                return {\r\n                    id: getDimensionId(dimensionStatus.id),\r\n                    canShow: constants.enums.AssignmentStatus().getKeys('Required', 'NotRequired')\r\n                        .asEnumerable()\r\n                        .contains(dimensionStatus.status),\r\n                    isRequired: dimensionStatus.status == constants.enums.AssignmentStatus().getKey('Required'),\r\n                    categoryId: dimensionStatus.id,\r\n                    categoryTitle: dimensionStatus.title,\r\n                    dataSource: dimensionDataSource(dimensionStatus.id)\r\n                }\r\n            })\r\n            .toArray();\r\n\r\n        $scope.journalLine.detailAccount = {\r\n            canShow: constants.enums.AssignmentStatus()\r\n                .getKeys('Required', 'NotRequired')\r\n                .asEnumerable()\r\n                .contains(item.detailAccountAssignmentStatus),\r\n            isRequired: item.detailAccountAssignmentStatus == constants.enums.AssignmentStatus().getKey('Required')\r\n        };\r\n    };\r\n}\r\n\r\n//accModule.controller('journalLineUpdateController', journalLineUpdateController);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalUpdateController($scope, logger, confirm, translate, navigate, $routeParams,\r\n                                 journalApi, journalLineApi,\r\n                                 journalLineCreateControllerModalService,\r\n                                 journalLineUpdateControllerModalService,\r\n                                 journalBookkeepingService,\r\n                                 journalAttachImageService,\r\n                                 writeChequeOnJournalLineEntryService) {\r\n\r\n    let id = $routeParams.id;\r\n    $scope.errors = [];\r\n    $scope.journal = {\r\n        temporaryNumber: null,\r\n        temporaryDate: null,\r\n        number: null,\r\n        date: null,\r\n        description: ''\r\n    };\r\n\r\n    $scope.canShowNumberAndDate = false;\r\n\r\n    function fetch() {\r\n        journalApi.getById(id)\r\n            .then((result)=> {\r\n                $scope.journal = result;\r\n\r\n                $scope.canShowNumberAndDate = result.journalStatus != 'Temporary'\r\n            });\r\n    }\r\n\r\n    fetch();\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'row', title: translate('Row'), width: '60px', type: 'number'},\r\n            {\r\n                name: 'generalLedgerAccountId',\r\n                title: translate('General ledger account'),\r\n                type: 'generalLedgerAccount',\r\n                template: '${data.generalLedgerAccountCode}',\r\n                width: '70px'\r\n            },\r\n            {\r\n                name: 'subsidiaryLedgerAccountId',\r\n                title: translate('Subsidiary ledger account'),\r\n                type: 'subsidiaryLedgerAccount',\r\n                template: '${data.subsidiaryLedgerAccountCode}',\r\n                width: '70px'\r\n            },\r\n            {\r\n                name: 'detailAccountId',\r\n                title: translate('Detail account'),\r\n                type: 'detailAccount',\r\n                template: '${data.detailAccountCode}',\r\n                width: '100px'\r\n            },\r\n            {name: 'article', title: translate('Article'), width: '300px', type: 'string'},\r\n            {\r\n                name: 'debtor', title: translate('Debtor'), width: '100px', type: 'number', format: '{0:#,##}',\r\n                aggregates: ['sum'], footerTemplate: \"{0}: #= kendo.toString(sum,'n0') #\".format(translate('Sum'))\r\n            },\r\n            {\r\n                name: 'creditor', title: translate('Creditor'), width: '100px', type: 'number', format: '{0:#,##}',\r\n                aggregates: ['sum'], footerTemplate: \"{0}: #= kendo.toString(sum,'n0') #\".format(translate('Sum'))\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                action: function (current) {\r\n                    journalLineUpdateControllerModalService\r\n                        .show({\r\n                            journalId: id,\r\n                            id: current.id\r\n                        })\r\n                        .then(()=> $scope.gridOption.refresh());\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove General ledger account'),\r\n                        translate('Are you sure ?'))\r\n                        .then(function () {\r\n                            journalLineApi.remove(current.id)\r\n                                .then(function () {\r\n                                    logger.success();\r\n                                    $scope.gridOption.refresh();\r\n                                })\r\n                                .catch((errors)=>\r\n                                    logger.error(errors.join('<b/>')));\r\n                        })\r\n\r\n                }\r\n            }\r\n        ],\r\n        current: null,\r\n        selectable: true,\r\n        filterable: false,\r\n        readUrl: journalLineApi.url.getAll(id)\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n        if (form.$invalid)\r\n            return;\r\n\r\n        $scope.errors.asEnumerable().removeAll();\r\n\r\n        $scope.isSaving = true;\r\n\r\n        journalApi.update(id, $scope.journal)\r\n            .then(()=> {\r\n                logger.success();\r\n            })\r\n            .catch((errors)=>$scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.createJournalLine = ()=> {\r\n        journalLineCreateControllerModalService\r\n            .show({journalId: id})\r\n            .then(()=> $scope.gridOption.refresh())\r\n    };\r\n\r\n    $scope.bookkeeping = ()=> {\r\n        journalBookkeepingService.show({id: id})\r\n            .then(()=> {\r\n                logger.success();\r\n                fetch();\r\n            });\r\n    };\r\n\r\n    $scope.attachImage = ()=> {\r\n        journalAttachImageService.show({id: id})\r\n            .then(()=> {\r\n                logger.success();\r\n                fetch();\r\n            });\r\n    }\r\n\r\n    $scope.writeCheque = ()=> {\r\n        let current = $scope.gridOption.current;\r\n\r\n        writeChequeOnJournalLineEntryService.show({\r\n            journalLineId: current.id,\r\n            detailAccountId: current.detailAccountId,\r\n            detailAccountDisplay: current.detailAccountDisplay,\r\n            amount: current.creditor,\r\n            description: current.article,\r\n            date: $scope.journal.date\r\n        }).then(()=> {\r\n            $scope.gridOption.refresh();\r\n            logger.success();\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\naccModule.controller('journalUpdateController', journalUpdateController);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalsController($scope, translate, journalApi, navigate, logger,\r\n                            journalCreateModalControllerService) {\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'number', title: translate('Number'), width: '120px', type: 'number'},\r\n            {name: 'date', title: translate('Date'), type: 'date'},\r\n            {name: 'temporaryNumber', title: translate('Temporary number'), width: '120px', type: 'number'},\r\n            {name: 'temporaryDate', title: translate('Temporary date'), type: 'date'},\r\n            {\r\n                name: 'journalStatus',\r\n                title: translate('Journal status'),\r\n                type: 'journalStatus',\r\n                template: '${data.journalStatusDisplay}'\r\n            },\r\n            {name: 'sumDebtor', title: translate('sum debtor'), type: 'number', format: '{0:#,##}', filterable: false},\r\n            {\r\n                name: 'sumCreditor',\r\n                title: translate('sum creditor'),\r\n                type: 'number',\r\n                format: '{0:#,##}',\r\n                filterable: false\r\n            },\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                action: function (current) {\r\n                    navigate('journalUpdate', {\r\n                        id: current.id\r\n                    });\r\n                }\r\n            }\r\n        ],\r\n        readUrl: journalApi.url.getAll\r\n    };\r\n\r\n    $scope.create = ()=> {\r\n        journalCreateModalControllerService.show()\r\n            .then((result)=> {\r\n                logger.success();\r\n                navigate('journalUpdate', {\r\n                    id: result.id\r\n                });\r\n            });\r\n    }\r\n\r\n\r\n}\r\n\r\naccModule.controller('journalsController', journalsController);",
    "import accModule from '../acc.module';\r\n\r\nfunction shellController($scope, menuItems, translate, $rootScope) {\r\n    \"use strict\";\r\n\r\n    $scope.isToggleMenuOpen = false;\r\n    $scope.menuItems = menuItems;\r\n\r\n    $rootScope.blockUi = {\r\n        isBlocking: false,\r\n        message: translate('Please wait ...'),\r\n        block: (message)=> {\r\n            $rootScope.blockUi.message = message\r\n                ? message\r\n                : translate('Please wait ...');\r\n\r\n            $rootScope.blockUi.isBlocking = true;\r\n        },\r\n        unBlock: ()=> {\r\n            $rootScope.blockUi.isBlocking = false;\r\n        }\r\n    }\r\n\r\n    $scope.toggle = function () {\r\n        if ($scope.isToggleMenuOpen)\r\n            $scope.isToggleMenuOpen = false;\r\n        else\r\n            $scope.isToggleMenuOpen = true;\r\n    }\r\n}\r\n\r\naccModule\r\n    .controller('shellController', shellController);",
    "import accModule from '../acc.module';\r\n\r\nfunction subsidiaryLedgerAccountCreateController($scope, logger, navigate, $routeParams,\r\n                                                 constants, formService,\r\n                                                 subsidiaryLedgerAccountApi,\r\n                                                 dimensionCategoryApi) {\r\n\r\n    let generalLedgerAccountId = $routeParams.generalLedgerAccountId;\r\n\r\n    $scope.errors = [];\r\n    $scope.assignmentStatus = constants.enums.AssignmentStatus().data;\r\n\r\n    $scope.subsidiaryLedgerAccount = {\r\n        code: '',\r\n        title: '',\r\n        detailAccountAssignmentStatus: null,\r\n        isBankAccount: false,\r\n        dimension1AssignmentStatus: null,\r\n        dimension2AssignmentStatus: null,\r\n        dimension3AssignmentStatus: null,\r\n    };\r\n\r\n    $scope.dimensionCategories = [];\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result)=> {\r\n            $scope.dimensionCategories = result.data;\r\n        });\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n        if (form.$invalid) {\r\n            formService.setDirty(form);\r\n            return;\r\n        }\r\n\r\n        $scope.isSaving = true;\r\n\r\n        subsidiaryLedgerAccountApi.create(\r\n            generalLedgerAccountId,\r\n            $scope.subsidiaryLedgerAccount)\r\n            .then(() => {\r\n                logger.success();\r\n                navigate(\r\n                    'subsidiaryLedgerAccounts',\r\n                    {generalLedgerAccountId: generalLedgerAccountId});\r\n            }).catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    }\r\n}\r\n\r\naccModule\r\n    .controller('subsidiaryLedgerAccountCreateController', subsidiaryLedgerAccountCreateController);",
    "import accModule from '../acc.module';\r\n\r\nfunction subsidiaryLedgerAccountUpdateController($scope, logger, navigate, constants,\r\n                                                 $routeParams, formService,\r\n                                                 subsidiaryLedgerAccountApi,\r\n                                                 dimensionCategoryApi) {\r\n    let id = $routeParams.id;\r\n\r\n    $scope.errors = [];\r\n    $scope.assignmentStatus = new constants.enums.AssignmentStatus().data\r\n    $scope.dimensionCategories = [];\r\n\r\n    $scope.subsidiaryLedgerAccount = {\r\n        code: '',\r\n        title: '',\r\n        detailAccountAssignmentStatus: null,\r\n        isBankAccount: false,\r\n        dimension1AssignmentStatus: null,\r\n        dimension2AssignmentStatus: null,\r\n        dimension3AssignmentStatus: null,\r\n        isActive: true\r\n    };\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result)=> {\r\n            $scope.dimensionCategories = result.data;\r\n        });\r\n\r\n    subsidiaryLedgerAccountApi.getById(id)\r\n        .then((result)=>\r\n            $scope.subsidiaryLedgerAccount = result);\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n\r\n        if (form.$invalid) {\r\n            formService.setDirty(form);\r\n            return;\r\n        }\r\n\r\n        $scope.isSaving = true;\r\n\r\n        subsidiaryLedgerAccountApi\r\n            .update(id, $scope.subsidiaryLedgerAccount)\r\n            .then(()=> {\r\n                logger.success();\r\n                navigate('subsidiaryLedgerAccounts', {\r\n                    generalLedgerAccountId: $scope.subsidiaryLedgerAccount.generalLedgerAccountId\r\n                });\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    }\r\n\r\n    $scope.isActivating = false;\r\n\r\n    $scope.activate = ()=> {\r\n        $scope.isActivating = true;\r\n\r\n        subsidiaryLedgerAccountApi.activate(id)\r\n            .then(()=> {\r\n                logger.success();\r\n                $scope.subsidiaryLedgerAccount.isActive = true;\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isActivating = false);\r\n    };\r\n\r\n\r\n    $scope.isDeactivating = false;\r\n\r\n    $scope.deactivate = ()=> {\r\n        $scope.isDeactivating = true;\r\n\r\n        subsidiaryLedgerAccountApi.deactivate(id)\r\n            .then(()=> {\r\n                logger.success();\r\n                $scope.subsidiaryLedgerAccount.isActive = false;\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isDeactivating = false);\r\n    };\r\n}\r\n\r\naccModule.controller(\r\n    'subsidiaryLedgerAccountUpdateController',\r\n    subsidiaryLedgerAccountUpdateController);",
    "import accModule from '../acc.module';\r\n\r\nfunction subsidiaryLedgerAccountsController($scope, logger, confirm, navigate, $routeParams, translate,\r\n                                            subsidiaryLedgerAccountApi) {\r\n\r\n    let generalLedgerAccountId = $routeParams.generalLedgerAccountId;\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'code', title: translate('Code'), width: '200px', type: 'string'},\r\n            {name: 'title', title: translate('Title'), type: 'string'},\r\n            {\r\n                name: 'isActive',\r\n                title: translate('Is active ?'),\r\n                type: 'activeType',\r\n                width: '170px',\r\n                template: '<i class=\"glyphicon glyphicon-${data.isActive ? \"ok-circle\" : \"remove-circle\"}\"' +\r\n                'style=\"font-size: 20px;color:${data.isActive ? \"green\" : \"red\"}\">' +\r\n                '</i>'\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                name: 'editSubsidiaryLedgerAccount',\r\n                action: (current) => {\r\n                    navigate('subsidiaryLedgerAccountUpdate', {\r\n                        id: current.id\r\n                    });\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                action: (current) => {\r\n                    confirm(\r\n                        translate('Remove Subsidiary ledger account'),\r\n                        translate('Are you sure ?'))\r\n                        .then(()=> {\r\n                            subsidiaryLedgerAccountApi.remove(current.id)\r\n                                .then(()=> {\r\n                                    logger.success();\r\n                                    $scope.gridOption.refresh();\r\n                                })\r\n                                .catch((errors)=> $scope.errors = errors);\r\n                        });\r\n\r\n                }\r\n            }\r\n        ],\r\n        readUrl: subsidiaryLedgerAccountApi.url.getAll(generalLedgerAccountId)\r\n    };\r\n\r\n    $scope.create = ()=> {\r\n        navigate('subsidiaryLedgerAccountCreate', {\r\n            generalLedgerAccountId: generalLedgerAccountId\r\n        });\r\n    }\r\n}\r\n\r\naccModule\r\n    .controller('subsidiaryLedgerAccountsController', subsidiaryLedgerAccountsController);",
    "import accModule from '../acc.module';\r\n\r\nfunction alertTag() {\r\n    let alertType = {\r\n        warning: {icon: 'warning-sign'},\r\n        success: {icon: 'ok-sign'},\r\n        danger: {icon: 'remove-sign'},\r\n        info: {icon: 'info=sign'}\r\n    }\r\n    return {\r\n        restrict: 'E',\r\n        template: '<div class=\"alert alert-{{type}}\" role=\"alert\" style=\"margin-top: 10px\"' +\r\n        'ng-if=\"show\">' +\r\n        '<span class=\"glyphicon glyphicon-{{icon}}\"></span>' +\r\n        '<label>{{text}}</label>' +\r\n        '</div>',\r\n        scope: {\r\n            show: '='\r\n        },\r\n        link: function (scope, element, attrs) {\r\n            scope.text = attrs.text;\r\n            scope.type = attrs.type;\r\n            scope.icon = alertType[scope.type].icon;\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagAlert', alertTag);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction blockUi() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/blockUi.html',\r\n        transclude: true,\r\n        link: function (scope, element, attrs) {\r\n\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagBlockUi', blockUi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction button() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/button-template.html',\r\n        replace: true,\r\n        scope: {\r\n            isWaiting: '=',\r\n            icon: '@',\r\n            styleType: '@',\r\n            title: '@'\r\n        },\r\n        link: function (scope, element, attrs) {\r\n\r\n        }\r\n    };\r\n}\r\n\r\n\r\naccModule.directive('devTagButton', button);",
    "import accModule from '../acc.module';\r\n\r\nfunction combobox() {\r\n    return {\r\n        restrict: 'E',\r\n        replace: true,\r\n        template: '<input kendo-combo-box />',\r\n        link: function (scope, element, attrs) {\r\n\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagComboBox', combobox);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction content() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/content-template.html',\r\n        transclude: true,\r\n        scope: {},\r\n        link: function (scope, element, attrs) {\r\n            scope.title = attrs.title;\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagContent', content);",
    "import accModule from '../acc.module';\r\n\r\n\r\nfunction customValidator() {\r\n    return {\r\n        restrict: 'A',\r\n        require: 'ngModel',\r\n        link: function (scope, element, attr, ctrl) {\r\n\r\n            function customValidator(ngModelValue) {\r\n                if (ngModelValue == 0)\r\n                    ctrl.$setValidity('notZero', false);\r\n                else\r\n                    ctrl.$setValidity('notZero', true);\r\n\r\n                return ngModelValue;\r\n            }\r\n\r\n            ctrl.$parsers.push(customValidator);\r\n        }\r\n    }\r\n}\r\n\r\naccModule.directive('notZero', customValidator);",
    "import accModule from '../acc.module';\r\n\r\nfunction datepicker(){\r\n    return {\r\n        restrict: 'E',\r\n        template: '<input kendo-date-picker style=\"width: 100%;\" />',\r\n        replace: true,\r\n        link: function(scope, element, attrs){\r\n\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagDatepicker', datepicker);",
    "import $ from 'jquery';\r\nimport accModule from '../acc.module';\r\n\r\nfunction dropdownlist() {\r\n    return {\r\n        restrict: 'E',\r\n        require: 'ngModel',\r\n        template: '<select></select>',\r\n        replace: true,\r\n        scope: {\r\n            dataTextField: '@kDataTextField',\r\n            dataValueField: '@kDataValueField',\r\n            optionLabel: '@kOptionLabel',\r\n            dataSource: '=kDataSource',\r\n            onChange: '&kOnChange'\r\n        },\r\n        link: function (scope, element, attrs, ngModel) {\r\n            let dropdown = $(element).kendoDropDownList({\r\n                optionLabel: scope.optionLabel,\r\n                dataTextField: scope.dataTextField,\r\n                dataValueField: scope.dataValueField,\r\n                dataSource: scope.dataSource,\r\n                change: (e)=> {\r\n                    let item = e.sender.dataItem();\r\n\r\n                    scope.$apply(()=>\r\n                        ngModel.$setViewValue(item[scope.dataValueField]));\r\n                    if (scope.onChange)\r\n                        scope.onChange({selectedItem: item});\r\n                }\r\n            }).data('kendoDropDownList');\r\n\r\n            ngModel.$render = ()=> dropdown.value(ngModel.$modelValue);\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagDropdownlist', dropdownlist);",
    "import accModule from '../acc.module';\r\n\r\naccModule.directive('focusMe', function ($timeout, $parse) {\r\n    return {\r\n        link: function (scope, element, attrs) {\r\n            var model = $parse(attrs.focusMe);\r\n            scope.$watch(model, function (value) {\r\n                console.log('value=', value);\r\n                if (value === true) {\r\n                    $timeout(function () {\r\n                        element[0].focus();\r\n                    }, 3000);\r\n                }\r\n            });\r\n            element.bind('blur', function () {\r\n                console.log('blur')\r\n                model.assign(scope, false);\r\n            })\r\n        }\r\n    };\r\n});\r\n",
    "import $ from 'jquery';\r\nimport accModule from '../acc.module';\r\n\r\nfunction grid(gridFilterCellType, $compile) {\r\n    return {\r\n        restrict: 'E',\r\n        transclude: true,\r\n        template: '<div>' +\r\n        '<div ng-transclude style=\"display: none\"></div>' +\r\n        '</div>',\r\n        scope: {\r\n            kOption: '=',\r\n            kDatasource: '=',\r\n            option: '=',\r\n            detailOption: '='\r\n        },\r\n        link: function (scope, element, attrs) {\r\n\r\n\r\n            var grid = {};\r\n\r\n            if (scope.kOption) {\r\n                grid = $(element).kendoGrid(scope.kOption).data(\"kendoGrid\");\r\n            }\r\n            else {\r\n                var option = createKendoGridOption(scope, scope.option);\r\n\r\n                if (scope.detailOption) {\r\n                    var detailOption = createKendoGridOption(scope, scope.detailOption);\r\n\r\n\r\n                    option.detailTemplate = kendo.template('<div class=\"detail-template\"></div>');\r\n                    option.detailInit = function (e) {\r\n                        var detailRow = e.detailRow;\r\n                        var parent = e.data;\r\n\r\n                        if (scope.detailOption.url) {\r\n                            var url = scope.detailOption.url(e.data);\r\n                            detailOption.dataSource = new kendo.data.DataSource({\r\n                                transport: {\r\n                                    read: {\r\n                                        url: url,\r\n                                        dataType: \"json\",\r\n                                        contentType: 'application/json; charset=utf-8',\r\n                                        type: 'GET'\r\n                                    }\r\n                                },\r\n                                schema: {\r\n                                    data: \"data\",\r\n                                    total: \"total\"\r\n                                    //model: model\r\n                                },\r\n                                pageSize: option.pageSize || 20,\r\n                                serverPaging: true,\r\n                                serverFiltering: true,\r\n                                serverSorting: true\r\n                            })\r\n                        }\r\n\r\n                        detailRow.find('.detail-template').kendoGrid(detailOption);\r\n\r\n                        parent.refreshDetail = function () {\r\n                            detailOption.dataSource.read();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var grid = $(element).kendoGrid(option).data(\"kendoGrid\");\r\n\r\n                if (option.commandTemplate)\r\n                    option.commandTemplate.commands.forEach(function (cmd) {\r\n                        $(element).on(\"click\", cmd.selector, function (e) {\r\n                            var dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\r\n                            cmd.action(dataItem);\r\n                            scope.$apply();\r\n                        });\r\n                    });\r\n            }\r\n\r\n            if (scope.option) {\r\n                scope.option.grid = grid;\r\n\r\n                scope.option.refresh = function () {\r\n                    grid.dataSource.read();\r\n                };\r\n            }\r\n\r\n            function createKendoGridOption(scope, option) {\r\n\r\n                var aggregatesForDateSource = [];\r\n\r\n                function setAggregatesForDataSource(column) {\r\n                    let aggregates = column.aggregates;\r\n\r\n                    if (!aggregates)\r\n                        return;\r\n\r\n                    if (aggregates.length == 0)\r\n                        return;\r\n\r\n                    let aggregatesForThisColumn = aggregates.asEnumerable().select(agg=> {\r\n                        return {\r\n                            field: column.name,\r\n                            aggregate: agg\r\n                        };\r\n                    }).toArray();\r\n\r\n                    aggregatesForDateSource = aggregatesForDateSource\r\n                        .asEnumerable()\r\n                        .concat(aggregatesForThisColumn)\r\n                        .toArray();\r\n                }\r\n\r\n                var cols = option.columns\r\n                    .asEnumerable().select(function (col) {\r\n                        setAggregatesForDataSource(col);\r\n\r\n                        return {\r\n                            field: col.name,\r\n                            title: col.title,\r\n                            width: col.width,\r\n                            format: col.format,\r\n                            template: col.template,\r\n                            aggregates: col.aggregates,\r\n                            footerTemplate: col.footerTemplate,\r\n                            filterable: getFilterable(col.type)\r\n                        }\r\n                    }).toArray();\r\n\r\n                var model = {fields: {}};\r\n                option.columns.forEach(function (col) {\r\n                    model.fields[col.name] = {type: gridFilterCellType[col.type].modelType};\r\n                });\r\n\r\n                var commands = option.commands.asEnumerable().select(function (cmd) {\r\n                    if (typeof cmd == \"string\")\r\n                        return cmd;\r\n\r\n                    return {\r\n                        text: cmd.title,\r\n                        imageClass: cmd.imageClass,\r\n                        click: function (e) {\r\n                            e.preventDefault();\r\n\r\n                            var dataItem = this.dataItem($(e.currentTarget).closest(\"tr\"));\r\n                            cmd.action(dataItem);\r\n\r\n                            scope.$apply();\r\n                        }\r\n                    };\r\n                }).toArray();\r\n\r\n                if (option.commandTemplate)\r\n                    cols.push({template: kendo.template($(option.commandTemplate.template).html())});\r\n\r\n                cols.push({command: commands});\r\n\r\n                var filterable = option.filterable == undefined || option.filterable == true\r\n                    ? {\r\n                    mode: 'row',\r\n                    operators: {\r\n                        string: {contains: 'Contains'},\r\n                        number: {\r\n                            eq: 'Equal to',\r\n                            gte: \"Greater than or equal to\",\r\n                            gt: \"Greater than\",\r\n                            lte: \"Less than or equal to\",\r\n                            lt: \"Less than\"\r\n                        },\r\n                        date: {\r\n                            gt: \"After\",\r\n                            lt: \"Before\",\r\n                            eq: \"Equal\"\r\n                        }\r\n                    }\r\n                }\r\n                    : false;\r\n\r\n                var kendGridOption = {\r\n                    dataSource: scope.kDatasource ? scope.kDatasource : new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: option.readUrl,\r\n                                dataType: \"json\",\r\n                                contentType: 'application/json; charset=utf-8',\r\n                                type: 'GET'\r\n                            },\r\n                            parameterMap: function (options) {\r\n                                return options;\r\n                            }\r\n                        },\r\n                        schema: {\r\n                            data: \"data\",\r\n                            total: \"total\",\r\n                            model: model,\r\n                            aggregates: \"aggregates\"\r\n                        },\r\n                        serverAggregates: true,\r\n                        aggregate: aggregatesForDateSource,\r\n                        pageSize: option.pageSize || 20,\r\n                        serverPaging: true,\r\n                        serverFiltering: true,\r\n                        serverSorting: true\r\n                    }),\r\n                    filterable: filterable,\r\n                    pageable: {refresh: true},\r\n                    sortable: true,\r\n                    columns: cols,\r\n                    selectable: option.selectable,\r\n                    editable: option.editable,\r\n                    resizable: true,\r\n                    change: function () {\r\n                        var current = this.dataItem(this.select());\r\n\r\n                        option.current = current;\r\n\r\n                        scope.$apply();\r\n                    }\r\n                };\r\n\r\n                if (option.toolbar)\r\n                    scope.options.toolbar = kendo.template(scope.toolbar);\r\n\r\n                return kendGridOption;\r\n            }\r\n\r\n            function getFilterable(type) {\r\n                var filterable = {};\r\n                var cell = gridFilterCellType[type];\r\n\r\n                if (cell.hasOwnProperty('cell'))\r\n                    cell = cell.cell;\r\n\r\n                filterable.cell = cell;\r\n\r\n                return filterable;\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\n\r\naccModule.directive('devTagGrid', grid);",
    "import $ from 'jquery';\r\nimport accModule from '../acc.module';\r\n\r\nfunction header() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/header-template.html',\r\n        replace: true,\r\n        scope: {},\r\n        link: function (scope, element, attrs) {\r\n            $(element).find('.dropdown')\r\n            $('input').click(function () {\r\n                $('.dropdown').addClass('open');\r\n                $('.dropdown').addClass('test-class');\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction togglemenu() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/togglemenu-template.html',\r\n        replace: true,\r\n        scope: {\r\n            menuitems: '=',\r\n            toggleobservable: '='\r\n        },\r\n        transclude: true,\r\n        link: function (scope, element, attrs) {\r\n            $(\"#menu-toggle\").click(function (e) {\r\n                e.preventDefault();\r\n                $(\"#wrapper\").toggleClass(\"toggled\");\r\n            });\r\n\r\n            createMenu(scope.menuitems, element);\r\n        }\r\n    }\r\n}\r\n\r\nfunction createMenu(menuItems, element) {\r\n    menuItems.forEach(function (item) {\r\n        var $el = $(element).find('.gw-nav');\r\n        var icon = item.icon || 'file';\r\n\r\n        var li = $('<li class=\"init-arrow-down\"></li>');\r\n        li.append('<a href=\"{0}\"></a>'.format(item.url));\r\n        li.find('a').append('<span class=\"webfont-menu\" aria-hidden=\"true\">' +\r\n        '<span class=\"glyphicon glyphicon-{0}\"></span>'.format(icon) +\r\n        '</span>'.format(icon));\r\n\r\n        li.find('a').append('<span class=\"gw=menu-text\">{0}</span>'.format(item.title));\r\n\r\n        if (item.children.length > 0) {\r\n            li.find('a').append('<b class=\"gw-arrow icon-arrow-up8\"></b>');\r\n            li.append('<ul class=\"gw-submenu\"></ul>');\r\n\r\n            item.children.forEach(function (child) {\r\n                var liChild = $('<li></li>');\r\n                var icon = child.icon || 'file';\r\n\r\n                liChild.append('<a href=\"{0}\"></a>'.format(child.url));\r\n                /* liChild.find('a')\r\n                 .append('<span class=\"webfont-submenu glyphicon glyphicon-{0}\"></span>'\r\n                 .format(icon));*/\r\n\r\n                liChild.find('a').append(child.title);\r\n\r\n                li.find('ul').append(liChild);\r\n            });\r\n        }\r\n        ;\r\n\r\n        $el.append(li);\r\n    });\r\n\r\n    menuCreateExpandAndActiveBehavior($(element));\r\n}\r\n\r\nfunction menuCreateExpandAndActiveBehavior($element) {\r\n    var $ele = function (selector) {\r\n        return $element.find(selector);\r\n    };\r\n\r\n    $ele('.gw-nav > li > a').click(function (e) {\r\n        var hrefAttr = $(this).attr('href');\r\n        if (hrefAttr == undefined || hrefAttr == null || hrefAttr == '')\r\n            e.preventDefault();\r\n\r\n        var gw_nav = $ele('.gw-nav');\r\n        gw_nav.find('li').removeClass('active');\r\n        $ele('.gw-nav > li > ul > li').removeClass('active');\r\n\r\n        var checkElement = $(this).parent();\r\n        var ulDom = checkElement.find('.gw-submenu')[0];\r\n\r\n        if (ulDom == undefined) {\r\n            checkElement.addClass('active');\r\n            $ele('.gw-nav').find('li').find('ul:visible').slideUp();\r\n            return;\r\n        }\r\n        if (ulDom.style.display != 'block') {\r\n            gw_nav.find('li').find('ul:visible').slideUp();\r\n            gw_nav.find('li.init-arrow-up').removeClass('init-arrow-up').addClass('arrow-down');\r\n            gw_nav.find('li.arrow-up').removeClass('arrow-up').addClass('arrow-down');\r\n            checkElement.removeClass('init-arrow-down');\r\n            checkElement.removeClass('arrow-down');\r\n            checkElement.addClass('arrow-up');\r\n            checkElement.addClass('active');\r\n            checkElement.find('ul').slideDown(300);\r\n        } else {\r\n            checkElement.removeClass('init-arrow-up');\r\n            checkElement.removeClass('arrow-up');\r\n            checkElement.removeClass('active');\r\n            checkElement.addClass('arrow-down');\r\n            checkElement.find('ul').slideUp(300);\r\n\r\n        }\r\n    });\r\n    $('.gw-nav > li > ul > li > a').click(function () {\r\n        $ele(this).parent().parent().removeClass('active');\r\n        $ele('.gw-nav > li > ul > li').removeClass('active');\r\n        $(this).parent().addClass('active')\r\n    });\r\n};\r\n\r\naccModule\r\n    .directive('devTagHeader', header)\r\n    .directive('devTagTogglemenu', togglemenu);\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction numeric() {\r\n    return {\r\n        restrict: 'E',\r\n        template: '<input type=\"number\" class=\"form-control\" /> ',\r\n        replace: true\r\n    }\r\n}\r\n\r\naccModule.directive('devTagNumeric', numeric);",
    "import accModule from '../acc.module';\r\n\r\nfunction subContent() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/subContent.html',\r\n        transclude: true,\r\n        replace: true,\r\n        scope: {},\r\n        link: function (scope, element, attrs) {\r\n            scope.title = attrs.title;\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagSubContent', subContent);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction textEditor(){\r\n    return {\r\n        restrict: 'E',\r\n        replace: true,\r\n        template: '<textarea kendo-editor k-ng-model=\"ngModel\"></textarea>',\r\n        link: function (scope, element, attrs) {\r\n\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagEditor', textEditor);",
    "import accModule from '../acc.module';\r\nimport $ from 'jquery';\r\nimport 'jquery.filedrop';\r\n\r\nfunction uploader($rootScope, logger) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/uploader.html',\r\n        replace: true,\r\n        scope: {\r\n            before: '&',\r\n            uploaded: '&'\r\n        },\r\n        link: (scope, element, attrs) => {\r\n\r\n            $(element).filedrop({\r\n                url: '/upload',\r\n                dragOver: ()=> {\r\n                    let $elm = $(element).find('.place_drag');\r\n                    $elm.addClass('place_drag_uploader');\r\n                    $elm.find('.hover_upload_list').addClass('webfont_file');\r\n                },\r\n                dragLeave: ()=> {\r\n                    let $elm = $(element).find('.place_drag');\r\n                    $elm.removeClass('place_drag_uploader');\r\n                    $elm.find('.hover_upload_list').removeClass('webfont_file');\r\n                    $elm.find('.place_drag_text1').show();\r\n                },\r\n                uploadStarted: ()=> {\r\n                    let $elm = $(element).find('.place_drag');\r\n                    $elm.removeClass('place_drag_uploader');\r\n                    $elm.find('.hover_upload_list').removeClass('webfont_file');\r\n                    $elm.find('.place_drag_text1').hide();\r\n\r\n                    $rootScope.blockUi.block();\r\n                    scope.$apply();\r\n\r\n                    scope.before();\r\n                },\r\n                uploadFinished: (i, file, response, time)=> {\r\n                    scope.uploaded(response);\r\n                    $rootScope.blockUi.unBlock();\r\n                    scope.$apply();\r\n                },\r\n                error: (err, file) => {\r\n                    $rootScope.blockUi.unBlock();\r\n                    scope.$apply();\r\n\r\n                    switch (err) {\r\n                        case 'BrowserNotSupported':\r\n                            logger.error('browser does not support HTML5 drag and drop');\r\n                            break;\r\n                        case 'TooManyFiles':\r\n                            // user uploaded more than 'maxfiles'\r\n                            break;\r\n                        case 'FileTooLarge':\r\n                            // program encountered a file whose size is greater than 'maxfilesize'\r\n                            // FileTooLarge also has access to the file which was too large\r\n                            // use file.name to reference the filename of the culprit file\r\n                            break;\r\n                        case 'FileTypeNotAllowed':\r\n                            // The file type is not in the specified list 'allowedfiletypes'\r\n                            break;\r\n                        case 'FileExtensionNotAllowed':\r\n                            // The file extension is not in the specified list 'allowedfileextensions'\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                },\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagUploader', uploader);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction validationSummary() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/validationSummary.html',\r\n        replace: true,\r\n        scope: {\r\n            errors: '='\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagValidationSummary', validationSummary);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction amount() {\r\n    return (input)=> {\r\n        if (!input)\r\n            return '';\r\n\r\n        return kendo.toString(input, 'n0');\r\n    }\r\n}\r\n\r\naccModule.filter('amount', amount);",
    "let isClientTest = ()=> {\r\n    let isClientTest = localStorage.getItem('isClientTest');\r\n\r\n    return isClientTest == null ? false : true;\r\n}\r\n\r\n\r\nlet baseTemplateUrl = ()=> {\r\n    return isClientTest() ? 'partials/' : '';\r\n}\r\n\r\nlet config = {\r\n    isClientTest: isClientTest,\r\n    baseTemplateUrl: baseTemplateUrl\r\n};\r\n\r\nexport default config;",
    "import enums from './enums';\r\nimport urls from './urls';\r\nimport config from './config';\r\nimport accModule from '../acc.module';\r\n\r\nlet constants = {\r\n    enums: enums,\r\n    urls: urls,\r\n    config: config\r\n};\r\n\r\naccModule.constant('constants', constants);\r\n\r\nexport default constants;",
    "class Enum {\r\n\r\n    constructor(enums) {\r\n        this.data = enums;\r\n    }\r\n\r\n    getKey(name) {\r\n        return this.data.asEnumerable()\r\n            .single(e=>e.name == name)\r\n            .key;\r\n    }\r\n\r\n    getKeys() {\r\n        let names = Array.from(arguments);\r\n\r\n        return names.asEnumerable()\r\n            .select(name=> this.getKey(name))\r\n            .toArray();\r\n    }\r\n\r\n    get() {\r\n        return this.data;\r\n    }\r\n}\r\n\r\nexport default Enum;",
    "﻿import Enum from './enumType';\r\nlet enums = {};\r\n\r\nenums.AccountPostingType = () => {\r\n    return new Enum([\r\n        {key: 'balanceSheet', display: 'تراز نامه ای'},\r\n        {key: 'benefitAndLoss', display: 'سود و زیانی'}\r\n    ]);\r\n};\r\n\r\nenums.AccountBalanceType = () => {\r\n    return new Enum([\r\n        {key: 'debit', display: 'بدهکار'},\r\n        {key: 'credit', display: 'بستانکار'}\r\n    ]);\r\n}\r\n\r\nenums.AssignmentStatus = () => {\r\n    return new Enum([\r\n        {key: 'Required', display: 'اجباری است'},\r\n        {key: 'NotRequired', display: 'انتخابی است'},\r\n        {key: 'DoesNotHave', display: 'ندارد'}\r\n    ]);\r\n}\r\n\r\nenums.JournalType = () => {\r\n    return new Enum([\r\n        {key: 'Opening', display: 'افتتاحیه'},\r\n        {key: 'Closing', display: 'اختتامیه'}\r\n    ]);\r\n}\r\n\r\nenums.JournalStatus = () => {\r\n    return new Enum([\r\n        {key: 'Temporary', display: 'موقت'},\r\n        {key: 'BookKeeped', display: 'ثبت دفترداری'},\r\n        {key: 'Fixed', display: 'ثبت قطعی'}\r\n    ]);\r\n};\r\n\r\nenums.Active = () => {\r\n    return new Enum([\r\n        {key: true, name: 'showActiveItems', display: 'نمایش فعال ها'},\r\n        {key: false, name: 'showInactiveItems', display: 'نمایش غیر فعال ها'}\r\n    ]);\r\n};\r\n\r\nenums.ChequeCategoryStatus = ()=> {\r\n    return new Enum([\r\n        {key: 'Open', display: 'باز'},\r\n        {key: 'Closed', display: 'بسته'}\r\n    ]);\r\n};\r\n\r\nexport default enums;",
    "let rootUrl = ()=> '/api';\r\n\r\nlet generalLedgerAccount = {\r\n    all: ()=> '{0}/general-ledger-accounts'.format(rootUrl())\r\n};\r\n\r\nlet subsidiaryLedgerAccount = {\r\n    all: ()=> '{0}/subsidiary-ledger-accounts'.format(rootUrl()),\r\n    allByGeneralLedgerAccount: (generalLedgerAccountId)=>\r\n        '{0}/subsidiary-ledger-accounts/general-ledger-account/{1}'\r\n            .format(rootUrl(), generalLedgerAccountId)\r\n};\r\n\r\nlet detailAccount = {\r\n    all: ()=> '{0}/detail-accounts'.format(rootUrl())\r\n};\r\n\r\nlet dimension = {\r\n    allByCategory: (categoryId)=> '{0}/dimensions/category/{1}'.format(rootUrl(), categoryId)\r\n};\r\n\r\nlet period = {\r\n    all: ()=> '{0}/fiscal-periods'.format(rootUrl())\r\n};\r\n\r\nlet chequeCategory = {\r\n    all: ()=> '{0}/cheque-categories'.format(rootUrl()),\r\n    allOpens: (detailAccountId)=> '{0}/cheque-categories/detail-account/{1}/opens'.format(rootUrl(), detailAccountId)\r\n};\r\n\r\nlet bank = {\r\n    all: ()=> '{0}/banks'.format(rootUrl())\r\n};\r\n\r\nlet cheque = {\r\n    all: (categoryId)=> '{0}/cheques/category/{1}'.format(rootUrl(), categoryId),\r\n    allwhites: (categoryId)=> '{0}/cheques/category/{1}/whites'.format(rootUrl(), categoryId)\r\n};\r\n\r\nlet apiUrls = {\r\n    generalLedgerAccount: generalLedgerAccount,\r\n    subsidiaryLedgerAccount: subsidiaryLedgerAccount,\r\n    detailAccount: detailAccount,\r\n    dimension: dimension,\r\n    period: period,\r\n    chequeCategory: chequeCategory,\r\n    bank: bank,\r\n    cheque: cheque\r\n};\r\n\r\nexport default apiUrls;",
    "import accModule from '../acc.module';\r\n\r\nfunction chequeCategoryCreateModalController($scope, $modalInstance, formService, chequeCategoryApi, logger, constants) {\r\n    \"use strict\";\r\n\r\n    $scope.errors = [];\r\n    $scope.chequeCategory = {\r\n        bankId: '',\r\n        detailAccountId: null,\r\n        totalPages: null,\r\n        firstPageNumber: null\r\n    }\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        $scope.errors.asEnumerable().removeAll();\r\n        $scope.isSaving = true;\r\n\r\n        chequeCategoryApi.create($scope.chequeCategory)\r\n            .then(function (result) {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.lastPageNumber = ()=> {\r\n        let model = $scope.chequeCategory;\r\n\r\n        return (model.firstPageNumber && model.totalPages)\r\n            ? model.firstPageNumber + model.totalPages - 1\r\n            : null\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.bankDataSource = {\r\n        type: 'json',\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.bank.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    }\r\n}\r\n\r\nfunction chequeCategoryCreateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: chequeCategoryCreateModalController,\r\n        templateUrl: 'partials/modals/chequeCategoryCreate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('chequeCategoryCreateModalController', chequeCategoryCreateModalController)\r\n    .factory('chequeCategoryCreateModalService', chequeCategoryCreateModalService);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction chequeCategoryUpdateModalController($scope, $modalInstance, formService, chequeCategoryApi, logger, data, constants) {\r\n    \"use strict\";\r\n\r\n    let id = data.id;\r\n    $scope.errors = [];\r\n    $scope.chequeCategory = {\r\n        bankId: '',\r\n        detailAccountId: null,\r\n        totalPages: null,\r\n        firstPageNumber: null\r\n    }\r\n\r\n    chequeCategoryApi.getById(id)\r\n        .then((result)=> $scope.chequeCategory = result);\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        $scope.errors.asEnumerable().removeAll();\r\n        $scope.isSaving = true;\r\n\r\n        chequeCategoryApi.update($scope.chequeCategory)\r\n            .then(function (result) {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.lastPageNumber = ()=> {\r\n        let model = $scope.chequeCategory;\r\n\r\n        return (model.firstPageNumber && model.totalPages)\r\n            ? model.firstPageNumber + model.totalPages - 1\r\n            : null\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.bankDataSource = {\r\n        type: 'json',\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.bank.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    }\r\n}\r\n\r\nfunction chequeCategoryUpdateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: chequeCategoryUpdateModalController,\r\n        templateUrl: 'partials/modals/chequeCategoryUpdate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('chequeCategoryUpdateModalController', chequeCategoryUpdateModalController)\r\n    .factory('chequeCategoryUpdateModalService', chequeCategoryUpdateModalService);\r\n",
    "import accModule from '../acc.module';\r\nimport config from '../localData/config';\r\n\r\nfunction dimensionCreateModalController(data,\r\n                                        $scope, $modalInstance, dimensionApi) {\r\n    \"use strict\";\r\n\r\n    $scope.errors = [];\r\n    $scope.dimension = {\r\n        title: '',\r\n        code: '',\r\n        description: ''\r\n    }\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return;\r\n\r\n        $scope.errors.asEnumerable().removeAll();\r\n\r\n        dimensionApi.create(data.categoryId, $scope.dimension)\r\n            .then(function (result) {\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch(function (errors) {\r\n                $scope.errors = errors;\r\n            });\r\n    };\r\n\r\n    $scope.close = function () {\r\n        $modalInstance.dismiss();\r\n    };\r\n}\r\n\r\nfunction dimensionCreateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: dimensionCreateModalController,\r\n        templateUrl: 'partials/modals/dimensionCreate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('dimensionCreateModalController', dimensionCreateModalController)\r\n    .factory('dimensionCreateModalService', dimensionCreateModalService);",
    "import accModule from '../acc.module';\r\n\r\nfunction dimensionUpdateModalController(data, $scope, $modalInstance, dimensionApi) {\r\n    \"use strict\";\r\n\r\n    $scope.errors = [];\r\n    $scope.dimension = {\r\n        title: '',\r\n        code: '',\r\n        description: ''\r\n    }\r\n\r\n\r\n    dimensionApi.getById(data.id)\r\n        .then((result)=> $scope.dimension = result);\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return;\r\n\r\n        $scope.errors.asEnumerable().removeAll();\r\n        $scope.isSaving = true;\r\n\r\n\r\n        dimensionApi.update(data.id, $scope.dimension)\r\n            .then(function (result) {\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction dimensionUpdateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: dimensionUpdateModalController,\r\n        templateUrl: 'partials/modals/dimensionUpdate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('dimensionUpdateModalController', dimensionUpdateModalController)\r\n    .factory('dimensionUpdateModalService', dimensionUpdateModalService);",
    "import accModule from '../acc.module';\r\nimport constants from '../localData/constants';\r\n\r\nfunction generalLedgerAccountCreateModalController($scope, $modalInstance, generalLedgerAccountApi, logger, formService) {\r\n\r\n    $scope.errors = [];\r\n    $scope.generalLedgerAccount = {\r\n        title: '',\r\n        code: '',\r\n        postingType: null,\r\n        balanceType: null,\r\n        description: ''\r\n    }\r\n\r\n    $scope.isSaving = false;\r\n    $scope.save = function (form) {\r\n        if (form.$invalid) {\r\n            formService.setDirty(form);\r\n            return;\r\n        }\r\n\r\n        $scope.errors.asEnumerable().removeAll();\r\n\r\n        $scope.isSaving = true;\r\n\r\n        generalLedgerAccountApi.create($scope.generalLedgerAccount)\r\n            .then(function (result) {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = function () {\r\n        $modalInstance.dismiss();\r\n    };\r\n\r\n    $scope.accountPostingType = constants.enums.AccountPostingType();\r\n    $scope.accountBalanceType = constants.enums.AccountBalanceType();\r\n}\r\n\r\nfunction generalLedgerAccountCreateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: generalLedgerAccountCreateModalController,\r\n        templateUrl: 'partials/modals/generalLedgerAccountCreate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('generalLedgerAccountCreateModalController', generalLedgerAccountCreateModalController)\r\n    .factory('generalLedgerAccountCreateModalService', generalLedgerAccountCreateModalService);\r\n\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\nimport constants from '../localData/constants';\r\nimport config from '../localData/config';\r\n\r\nfunction generalLedgerAccountUpdateModalController($scope,\r\n                                                   $modalInstance,\r\n                                                   data,\r\n                                                   generalLedgerAccountApi,\r\n                                                   logger, formService) {\r\n\r\n    $scope.errors = [];\r\n    $scope.generalLedgerAccount = {\r\n        title: '',\r\n        code: '',\r\n        postingType: null,\r\n        balanceType: null,\r\n        description: ''\r\n    };\r\n\r\n    generalLedgerAccountApi.getById(data.id)\r\n        .then(function (result) {\r\n            $scope.generalLedgerAccount = result;\r\n        });\r\n\r\n    $scope.isSaving = false;\r\n    $scope.save = function (form) {\r\n\r\n        if (form.$invalid) {\r\n            formService.setDirty(form);\r\n            return;\r\n        }\r\n\r\n        $scope.errors.asEnumerable().removeAll();\r\n\r\n        $scope.isSaving = true;\r\n\r\n        generalLedgerAccountApi.update(data.id, $scope.generalLedgerAccount)\r\n            .then(function (result) {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch(function (errors) {\r\n                $scope.errors = errors;\r\n            })\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.activate = function () {\r\n        if ($scope.generalLedgerAccount.isActive)\r\n            return;\r\n\r\n        generalLedgerAccountApi.activate($scope.generalLedgerAccount.id)\r\n            .then(function () {\r\n                $scope.generalLedgerAccount.isActive = true;\r\n                logger.success();\r\n            })\r\n            .catch(function () {\r\n                $scope.errors = err.errors;\r\n            })\r\n    }\r\n\r\n    $scope.deactivate = function () {\r\n        if (!$scope.generalLedgerAccount.isActive)\r\n            return;\r\n\r\n        generalLedgerAccountApi.deactivate($scope.generalLedgerAccount.id)\r\n            .then(function () {\r\n                $scope.generalLedgerAccount.isActive = false;\r\n                logger.success();\r\n            })\r\n            .catch(function () {\r\n                $scope.errors = err.errors;\r\n            })\r\n    }\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n\r\n    $scope.accountPostingType = constants.enums.AccountPostingType();\r\n    $scope.accountBalanceType = constants.enums.AccountBalanceType();\r\n}\r\n\r\nfunction generalLedgerAccountUpdateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: generalLedgerAccountUpdateModalController,\r\n        templateUrl: 'partials/modals/generalLedgerAccountUpdate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller(\r\n        'generalLedgerAccountUpdateModalController',\r\n        generalLedgerAccountUpdateModalController)\r\n    .factory(\r\n        'generalLedgerAccountUpdateModalService',\r\n        generalLedgerAccountUpdateModalService);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalAttachImageController($scope, $modalInstance, data, journalApi) {\r\n\r\n    let journalId = data.id;\r\n    let errors = $scope.errors = [];\r\n\r\n    $scope.uploaded = (fileName)=> {\r\n        journalApi.attachImage(journalId, {fileName: fileName})\r\n            .then(()=> $modalInstance.close())\r\n            .catch((err)=> errors = err);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction journalAttachImageService(modalBase) {\r\n    return modalBase({\r\n        controller: journalAttachImageController,\r\n        templateUrl: 'partials/modals/journalAttachImage.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalAttachImageController', journalAttachImageController)\r\n    .factory('journalAttachImageService', journalAttachImageService);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalBookkeepingController($scope, $modalInstance, formService,\r\n                                      data, journalApi) {\r\n\r\n    let journalId = data.id;\r\n\r\n    $scope.errors = [];\r\n    $scope.bookkeeping = {\r\n        number: null,\r\n        date: ''\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        journalApi.bookkeeping(journalId, $scope.bookkeeping)\r\n            .then((result)=> $modalInstance.close())\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction journalBookkeepingService(modalBase) {\r\n    return modalBase({\r\n        controller: journalBookkeepingController,\r\n        templateUrl: 'partials/modals/journalBookkeeping.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalBookkeepingController', journalBookkeepingController)\r\n    .factory('journalBookkeepingService', journalBookkeepingService);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalCreateModalController($scope, $modalInstance, journalApi, logger) {\r\n\r\n    $scope.errors = [];\r\n    $scope.journal = {\r\n        temporaryNumber: null,\r\n        temporaryDate: null,\r\n        description: ''\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return;\r\n\r\n        $scope.errors.asEnumerable().removeAll();\r\n\r\n        $scope.isSaving = true;\r\n\r\n        journalApi.create($scope.journal)\r\n            .then((result)=> {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> {\r\n                $scope.errors = errors;\r\n            })\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction journalCreateModalControllerService(modalBase) {\r\n    return modalBase({\r\n        controller: journalCreateModalController,\r\n        templateUrl: 'partials/modals/journalCreate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalCreateModalController', journalCreateModalController)\r\n    .factory('journalCreateModalControllerService', journalCreateModalControllerService);\r\n\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalLineCreateOrUpdateController($scope, $modalInstance, $timeout, formService, $q,\r\n                                             journalLineApi, dimensionCategoryApi, logger, constants, data) {\r\n\r\n    let journalId = data.journalId;\r\n    let id = data.id;\r\n    let editMode = $scope.editMode = id == undefined ? 'create' : 'update';\r\n\r\n    $scope.generalLedgerAccountShouldBeFocus = true;\r\n\r\n    $scope.errors = [];\r\n    $scope.dimensionCategories = [];\r\n    $scope.journalLine = {\r\n        generalLedgerAccountId: null,\r\n        subsidiaryLedgerAccountId: null,\r\n        detailAccountId: null,\r\n        dimension1Id: null,\r\n        dimension2Id: null,\r\n        dimension3Id: null,\r\n        article: '',\r\n        amount: null,\r\n        balanceType: ''\r\n    };\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.dimension1DataSource = null;\r\n    $scope.dimension2DataSource = null;\r\n    $scope.dimension3DataSource = null;\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result)=> {\r\n            let cats = result.data;\r\n            $scope.dimensionCategories = cats;\r\n\r\n            $scope.dimension1DataSource = dimensionDataSourceFactory(cats[0].id);\r\n            $scope.dimension2DataSource = dimensionDataSourceFactory(cats[1].id);\r\n            $scope.dimension3DataSource = dimensionDataSourceFactory(cats[2].id);\r\n        });\r\n\r\n    if (editMode == 'update')\r\n        journalLineApi.getById(id)\r\n            .then((result)=> {\r\n                result.amount = 0;\r\n                result.balanceType = '';\r\n\r\n                if (result.creditor > 0) {\r\n                    result.amount = result.creditor;\r\n                    result.balanceType = 'creditor';\r\n                }\r\n\r\n                if (result.debtor > 0) {\r\n                    result.amount = result.debtor;\r\n                    result.balanceType = 'debtor';\r\n                }\r\n\r\n                $scope.journalLine = result\r\n            });\r\n\r\n    let resetForm = (form)=> {\r\n\r\n        $scope.journalLine = {\r\n            generalLedgerAccountId: null,\r\n            subsidiaryLedgerAccount: null,\r\n            detailAccountId: null,\r\n            description: '',\r\n            amount: null,\r\n            balanceType: ''\r\n        };\r\n\r\n        $timeout(()=> formService.setClean(form), 100);\r\n\r\n        $scope.generalLedgerAccountShouldBeFocus = true;\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    let save = (form)=> {\r\n        let deferred = $q.defer();\r\n\r\n        function execute() {\r\n            if (form.$invalid) {\r\n                formService.setDirty(form);\r\n                deferred.reject();\r\n                return;\r\n            }\r\n\r\n            $scope.isSaving = true;\r\n\r\n            if (editMode == 'create')\r\n                journalLineApi.create(journalId, $scope.journalLine)\r\n                    .then((result)=> {\r\n                        deferred.resolve(result);\r\n                        logger.success();\r\n                    })\r\n                    .catch((errors)=> {\r\n                        $scope.errors = errors;\r\n                        deferred.reject();\r\n                    })\r\n                    .finally(()=> {\r\n                        $scope.isSaving = false;\r\n                        deferred.resolve();\r\n                    });\r\n\r\n            if (editMode == 'update')\r\n                journalLineApi.update(id, $scope.journalLine)\r\n                    .then(()=> {\r\n                        deferred.resolve();\r\n                        logger.success();\r\n                    })\r\n                    .catch((errors)=> {\r\n                        $scope.errors = errors;\r\n                        deferred.reject();\r\n                    })\r\n                    .finally(()=> $scope.isSaving = false);\r\n        }\r\n\r\n        $timeout(execute, 0);\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    $scope.saveAndNew = (form)=> {\r\n        save(form)\r\n            .then(()=> resetForm(form));\r\n    };\r\n\r\n    $scope.saveAndReturn = (form)=> {\r\n        save(form)\r\n            .then((result)=> $modalInstance.close(result));\r\n    };\r\n\r\n    $scope.generalLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.generalLedgerAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.generalLedgerAccountOnChange = ()=> {\r\n        $scope.journalLine.subsidiaryLedgerAccountId = null;\r\n\r\n        $scope.journalLine.detailAccount = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n        $scope.journalLine.dimension1 = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n        $scope.journalLine.dimension2 = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n        $scope.journalLine.dimension3 = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n        $scope.journalLine.detailAccount = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n    };\r\n\r\n    $scope.subsidiaryLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: (filter)=> {\r\n                    let generalLegerAccountId = filter.filter.filters\r\n                        .asEnumerable()\r\n                        .first(f => f.field == 'generalLedgerAccountId')\r\n                        .value;\r\n\r\n                    return constants.urls\r\n                        .subsidiaryLedgerAccount\r\n                        .allByGeneralLedgerAccount(generalLegerAccountId)\r\n                }\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.subsidiaryLedgerAccountSelect = (e)=> {\r\n        let item = e.sender.dataItem();\r\n\r\n        if (!item) {\r\n            $scope.journalLine.detailAccount = {\r\n                canShow: false,\r\n                isRequired: false\r\n            };\r\n            $scope.journalLine.dimension1 = {\r\n                canShow: false,\r\n                isRequired: false\r\n            };\r\n            $scope.journalLine.dimension2 = {\r\n                canShow: false,\r\n                isRequired: false\r\n            };\r\n            $scope.journalLine.dimension3 = {\r\n                canShow: false,\r\n                isRequired: false\r\n            };\r\n\r\n            return;\r\n        }\r\n\r\n        $scope.journalLine.detailAccount = {\r\n            canShow: ['Required', 'NotRequired'].asEnumerable().contains(item.detailAccountAssignmentStatus),\r\n            isRequired: item.detailAccountAssignmentStatus == 'Required'\r\n        };\r\n\r\n        $scope.journalLine.dimension1 = {\r\n            canShow: ['Required', 'NotRequired'].asEnumerable().contains(item.dimension1AssignmentStatus),\r\n            isRequired: item.dimension1AssignmentStatus == 'Required'\r\n        };\r\n\r\n        $scope.journalLine.dimension2 = {\r\n            canShow: ['Required', 'NotRequired'].asEnumerable().contains(item.dimension2AssignmentStatus),\r\n            isRequired: item.dimension2AssignmentStatus == 'Required'\r\n        };\r\n\r\n        $scope.journalLine.dimension3 = {\r\n            canShow: ['Required', 'NotRequired'].asEnumerable().contains(item.dimension3AssignmentStatus),\r\n            isRequired: item.dimension3AssignmentStatus == 'Required'\r\n        };\r\n    };\r\n\r\n    $scope.subsidiaryLedgerAccountDataBound = (e)=> e.sender.trigger('change');\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    let dimensionDataSourceFactory = (categoryId)=> {\r\n        return {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: constants.urls.dimension.allByCategory(categoryId)\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        }\r\n    };\r\n\r\n    $scope.changeAmountBalance = ()=>\r\n        $scope.journalLine.balanceType = $scope.journalLine.balanceType == 'debtor'\r\n            ? 'creditor'\r\n            : 'debtor';\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction journalLineCreateOrUpdateControllerModalService(modalBase) {\r\n    return modalBase({\r\n        controller: journalLineCreateOrUpdateController,\r\n        templateUrl: 'partials/modals/journalLineCreateOrUpdate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalLineCreateController', journalLineCreateOrUpdateController)\r\n    .factory('journalLineCreateControllerModalService', journalLineCreateOrUpdateControllerModalService);\r\n\r\naccModule\r\n    .controller('journalLineUpdateController', journalLineCreateOrUpdateController)\r\n    .factory('journalLineUpdateControllerModalService', journalLineCreateOrUpdateControllerModalService);\r\n\r\n\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction writeChequeOnJournalLineEntryController($scope,\r\n                                                 chequeApi, chequeCategoryApi, data, $timeout,\r\n                                                 formService, $modalInstance, constants) {\r\n    $scope.errors = [];\r\n    $scope.cheque = {\r\n        journalLineId: data.journalLineId,\r\n        detailAccountDisplay: data.detailAccountDisplay,\r\n        chequeId: null,\r\n        amount: data.amount,\r\n        date: data.date,\r\n        description: data.description\r\n    };\r\n\r\n    $scope.openChequeCategories = [];\r\n    $scope.selectedChequeCategory = false;\r\n\r\n    chequeCategoryApi.getOpens(data.detailAccountId)\r\n        .then((result)=> $scope.openChequeCategories = result);\r\n\r\n    $scope.selectChequeCategory = (cat)=> {\r\n        $scope.selectedChequeCategory = false;\r\n        $scope.whiteChequesDataSource.transport.read.url = constants.urls.cheque.allwhites(cat.id);\r\n\r\n        $timeout(()=> $scope.selectedChequeCategory = cat, 1);\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        $scope.isSaving = true;\r\n        chequeApi.write($scope.cheque.chequeId,$scope.cheque)\r\n            .then((result)=> $modalInstance.close(result))\r\n            .catch((result)=> $scope.errors = result)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n\r\n    $scope.whiteChequesDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: null\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n}\r\n\r\nfunction writeChequeOnJournalLineEntryService(modalBase) {\r\n    return modalBase({\r\n        controller: writeChequeOnJournalLineEntryController,\r\n        templateUrl: 'partials/modals/writeChequeOnJournalLineEntry.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('writeChequeOnJournalLineEntryController', writeChequeOnJournalLineEntryController)\r\n    .factory('writeChequeOnJournalLineEntryService', writeChequeOnJournalLineEntryService);",
    "import accModule from '../acc.module';\r\n\r\nfunction apiPromise($http, $q) {\r\n\r\n    function promise($httpPromise) {\r\n        var deferred = $q.defer();\r\n\r\n        $httpPromise\r\n            .success(function (result) {\r\n                if (result.isValid) {\r\n                    deferred.resolve(result.returnValue);\r\n                }\r\n                else {\r\n                    deferred.reject(result.errors)\r\n                }\r\n            })\r\n            .error(function (error) {\r\n                console.error(error);\r\n                deferred.reject(['Internal Error']);\r\n            });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    return {\r\n        get: function (url, data) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.get(url, data)\r\n                .success(function (result) {\r\n                    deferred.resolve(result);\r\n                })\r\n                .error(function (error) {\r\n                    console.error(error);\r\n                    deferred.reject(['Internal Error']);\r\n                });\r\n\r\n            return deferred.promise;\r\n        },\r\n        post: function (url, data) {\r\n            return promise($http.post(url, data));\r\n        },\r\n        put: function (url, data) {\r\n            return promise($http.put(url, data));\r\n        },\r\n        delete: function (url, data) {\r\n            return promise($http.delete(url, data));\r\n        }\r\n    };\r\n}\r\n\r\naccModule.factory('apiPromise', apiPromise)",
    "import swal from 'sweetalert';\r\nimport accModule from '../acc.module';\r\n\r\nfunction confirm (translate, $q) {\r\n\r\n    return (message, title)=> {\r\n        let deferred = $q.defer();\r\n\r\n        swal({\r\n            title: title,\r\n            text: message,\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            cancelButtonText: translate('No'),\r\n            confirmButtonText: translate('Yes')\r\n        }, (isConfirm)=> {\r\n            if (isConfirm) deferred.resolve();\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n}\r\n\r\naccModule.factory('confirm', confirm);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction formService() {\r\n\r\n    function setDirty(form) {\r\n        angular.forEach(form.$error, function (type) {\r\n            angular.forEach(type, function (field) {\r\n                field.$setDirty();\r\n            });\r\n        });\r\n        return form;\r\n    }\r\n\r\n    function setClean(form) {\r\n        angular.forEach(form.$error, function (type) {\r\n            angular.forEach(type, function (field) {\r\n                field.$setPristine();\r\n            });\r\n        });\r\n    }\r\n\r\n    return {\r\n        setDirty: setDirty,\r\n        setClean: setClean\r\n    }\r\n}\r\n\r\naccModule.service('formService', formService);",
    "import accModule from '../acc.module';\r\n\r\nfunction gridFilterCellTypeProvider() {\r\n    var type = {\r\n        string: {\r\n            showOperators: false,\r\n            operator: \"contains\",\r\n            modelType: \"string\"\r\n        },\r\n        number: {\r\n            showOperators: true,\r\n            operator: \"eq\",\r\n            modelType: \"number\"\r\n        },\r\n        date: {\r\n            showOperator: true,\r\n            operator: \"eq\",\r\n            modelType: \"string\",\r\n            template: function (args) {\r\n                args.element.kendoDatePicker({\r\n                    change: function(){\r\n                        var date = this.value();\r\n                        console.log(date);\r\n                        //date.jalalidate[1] = date.jalalidate[1] + 1;\r\n                        console.log(date.toDateString());\r\n                        debugger;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    function combo(option) {\r\n        return {\r\n            showOperators: false,\r\n            operator: \"eq\",\r\n            template: function (args) {\r\n                args.element.kendoComboBox({\r\n                    placeholder: '...',\r\n                    dataTextField: option.text,\r\n                    dataValueField: option.value,\r\n                    valuePrimitive: true,\r\n                    filter: \"contains\",\r\n                    autoBind: false,\r\n                    minLength: 2,\r\n                    dataSource: {\r\n                        type: \"json\",\r\n                        serverFiltering: true,\r\n                        transport: {\r\n                            read: {\r\n                                url: option.url\r\n                            },\r\n                            parameterMap: function (options) {\r\n                                return kendo.stringify(options);\r\n                            }\r\n                        },\r\n                        schema: {\r\n                            parse: function (response) {\r\n                                return response.data;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    function dropdown(option) {\r\n        return {\r\n            showOperators: false,\r\n            operator: \"eq\",\r\n            template: function (args) {\r\n                args.element.kendoDropDownList({\r\n                    dataTextField: option.text,\r\n                    dataValueField: option.value,\r\n                    filter: \"contains\",\r\n                    autoBind: false,\r\n                    minLength: 2,\r\n                    dataSource: option.data,\r\n                    valuePrimitive: true\r\n                });\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    this.control = {\r\n        combo: combo,\r\n        dropdown: dropdown\r\n    }\r\n\r\n    this.$get = function () {\r\n        return type;\r\n    }\r\n\r\n    this.set = function (extendedObject) {\r\n        type = angular.extend(type, extendedObject);\r\n    }\r\n}\r\n\r\naccModule.provider('gridFilterCellType', gridFilterCellTypeProvider);\r\n\r\n",
    "import swal from 'sweetalert';\r\nimport accModule from '../acc.module';\r\n\r\nfunction logger (translate) {\r\n    return {\r\n        success: function (message) {\r\n            swal({\r\n                title: translate('Successful'),\r\n                text: message || translate('Done successfully'),\r\n                type: 'success',\r\n                timer: 2000,\r\n                confirmButtonText: translate('OK')\r\n            });\r\n        },\r\n        info: function (message) {\r\n            swal({\r\n                title: translate('Successful'),\r\n                text: message || translate('Done successfully'),\r\n                type: 'info',\r\n                timer: 2000,\r\n                confirmButtonText: translate('OK')\r\n            });\r\n        },\r\n        warning: function (message) {\r\n            swal({\r\n                title: translate('Successful'),\r\n                text: message || translate('Done successfully'),\r\n                type: 'warning',\r\n                timer: 2000,\r\n                confirmButtonText: translate('OK')\r\n            });\r\n        },\r\n        error: function (message) {\r\n            swal({\r\n                title: translate('Successful'),\r\n                text: message || translate('Done successfully'),\r\n                type: 'error',\r\n                timer: 2000,\r\n                confirmButtonText: translate('OK')\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\naccModule.factory('logger', logger);\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nclass menuItemsProvider {\r\n\r\n    constructor(){\r\n        this.menuItems = [];\r\n    }\r\n\r\n    $get(){\r\n        return this.menuItems;\r\n    }\r\n\r\n    add(item){\r\n        this.menuItems.push(item);\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\naccModule.provider('menuItems', menuItemsProvider);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction modalBase ($modal, $q) {\r\n\r\n    /*{controller: string, templateUrl: string, size(optional): string, data: object}*/\r\n\r\n    var modalFunction = function (option) {\r\n        var modalInstance = $modal.open({\r\n            animation: true,\r\n            templateUrl: option.templateUrl,\r\n            controller: option.controller,\r\n            backdrop: true,\r\n            keyboard: false,\r\n            size: option.size, // nothing = normal , 'sm' = small , 'lg' = large\r\n            resolve: {\r\n                data: function () {\r\n                    return option.data;\r\n                }\r\n            }\r\n        });\r\n\r\n        var deferred = $q.defer();\r\n\r\n        modalInstance.result.then(function (result) {\r\n            deferred.resolve(result);\r\n        });\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    return function (option) {\r\n        return {\r\n            show: function (data) {\r\n                option.data = data;\r\n                return modalFunction(option)\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\naccModule.factory('modalBase', modalBase);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction routeNavigatorService($route, $location) {\r\n\r\n    function getRoute(name) {\r\n        return getKeys($route.routes)\r\n            .asEnumerable()\r\n            .select((r)=> $route.routes[r])\r\n            .first((r)=> r.controller == '{0}Controller'.format(name));\r\n    }\r\n\r\n    let navigate = (name, parameters)=> {\r\n        let route = getRoute(name);\r\n        let path = route.originalPath;\r\n\r\n        route.keys.forEach((key)=> {\r\n            let parameterValue = parameters[key.name] || '';\r\n            if (parameterValue == '' && key.optional == true)\r\n                throw new Error('[{0}] parameter is not optional'.format(key.name));\r\n\r\n            path = path.replace(new RegExp(':{0}'.format(key.name)), parameterValue);\r\n        });\r\n\r\n        $location.path(path);\r\n\r\n    }\r\n\r\n    return navigate;\r\n}\r\n\r\naccModule.factory('navigate', routeNavigatorService);\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction translate($filter){\r\n    return (key) => $filter('translate')(key);\r\n}\r\n\r\naccModule.factory('translate', translate);",
    "import accModule from '../acc.module';\r\n\r\n\r\nfunction translateStorageService() {\r\n\r\n    return {\r\n        put: (name, value)=> {\r\n            localStorage.setItem('translate.{0}'.format(name), value);\r\n        },\r\n        get: (name)=> {\r\n            return localStorage.getItem('translate.{0}'.format(name));\r\n        }\r\n    }\r\n}\r\n\r\naccModule.factory('translateStorageService', translateStorageService);"
  ]
}