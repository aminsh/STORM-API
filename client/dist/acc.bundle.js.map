{
  "version": 3,
  "sources": [
    "../node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "src\\acc.config.js",
    "src\\acc.module.js",
    "src\\apis\\bankApi.js",
    "src\\apis\\chequeApi.js",
    "src\\apis\\chequeCategoryApi.js",
    "src\\apis\\detailAccountApi.js",
    "src\\apis\\dimensionApi.js",
    "src\\apis\\dimensionCategoryApi.js",
    "src\\apis\\fiscalPeriodApi.js",
    "src\\apis\\generalLedgerAccountApi.js",
    "src\\apis\\journalApi.js",
    "src\\apis\\journalLineApi.js",
    "src\\apis\\journalTemplateApi.js",
    "src\\apis\\subsidiaryLedgerAccountApi.js",
    "src\\config\\authConfig.js",
    "src\\config\\gridFilterCellTypeConfig.js",
    "src\\config\\menu.config.js",
    "src\\config\\route.config.js",
    "src\\config\\translate.config.js",
    "src\\controllers\\accountReviewController.js",
    "src\\controllers\\accountReviewTurnoverController.js",
    "src\\controllers\\banksController.js",
    "src\\controllers\\chequeCategoriesController.js",
    "src\\controllers\\createFiscalPeriodController.js",
    "src\\controllers\\detailAccountsController.js",
    "src\\controllers\\dimensionsController.js",
    "src\\controllers\\generalLedgerAccountsController.js",
    "src\\controllers\\homeController.js",
    "src\\controllers\\journalCopy.js",
    "src\\controllers\\journalManagementController.js",
    "src\\controllers\\journalPrintController.js",
    "src\\controllers\\journalTemplatesController.js",
    "src\\controllers\\journalUpdateController.js",
    "src\\controllers\\journalsController.js",
    "src\\controllers\\subsidiaryLedgerAccountCreateController.js",
    "src\\controllers\\subsidiaryLedgerAccountUpdateController.js",
    "src\\controllers\\subsidiaryLedgerAccountsController.js",
    "src\\directives\\alert.js",
    "src\\directives\\blockUi.js",
    "src\\directives\\button.js",
    "src\\directives\\checkbox.js",
    "src\\directives\\combobox.js",
    "src\\directives\\content.js",
    "src\\directives\\contentCover.js",
    "src\\directives\\customValidator.js",
    "src\\directives\\datepicker.js",
    "src\\directives\\dropdownlist.js",
    "src\\directives\\focusMe.js",
    "src\\directives\\grid.js",
    "src\\directives\\journalSearchParameters.js",
    "src\\directives\\layout.js",
    "src\\directives\\ngKendoGrid.js",
    "src\\directives\\numeric.js",
    "src\\directives\\reportViewer.js",
    "src\\directives\\shell.js",
    "src\\directives\\subContent.js",
    "src\\directives\\textEditor.js",
    "src\\directives\\uploader.js",
    "src\\directives\\validationSummary.js",
    "src\\filters\\amount.js",
    "src\\localData\\config.js",
    "src\\localData\\constants.js",
    "src\\localData\\enumType.js",
    "src\\localData\\enums.js",
    "src\\localData\\urls.js",
    "src\\modals\\chequeCategroyCreate.js",
    "src\\modals\\chequeCategroyUpdate.js",
    "src\\modals\\detailAccountCreate.js",
    "src\\modals\\detailAccountUpdate.js",
    "src\\modals\\dimensionCreate.js",
    "src\\modals\\dimensionUpdate.js",
    "src\\modals\\generalLedgerAccountCreate.js",
    "src\\modals\\generalLedgerAccountUpdate.js",
    "src\\modals\\journalAdvnacedSearch.js",
    "src\\modals\\journalAttachImage.js",
    "src\\modals\\journalBookkeeping.js",
    "src\\modals\\journalCreate.js",
    "src\\modals\\journalLineCreateOrUpdate.js",
    "src\\modals\\showJournalDetail.js",
    "src\\modals\\writeChequeOnJournalLineEntry.js",
    "src\\services\\apiPromise.js",
    "src\\services\\confirm.js",
    "src\\services\\currentService.js",
    "src\\services\\formService.js",
    "src\\services\\gridFilterCellTypeProvider.js",
    "src\\services\\logger.js",
    "src\\services\\menuItemsProvider.js",
    "src\\services\\modalBase.js",
    "src\\services\\prompt.js",
    "src\\services\\routeNavigatorService.js",
    "src\\services\\showReport.js",
    "src\\services\\translate.js",
    "src\\services\\translateStorageService.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import accModule from './acc.module';\r\n\r\n// load config\r\nimport  './config/route.config';\r\nimport  './config/menu.config.js';\r\nimport  './config/translate.config';\r\nimport './config/gridFilterCellTypeConfig';\r\nimport './config/authConfig';\r\n\r\n//load controllers\r\nimport './controllers/homeController';\r\nimport './controllers/generalLedgerAccountsController';\r\nimport './controllers/subsidiaryLedgerAccountsController';\r\nimport './controllers/subsidiaryLedgerAccountCreateController';\r\nimport './controllers/subsidiaryLedgerAccountUpdateController';\r\nimport './controllers/detailAccountsController';\r\nimport './controllers/dimensionsController';\r\nimport './controllers/journalsController';\r\nimport './controllers/journalUpdateController';\r\nimport './controllers/chequeCategoriesController';\r\nimport './controllers/banksController';\r\nimport './controllers/journalManagementController';\r\nimport './controllers/journalCopy';\r\nimport './controllers/journalTemplatesController';\r\nimport './controllers/accountReviewController';\r\nimport './controllers/accountReviewTurnoverController';\r\nimport './controllers/journalPrintController';\r\nimport createFiscalPeriodController from  './controllers/createFiscalPeriodController';\r\n\r\n// load apis\r\nimport './apis/generalLedgerAccountApi';\r\nimport './apis/subsidiaryLedgerAccountApi';\r\nimport './apis/detailAccountApi';\r\nimport './apis/dimensionCategoryApi';\r\nimport './apis/dimensionApi';\r\nimport './apis/journalApi';\r\nimport './apis/journalLineApi';\r\nimport './apis/chequeCategoryApi';\r\nimport './apis/bankApi';\r\nimport './apis/chequeApi';\r\nimport './apis/journalTemplateApi';\r\nimport FiscalPeriodApi from './apis/fiscalPeriodApi';\r\n\r\n// load modals\r\nimport './modals/generalLedgerAccountCreate';\r\nimport './modals/generalLedgerAccountUpdate';\r\nimport './modals/dimensionCreate';\r\nimport './modals/dimensionUpdate';\r\nimport './modals/journalCreate';\r\nimport './modals/journalLineCreateOrUpdate';\r\nimport './modals/journalBookkeeping';\r\nimport './modals/journalAttachImage';\r\nimport './modals/chequeCategroyCreate';\r\nimport './modals/chequeCategroyUpdate';\r\nimport './modals/writeChequeOnJournalLineEntry';\r\nimport './modals/showJournalDetail';\r\nimport './modals/journalAdvnacedSearch';\r\nimport './modals/detailAccountCreate';\r\nimport './modals/detailAccountUpdate';\r\n\r\nimport './localData/constants';\r\n\r\n//directives\r\nimport './directives/alert';\r\nimport './directives/subContent';\r\nimport './directives/blockUi';\r\nimport './directives/customValidator';\r\nimport './directives/validationSummary';\r\nimport './directives/focusMe';\r\nimport './directives/uploader';\r\nimport './directives/button';\r\nimport './directives/combobox';\r\nimport './directives/content';\r\nimport './directives/datepicker';\r\nimport './directives/dropdownlist';\r\nimport './directives/grid';\r\nimport './directives/layout';\r\nimport './directives/numeric';\r\nimport './directives/textEditor';\r\nimport './directives/checkbox';\r\nimport './directives/ngKendoGrid';\r\nimport './directives/journalSearchParameters';\r\nimport './directives/reportViewer';\r\nimport shell from './directives/shell';\r\nimport {contentCover, contentCoverForm} from './directives/contentCover';\r\n\r\n//filter\r\nimport './filters/amount';\r\n\r\n//service\r\nimport './services/formService';\r\nimport './services/translateStorageService';\r\nimport './services/apiPromise';\r\nimport './services/confirm';\r\nimport './services/gridFilterCellTypeProvider';\r\nimport './services/logger';\r\nimport './services/menuItemsProvider';\r\nimport './services/modalBase';\r\nimport './services/routeNavigatorService';\r\nimport './services/translate';\r\nimport './services/prompt';\r\nimport './services/showReport';\r\nimport  currentService from './services/currentService';\r\n\r\naccModule\r\n    .directive(shell.name, shell)\r\n    .directive('devTagContentCover', contentCover)\r\n    .directive('devTagContentCoverFrom', contentCoverForm)\r\n    .service(currentService.name, currentService)\r\n    .service('fiscalPeriodApi', FiscalPeriodApi)\r\n    .controller(createFiscalPeriodController.name, createFiscalPeriodController);\r\n\r\naccModule.init();\r\n\r\n",
    "import angular from 'angular';\r\nimport 'angular-animate';\r\nimport 'angular-bootstrap';\r\nimport 'angular-route';\r\nimport 'angular-sanitize';\r\nimport 'angular-translate';\r\nimport 'angular-resource';\r\nimport 'angular-messages';\r\nimport 'angular-cookies';\r\nimport 'kendo';\r\nimport 'kendo.culture';\r\nimport 'kendo.messages';\r\nimport 'angular-cookies';\r\n\r\nlet accModule = angular.module('acc.module', [\r\n    'ngAnimate',\r\n    'ngRoute',\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ui.bootstrap',\r\n    'pascalprecht.translate',\r\n    'kendo.directives',\r\n    'ngMessages',\r\n    'ngCookies'\r\n]);\r\n\r\naccModule.init = () => {\r\n    angular.element(document).ready(function () {\r\n        angular.bootstrap(document, ['acc.module']);\r\n    });\r\n};\r\n\r\nexport default accModule;",
    "import accModule from '../acc.module';\r\n\r\nfunction bankApi(apiPromise) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/banks/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/banks'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/banks/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/banks/{1}'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('bankApi', bankApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction chequeApi(apiPromise) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/cheques/{1}'.format(urlPrefix, id));\r\n        },\r\n        write: (id, data)=> apiPromise.put('{0}/cheques/{1}/write'.format(urlPrefix, id), data)\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('chequeApi', chequeApi);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction chequeCategoryApi(apiPromise) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        getOpens: (detailAccountId)=>\r\n            apiPromise.get('{0}/cheque-categories/detail-account/{1}/opens'\r\n                .format(urlPrefix, detailAccountId)),\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/cheque-categories/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/cheque-categories'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/cheque-categories/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/cheque-categories/{1}'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('chequeCategoryApi', chequeCategoryApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction detailAccountApi(apiPromise) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: '{0}/detail-accounts'.format(urlPrefix),\r\n            getAllActive: '{0}/detail-accounts/active'.format(urlPrefix)\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/detail-accounts/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/detail-accounts'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/detail-accounts/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/detail-accounts/{1}'.format(urlPrefix, id));\r\n        },\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/detail-accounts/{1}/activate'.format(urlPrefix, id));\r\n        },\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/detail-accounts/{1}/deactivate'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('detailAccountApi', detailAccountApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction dimensionApi(apiPromise, $q, $timeout) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: function (parentId) {\r\n                return '{0}/dimensions/category/{1}'.format(urlPrefix, parentId);\r\n            }\r\n        },\r\n        getAll: function () {\r\n            return apiPromise.get('{0}/dimensions'.format(urlPrefix));\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/dimensions/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (categoryId, data) {\r\n            return apiPromise.post('{0}/dimensions/category/{1}'.format(urlPrefix, categoryId), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/dimensions/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/dimensions/{1}'.format(urlPrefix, id));\r\n        },\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/dimensions/{1}/activate'.format(urlPrefix, id));\r\n        },\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/dimensions/{1}/deactivate'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('dimensionApi', dimensionApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction dimensionCategoryApi(apiPromise, $q, $timeout) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: '{0}/dimension-categories'.format(urlPrefix)\r\n        },\r\n        getAll: function () {\r\n            return apiPromise.get('{0}/dimension-categories'.format(urlPrefix));\r\n        },\r\n        getAllLookup: ()=> {\r\n            let deferred = $q.defer();\r\n            let dimensionCategories = JSON.parse(localStorage.getItem('dimensionCategories'));\r\n\r\n            if (dimensionCategories)\r\n                $timeout(()=> deferred.resolve(dimensionCategories), 0);\r\n            else apiPromise.get('{0}/dimension-categories'.format(urlPrefix))\r\n                .then((result)=> {\r\n                    localStorage.setItem('dimensionCategories', JSON.stringify(result));\r\n                    deferred.resolve(result)\r\n                });\r\n\r\n            return deferred.promise;\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/dimension-categories/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/dimension-categories'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/dimension-categories/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/dimension-categories/{1}'.format(urlPrefix, id));\r\n        },\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/dimension-categories/{1}/activate'.format(urlPrefix, id));\r\n        },\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/dimension-categories/{1}/deactivate'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('dimensionCategoryApi', dimensionCategoryApi);\r\n",
    "export  default class FiscalPeriodApi{\r\n    constructor(apiPromise){\r\n        this.urlPrefix = '/api';\r\n        this.apiPromise = apiPromise;\r\n\r\n        this.getAll= '{0}/periods'.format(this.urlPrefix)\r\n    }\r\n\r\n    create(fiscalPeriod){\r\n        return this.apiPromise.post(`${this.urlPrefix}/fiscal-periods`, fiscalPeriod)\r\n    }\r\n\r\n    current(){\r\n        return this.apiPromise.get(`${this.urlPrefix}/fiscal-periods/current`);\r\n    }\r\n}\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction generalLedgerAccountApi(apiPromise) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: '{0}/general-ledger-accounts'.format(urlPrefix),\r\n            getAllActive: '{0}/general-ledger-accounts/active'\r\n                .format(urlPrefix)\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/general-ledger-accounts/{1}'\r\n                .format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/general-ledger-accounts'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/general-ledger-accounts/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/general-ledger-accounts/{1}'.format(urlPrefix, id));\r\n        },\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/general-ledger-accounts/{1}/activate'.format(urlPrefix, id));\r\n        },\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/general-ledger-accounts/{1}/deactivate'.format(urlPrefix, id));\r\n        }\r\n    };\r\n}\r\n\r\naccModule.factory('generalLedgerAccountApi', generalLedgerAccountApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalApi(apiPromise) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: '{0}/journals'.format(urlPrefix)\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/journals/{1}'.format(urlPrefix, id));\r\n        },\r\n        getJournalReportJson: id => apiPromise.get(`/report/json/journal/${id}`),\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/journals'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/journals/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/journals/{1}'.format(urlPrefix, id));\r\n        },\r\n        copy: (id)=> apiPromise.post('{0}/journals/{1}/copy'.format(urlPrefix, id)),\r\n        bookkeeping: (id, data)=> apiPromise.put('{0}/journals/{1}/bookkeeping'.format(urlPrefix, id), data),\r\n        attachImage: (id, data)=> apiPromise.put('{0}/journals/{1}/attach-image'.format(urlPrefix, id), data)\r\n    };\r\n}\r\n\r\naccModule.factory('journalApi', journalApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalLineApi(apiPromise) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: (journalId)=> '{0}/journal-lines/journal/{1}'.format(urlPrefix, journalId)\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/journal-lines/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (journalId, data) {\r\n            return apiPromise.post('{0}/journal-lines/journal/{1}'.format(urlPrefix, journalId), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/journal-lines/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/journal-lines/{1}'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('journalLineApi', journalLineApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalTemplateApi(apiPromise) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        create: (journalId, data)=>\r\n            apiPromise.post('{0}/journal-templates/journal/{1}'.format(urlPrefix, journalId), data),\r\n        journalCreate: (id)=>\r\n            apiPromise.post('{0}/journal-templates/{1}/journal/create'.format(urlPrefix, id)),\r\n        remove: (id)=>\r\n            apiPromise.delete('{0}/journal-templates/{1}'.format(urlPrefix, id))\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('journalTemplateApi', journalTemplateApi);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction subsidiaryLedgerAccountApi(apiPromise) {\r\n    var urlPrefix = '/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: function (parentId) {\r\n                return '{0}/subsidiary-ledger-accounts/general-ledger-account/{1}'.format(urlPrefix, parentId);\r\n            },\r\n            getAllActive: function (parentId) {\r\n                return '{0}/subsidiary-ledger-accounts/general-ledger-account/{1}/active'.format(urlPrefix, parentId)\r\n            }\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/subsidiary-ledger-accounts/{1}/'\r\n                .format(urlPrefix, id));\r\n        },\r\n        create: function (parentId, data) {\r\n            return apiPromise.post('{0}/subsidiary-ledger-accounts/general-ledger-account/{1}'\r\n                .format(urlPrefix, parentId), data);\r\n        }\r\n        ,\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/subsidiary-ledger-accounts/{1}'\r\n                .format(urlPrefix, id), data);\r\n        }\r\n        ,\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/subsidiary-ledger-accounts/{1}'\r\n                .format(urlPrefix, id))\r\n        }\r\n        ,\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/subsidiary-ledger-accounts/{1}/activate'\r\n                .format(urlPrefix, id));\r\n        }\r\n        ,\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/subsidiary-ledger-accounts/{1}/deactivate'\r\n                .format(urlPrefix, id));\r\n        }\r\n    }\r\n}\r\n\r\naccModule\r\n    .factory('subsidiaryLedgerAccountApi', subsidiaryLedgerAccountApi)\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\nimport $ from 'jquery';\r\n\r\naccModule.config($httpProvider=> {\r\n    $httpProvider.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\r\n\r\n    $httpProvider.interceptors.push(()=> {\r\n        return {\r\n            'request': (config)=> {\r\n                return config;\r\n            },\r\n            'response': (response)=> {\r\n\r\n\r\n                return response;\r\n            },\r\n            'requestError': (rejection)=> {\r\n                return rejection;\r\n            },\r\n            'responseError': (rejection)=> {\r\n                if (rejection.status == 401 && rejection.data == 'user is not authenticated')\r\n                    return location.reload();\r\n\r\n                return rejection;\r\n            }\r\n        }\r\n    });\r\n});\r\n\r\n$(document).ajaxError((e, response)=> {\r\n    if (response.status == 401 && response.responseText == 'user is not authenticated')\r\n        return location.reload();\r\n});\r\n",
    "import accModule from '../acc.module';\r\nimport constants from '../localData/constants';\r\n\r\naccModule.config(function (gridFilterCellTypeProvider) {\r\n\r\n    var postingType = {\r\n        cell: gridFilterCellTypeProvider.control.dropdown({\r\n            text: 'display',\r\n            value: 'key',\r\n            data: constants.enums.AccountPostingType()\r\n        }),\r\n        modelType: 'string'\r\n    };\r\n    var balanceType = {\r\n        cell: gridFilterCellTypeProvider.control.dropdown({\r\n            text: 'display',\r\n            value: 'key',\r\n            data: constants.enums.AccountBalanceType()\r\n        }),\r\n        modelType: 'string'\r\n    };\r\n\r\n    var activeType = {\r\n        cell: gridFilterCellTypeProvider.control.dropdown({\r\n            text: 'display',\r\n            value: 'key',\r\n            data: constants.enums.Active()\r\n        }),\r\n        modelType: 'boolean'\r\n    }\r\n\r\n    let journalType = {\r\n        cell: gridFilterCellTypeProvider.control.dropdown({\r\n            text: 'display',\r\n            value: 'key',\r\n            data: constants.enums.JournalType()\r\n        }),\r\n        modelType: 'number'\r\n    };\r\n\r\n    let journalStatus = {\r\n        cell: gridFilterCellTypeProvider.control.dropdown({\r\n            text: 'display',\r\n            value: 'key',\r\n            data: constants.enums.JournalStatus()\r\n        }),\r\n        modelType: 'number'\r\n    }\r\n\r\n    let chequeCategoryStatus = {\r\n        cell: gridFilterCellTypeProvider.control.dropdown({\r\n            text: 'display',\r\n            value: 'key',\r\n            data: constants.enums.ChequeCategoryStatus()\r\n        }),\r\n        modelType: 'number'\r\n    }\r\n\r\n    let generalLedgerAccount = {\r\n        cell: gridFilterCellTypeProvider.control.combo({\r\n            text: 'title',\r\n            value: 'id',\r\n            url: constants.urls.generalLedgerAccount.all()\r\n        }),\r\n        modelType: 'string'\r\n    }\r\n\r\n    let subsidiaryLedgerAccount = {\r\n        cell: gridFilterCellTypeProvider.control.combo({\r\n            text: 'title',\r\n            value: 'id',\r\n            url: constants.urls.subsidiaryLedgerAccount.all()\r\n        }),\r\n        modelType: 'string'\r\n    }\r\n\r\n    let detailAccount = {\r\n        cell: gridFilterCellTypeProvider.control.combo({\r\n            text: 'display',\r\n            value: 'id',\r\n            url: constants.urls.detailAccount.all()\r\n        }),\r\n        modelType: 'string'\r\n    };\r\n\r\n    let bank = {\r\n        cell: gridFilterCellTypeProvider.control.combo({\r\n            text: 'title',\r\n            value: 'id',\r\n            url: constants.urls.bank.all()\r\n        }),\r\n        modelType: 'number'\r\n\r\n    };\r\n\r\n    gridFilterCellTypeProvider.set({\r\n        postingType: postingType,\r\n        balanceType: balanceType,\r\n        activeType: activeType,\r\n        journalType: journalType,\r\n        journalStatus: journalStatus,\r\n        chequeCategoryStatus: chequeCategoryStatus,\r\n        generalLedgerAccount: generalLedgerAccount,\r\n        subsidiaryLedgerAccount: subsidiaryLedgerAccount,\r\n        detailAccount: detailAccount,\r\n        bank: bank\r\n    });\r\n});",
    "import accModule from '../acc.module';\r\n\r\naccModule.config(menuItemsProvider => {\r\n    \"use strict\";\r\n\r\n    menuItemsProvider\r\n        .add({\r\n            title: 'سرفصل حسابها و سطوح',\r\n            url: '',\r\n            icon: '',\r\n            children: [\r\n                {\r\n                    title: 'حسابهای کل و معین',\r\n                    url: '/general-ledger-accounts'\r\n                },\r\n                {\r\n                    title: 'حساب تفصیل',\r\n                    url: '/detail-accounts'\r\n                },\r\n                {\r\n                    title: 'سطوح',\r\n                    url: '/dimensions'\r\n                }\r\n            ]\r\n        })\r\n        .add({\r\n            title: 'سند حسابداری',\r\n            url: '',\r\n            icon: '',\r\n            children: [\r\n                {\r\n                    title: 'لیست اسناد حسابداری',\r\n                    url: '/journals',\r\n                    icon: ''\r\n                },\r\n                {\r\n                    title: 'مدیریت اسناد',\r\n                    url: '/journal-management',\r\n                    icon: ''\r\n                },\r\n                {\r\n                    title: 'کپی سند',\r\n                    url: '/journal/copy',\r\n                    icon: 'glyphicon glyphicon-copy'\r\n                },\r\n                {\r\n                    title: 'سند استاندارد',\r\n                    url: '/journal-templates'\r\n                }\r\n            ]\r\n        })\r\n        .add({\r\n            title: 'خزانه داری',\r\n            url: '',\r\n            icon: '',\r\n            children: [\r\n                {\r\n                    title: 'دسته چک ها',\r\n                    url: '/cheque-categories',\r\n                    icon: ''\r\n                },\r\n                {\r\n                    title: 'بانک ها',\r\n                    url: '/banks',\r\n                    icon: ''\r\n                }\r\n            ]\r\n        })\r\n        .add({\r\n            title: 'گزارشات',\r\n            url: '',\r\n            icon: '',\r\n            children: [\r\n                {\r\n                    title: 'مرور حساب',\r\n                    url: '/account-review',\r\n                    icon: ''\r\n                }\r\n            ]\r\n        });\r\n});",
    "import accModule from '../acc.module';\r\n\r\naccModule.config(($routeProvider, $locationProvider) => {\r\n\r\n    $locationProvider.html5Mode({\r\n        enabled: true,\r\n        requireBase: false\r\n    });\r\n\r\n    $locationProvider.hashPrefix('!');\r\n    $routeProvider\r\n        .when('/', {\r\n            controller: 'homeController',\r\n            templateUrl: 'partials/views/home.html'\r\n        })\r\n        .when('/general-ledger-accounts', {\r\n            controller: 'generalLedgerAccountsController',\r\n            templateUrl: 'partials/views/generalLedgerAccounts.html'\r\n        })\r\n        .when('/subsidiary-ledger-accounts/:generalLedgerAccountId', {\r\n            controller: 'subsidiaryLedgerAccountsController',\r\n            templateUrl: 'partials/views/subsidiaryLedgerAccounts.html'\r\n        })\r\n        .when('/subsidiary-ledger-account/:generalLedgerAccountId/create', {\r\n            controller: 'subsidiaryLedgerAccountCreateController',\r\n            templateUrl: 'partials/views/subsidiaryLedgerAccountCreate.html'\r\n        })\r\n        .when('/subsidiary-ledger-account/:id/edit', {\r\n            controller: 'subsidiaryLedgerAccountUpdateController',\r\n            templateUrl: 'partials/views/subsidiaryLedgerAccountUpdate.html'\r\n        })\r\n        .when('/detail-accounts', {\r\n            controller: 'detailAccountsController',\r\n            templateUrl: 'partials/views/detailAccounts.html'\r\n        })\r\n        .when('/detail-account/create', {\r\n            controller: 'detailAccountCreateController',\r\n            templateUrl: 'partials/views/detailAccountCreate.html'\r\n        })\r\n        .when('/detail-account/:id/edit', {\r\n            controller: 'detailAccountUpdateController',\r\n            templateUrl: 'partials/views/detailAccountUpdate.html'\r\n        })\r\n        .when('/dimensions', {\r\n            controller: 'dimensionsController',\r\n            templateUrl: 'partials/views/dimensions.html'\r\n        })\r\n        .when('/journals', {\r\n            controller: 'journalsController',\r\n            templateUrl: 'partials/views/journals.html'\r\n        })\r\n        .when('/journal/copy', {\r\n            controller: 'journalCopyController',\r\n            templateUrl: 'partials/views/journalCopy.html'\r\n        })\r\n        .when('/journal-templates', {\r\n            controller: 'journalTemplatesController',\r\n            templateUrl: 'partials/views/journalTemplates.html'\r\n        })\r\n        .when('/journal/:id/edit', {\r\n            controller: 'journalUpdateController',\r\n            templateUrl: 'partials/views/journalUpdate.html'\r\n        })\r\n        .when('/journal/:id/print', {\r\n            controller: 'journalPrintController',\r\n            templateUrl: 'partials/views/journalPrint.html'\r\n        })\r\n        .when('/journal-management', {\r\n            controller: 'journalManagementController',\r\n            templateUrl: 'partials/views/journalManagement.html'\r\n        })\r\n        .when('/not-found', {\r\n            templateUrl: 'partials/views/notFound.html'\r\n        })\r\n        .when('/cheque-categories', {\r\n            controller: 'chequeCategoriesController',\r\n            templateUrl: 'partials/views/chequeCategories.html'\r\n        })\r\n        .when('/banks', {\r\n            controller: 'banksController',\r\n            templateUrl: 'partials/views/banks.html'\r\n        })\r\n        .when('/account-review', {\r\n            controller: 'accountReviewController',\r\n            templateUrl: 'partials/views/accountReview.html'\r\n        })\r\n        .when('/account-review/turnover/:name', {\r\n            controller: 'accountReviewTurnoverController',\r\n            templateUrl: 'partials/views/accountReviewTurnover.html'\r\n        })\r\n        .when('/fiscal-period/new', {\r\n            controller: 'createFiscalPeriodController',\r\n            templateUrl: 'partials/views/createFiscalPeriod.html'\r\n        })\r\n        .otherwise('/not-found');\r\n});\r\n\r\naccModule.run($route => $route.reload());",
    "import accModule from '../acc.module';\r\nimport 'angular-translate-loader-url';\r\nimport config from '../localData/config';\r\n\r\naccModule.config($translateProvider => {\r\n    if (config.isClientTest()) {\r\n        $translateProvider.useUrlLoader('client/translate.json');\r\n    } else {\r\n        let translate = JSON.parse(localStorage.getItem('translate'));\r\n\r\n        $translateProvider.translations('fa_IR', translate);\r\n        $translateProvider.useStorage('translateStorageService');\r\n    }\r\n\r\n    $translateProvider.preferredLanguage('fa_IR');\r\n    $translateProvider.useSanitizeValueStrategy('escapeParameters');\r\n});",
    "import accModule from '../acc.module';\r\n\r\nfunction accountReviewController($scope, navigate, dimensionCategoryApi, constants, formService) {\r\n\r\n    $scope.parameters = localStorage.getItem('account-review-state')\r\n        ? JSON.parse(localStorage.getItem('account-review-state'))\r\n        : {\r\n        minDate: '',\r\n        maxDate: '',\r\n        minNumber: null,\r\n        maxNumber: null,\r\n        notShowZeroRemainder: false,\r\n        isNotPeriodIncluded: false,\r\n        detailAccount: null,\r\n        dimension1: null,\r\n        dimension2: null,\r\n        dimension3: null\r\n    };\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.dimension1DataSource = {};\r\n    $scope.dimension2DataSource = {};\r\n    $scope.dimension3DataSource = {};\r\n    $scope.dimension4DataSource = {};\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result)=> {\r\n            let cats = result.data;\r\n            $scope.dimensionCategories = cats.asEnumerable().take(3).toArray();\r\n\r\n            $scope.dimension1DataSource = dimensionDataSourceFactory(cats[0].id);\r\n            $scope.dimension2DataSource = dimensionDataSourceFactory(cats[1].id);\r\n            $scope.dimension3DataSource = dimensionDataSourceFactory(cats[2].id);\r\n        });\r\n\r\n    function dimensionDataSourceFactory(categoryId) {\r\n        return {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: constants.urls.dimension.allByCategory(categoryId)\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        };\r\n    }\r\n\r\n    function saveState() {\r\n        let state = JSON.stringify($scope.parameters);\r\n\r\n        localStorage.setItem('account-review-state', state);\r\n    }\r\n\r\n    function getParameters() {\r\n        let parameters = $scope.parameters,\r\n            params = {};\r\n\r\n        if (parameters.minNumber) {\r\n            params.minNumber = parameters.minNumber;\r\n            params.maxNumber = parameters.maxNumber;\r\n        }\r\n\r\n        if (parameters.minDate) {\r\n            params.minDate = parameters.minDate;\r\n            params.maxDate = parameters.maxDate;\r\n        }\r\n\r\n        params.notShowZeroRemainder = parameters.notShowZeroRemainder;\r\n        params.isNotPeriodIncluded = parameters.isNotPeriodIncluded;\r\n\r\n        return params;\r\n    }\r\n\r\n    $scope.executeTurnover = (reportName)=> {\r\n        saveState();\r\n        let params = getParameters();\r\n\r\n        navigate('accountReviewTurnover', {name: reportName}, params);\r\n    };\r\n\r\n    $scope.detailAccountExecuteTurnovers = (reportName)=> {\r\n        saveState();\r\n\r\n        let params = getParameters();\r\n        params.detailAccountId = $scope.parameters.detailAccount.id;\r\n        params.detailAccountDisplay = $scope.parameters.detailAccount.display;\r\n\r\n        navigate('accountReviewTurnover', {name: reportName}, params);\r\n    };\r\n\r\n    $scope.dimensionExecuteTurnovers = (dimensionName, reportName, index)=> {\r\n        saveState();\r\n\r\n        let params = getParameters();\r\n        params[`${dimensionName}Id`] = $scope.parameters[dimensionName].id;\r\n        params[`${dimensionName}Display`] = $scope.parameters[dimensionName].display;\r\n        params[`${dimensionName}Caption`] = $scope.dimensionCategories[index].title;\r\n\r\n        navigate('accountReviewTurnover', {name: reportName}, params);\r\n    };\r\n}\r\n\r\naccModule.controller('accountReviewController', accountReviewController);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction accountReviewTurnoverController($scope, navigate, $routeParams, $location, translate,\r\n                                         dimensionCategoryApi,\r\n                                         accountReviewTurnoverGridOptionService,\r\n                                         showJournalDetailModalService) {\r\n    let titles = {\r\n        generalLedgerAccount: 'Total turnover general ledger account',\r\n        subsidiaryLedgerAccount: 'Total turnover subsidiary ledger account',\r\n        detailAccount: 'Total turnover detail account',\r\n        dimension: 'Total turnover',\r\n        tiny: 'Tiny turnover journals'\r\n    };\r\n\r\n    let reportName = $scope.reportName = $routeParams.name;\r\n    let parameters = $location.search();\r\n    let dimensionCategories = [];\r\n    let commands = [\r\n        {\r\n            order: 0,\r\n            key: 'tiny',\r\n            display: translate('Tiny turnover journals')\r\n        },\r\n        {\r\n            order: 1,\r\n            key: 'generalLedgerAccount',\r\n            display: translate('General ledger account')\r\n        },\r\n        {\r\n            order: 2,\r\n            key: 'subsidiaryLedgerAccount',\r\n            display: translate('Subsidiary ledger account')\r\n        },\r\n        {\r\n            order: 3,\r\n            key: 'detailAccount',\r\n            display: translate('Detail account')\r\n        }\r\n    ];\r\n\r\n    $scope.commands = [];\r\n\r\n    $scope.title = translate(titles[$routeParams.name]);\r\n\r\n    if (reportName != 'tiny')\r\n        dimensionCategoryApi.getAllLookup().then((result)=> {\r\n            dimensionCategories = result.data;\r\n\r\n            $scope.title = $routeParams.name.includes('dimension')\r\n                ? `${translate(titles.dimension)} ${dimensionCategories[parseInt('dimension1'.replace('dimension', '')) - 1].title}`\r\n                : translate(titles[$routeParams.name]);\r\n\r\n            $scope.commands = dimensionCategories.asEnumerable().select(c=> {\r\n                    let order = 3;\r\n\r\n                    return {\r\n                        order: ++order,\r\n                        key: `dimension${dimensionCategories.indexOf(c) + 1}`,\r\n                        display: c.title\r\n                    };\r\n                })\r\n                .concat(commands)\r\n                .where(a=> a.key != $routeParams.name)\r\n                .orderBy(a=> a.order)\r\n                .toArray();\r\n        });\r\n\r\n    $scope.titleParameters = getTitleParameters();\r\n\r\n    $scope.gridOption = accountReviewTurnoverGridOptionService[$routeParams.name];\r\n    $scope.gridOption.extra = {filter: getParameters()};\r\n    $scope.current = false;\r\n\r\n    $scope.execute = (key)=> {\r\n        let params = angular.extend({}, parameters);\r\n        delete params[`${key}Id`];\r\n        delete params[`${key}Display`];\r\n\r\n        params[`${reportName}Id`] = $scope.current[`${reportName}Id`];\r\n        params[`${reportName}Display`] = `${$scope.current[`${reportName}Code`]} ${$scope.current[`${reportName}Title`]}`;\r\n\r\n        navigate('accountReviewTurnover', {name: key}, params);\r\n    };\r\n\r\n    $scope.onCurrentChanged = (current)=> {\r\n        if (!current) $scope.current = false;\r\n\r\n        $scope.current = current;\r\n\r\n        if (!$scope.$$phase)\r\n            $scope.$apply();\r\n    };\r\n\r\n    $scope.showJournal = ()=> {\r\n        showJournalDetailModalService\r\n            .show({\r\n                id: $scope.current.id\r\n            });\r\n    };\r\n\r\n    function getTitleParameters() {\r\n        let titleParameters = [];\r\n\r\n        if (parameters.generalLedgerAccountId)\r\n            titleParameters.push({\r\n                name: translate('General ledger account'),\r\n                value: parameters.generalLedgerAccountDisplay\r\n            });\r\n\r\n        if (parameters.subsidiaryLedgerAccountId)\r\n            titleParameters.push({\r\n                name: translate('Subsidiary ledger account'),\r\n                value: parameters.subsidiaryLedgerAccountDisplay\r\n            });\r\n\r\n        if (parameters.detailAccountId)\r\n            titleParameters.push({\r\n                name: translate('Detail account'),\r\n                value: parameters.detailAccountDisplay\r\n            });\r\n\r\n        if (parameters.dimension1Id)\r\n            titleParameters.push({\r\n                name: parameters.dimension1Caption,\r\n                value: parameters.dimension1Display\r\n            });\r\n\r\n        if (parameters.dimension2Id)\r\n            titleParameters.push({\r\n                name: parameters.dimension2Caption,\r\n                value: parameters.dimension2Display\r\n            });\r\n\r\n        if (parameters.dimension3Id)\r\n            titleParameters.push({\r\n                name: parameters.dimension3Caption,\r\n                value: parameters.dimension3Display\r\n            });\r\n\r\n        if (parameters.minNumber)\r\n            titleParameters.push({\r\n                name: translate('Number'),\r\n                value: `[${parameters.minNumber},${parameters.maxNumber}]`\r\n            });\r\n\r\n        if (parameters.minDate)\r\n            titleParameters.push({\r\n                name: translate('Date'),\r\n                value: `[${parameters.minDate},${parameters.maxDate}]`\r\n            });\r\n\r\n        if (eval(parameters.notShowZeroRemainder))\r\n            titleParameters.push({\r\n                name: translate('Not show zero remiander')\r\n            });\r\n\r\n        if (eval(parameters.isNotPeriodIncluded))\r\n            titleParameters.push({\r\n                name: translate('Is not period included')\r\n            });\r\n\r\n        return titleParameters;\r\n    }\r\n\r\n    function getParameters() {\r\n        let params = {};\r\n\r\n        if (parameters.generalLedgerAccountId)\r\n            params.generalLedgerAccountId = parameters.generalLedgerAccountId;\r\n\r\n        if (parameters.subsidiaryLedgerAccountId)\r\n            params.subsidiaryLedgerAccountId = parameters.subsidiaryLedgerAccountId;\r\n\r\n        if (parameters.detailAccountId)\r\n            params.detailAccountId = parameters.detailAccountId;\r\n\r\n        if (parameters.dimension1Id)\r\n            params.dimension1Id = parameters.dimension1Id;\r\n\r\n        if (parameters.dimension2Id)\r\n            params.dimension2Id = parameters.dimension2Id;\r\n\r\n        if (parameters.dimension3Id)\r\n            params.dimension3Id = parameters.dimension3Id;\r\n\r\n        if (parameters.minNumber) {\r\n            params.minNumber = parameters.minNumber;\r\n            params.maxNumber = parameters.maxNumber;\r\n        }\r\n\r\n        if (parameters.minDate) {\r\n            params.minDate = parameters.minDate;\r\n            params.maxDate = parameters.maxDate;\r\n        }\r\n\r\n        params.notShowZeroRemainder = parameters.notShowZeroRemainder;\r\n        params.isNotPeriodInclude = parameters.isNotPeriodInclude;\r\n\r\n        return params;\r\n    }\r\n}\r\n\r\n\r\nfunction accountReviewTurnoverGridOptionService(translate, constants) {\r\n    let options = {};\r\n\r\n    let amountColumns = [\r\n        {\r\n            name: 'sumBeforeRemainder',\r\n            title: translate('Before remainder'),\r\n            type: 'number',\r\n            width: '15%',\r\n            format: '{0:#,##;(#,##)}',\r\n            aggregates: ['sum'],\r\n            footerTemplate: \"${kendo.toAmount(sum)}\"\r\n        },\r\n        {\r\n            name: 'sumDebtor',\r\n            title: translate('Debtor'),\r\n            type: 'number',\r\n            width: '15%',\r\n            format: '{0:#,##;(#,##)}',\r\n            aggregates: ['sum'],\r\n            footerTemplate: \"${kendo.toAmount(sum)}\"\r\n        },\r\n        {\r\n            name: 'sumCreditor',\r\n            title: translate('Creditor'),\r\n            type: 'number',\r\n            width: '15%',\r\n            format: '{0:#,##;(#,##)}',\r\n            aggregates: ['sum'],\r\n            footerTemplate: \"${kendo.toAmount(sum)}\"\r\n        },\r\n        {\r\n            name: 'sumRemainder',\r\n            title: translate('Remainder'),\r\n            type: 'number',\r\n            width: '15%',\r\n            format: '{0:#,##;(#,##)}',\r\n            aggregates: ['sum'],\r\n            footerTemplate: \"${kendo.toAmount(sum)}\"\r\n        }\r\n    ];\r\n\r\n    options.generalLedgerAccount = {\r\n        columns: [\r\n            {\r\n                name: 'generalLedgerAccountCode',\r\n                title: translate('General ledger account'),\r\n                type: 'string',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'generalLedgerAccountTitle',\r\n                title: translate('Title'),\r\n                type: 'string',\r\n                width: '40%'\r\n            },\r\n            ...amountColumns\r\n        ],\r\n        commands: [],\r\n        readUrl: constants.urls.accountReview.getAllGeneralLedgerAccount(),\r\n        selectable: true\r\n    };\r\n\r\n    options.subsidiaryLedgerAccount = {\r\n        columns: [\r\n            {\r\n                name: 'subsidiaryLedgerAccountCode',\r\n                title: translate('Subsidiary ledger account'),\r\n                type: 'string',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'generalLedgerAccountCode',\r\n                title: translate('General ledger account'),\r\n                type: 'string',\r\n                width: '100px'\r\n            },\r\n            {name: 'subsidiaryLedgerAccountTitle', title: translate('Title'), type: 'string', width: '40%'},\r\n            ...amountColumns\r\n        ],\r\n        commands: [],\r\n        readUrl: constants.urls.accountReview.getAllSubsidiaryLedgerAccount(),\r\n        selectable: true\r\n    };\r\n\r\n    options.detailAccount = {\r\n        columns: [\r\n            {\r\n                name: 'detailAccountCode',\r\n                title: translate('Detail account'),\r\n                type: 'string',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'detailAccountTitle',\r\n                title: translate('Title'),\r\n                type: 'string',\r\n                width: '40%'\r\n            },\r\n            ...amountColumns\r\n        ],\r\n        commands: [],\r\n        readUrl: constants.urls.accountReview.getAllDetailAccount(),\r\n        selectable: true\r\n    };\r\n\r\n    options.dimension1 = {\r\n        columns: [\r\n            {\r\n                name: 'dimension1Code',\r\n                headerTemplate: kendo.template('${kendo.dimensionCategories[0].title}'),\r\n                type: 'string',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'dimension1Title',\r\n                title: translate('Title'),\r\n                type: 'string',\r\n                width: '40%'\r\n            },\r\n            ...amountColumns\r\n        ],\r\n        commands: [],\r\n        readUrl: constants.urls.accountReview.getAllDimension1(),\r\n        selectable: true\r\n    };\r\n\r\n    options.dimension2 = {\r\n        columns: [\r\n            {\r\n                name: 'dimension2Code',\r\n                headerTemplate: kendo.template('${kendo.dimensionCategories[1].title}'),\r\n                type: 'string',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'dimension2Title',\r\n                title: translate('Title'),\r\n                type: 'string',\r\n                width: '40%'\r\n            },\r\n            ...amountColumns\r\n        ],\r\n        commands: [],\r\n        readUrl: constants.urls.accountReview.getAllDimension2(),\r\n        selectable: true\r\n    };\r\n\r\n    options.dimension3 = {\r\n        columns: [\r\n            {\r\n                name: 'dimension3Code',\r\n                headerTemplate: kendo.template('${kendo.dimensionCategories[2].title}'),\r\n                type: 'string',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'dimension3Title',\r\n                title: translate('Title'),\r\n                type: 'string',\r\n                width: '40%'\r\n            },\r\n            ...amountColumns\r\n        ],\r\n        commands: [],\r\n        readUrl: constants.urls.accountReview.getAllDimension3(),\r\n        selectable: true\r\n    };\r\n\r\n    options.tiny = {\r\n        columns: [\r\n            {\r\n                name: 'number',\r\n                title: translate('Number'),\r\n                type: 'number',\r\n                width: '50px'\r\n            },\r\n            {\r\n                name: 'date',\r\n                title: translate('Date'),\r\n                type: 'string',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'dimension3Code',\r\n                headerTemplate: kendo.template('${kendo.dimensionCategories[2].title}'),\r\n                type: 'string',\r\n                width: '70px'\r\n            },\r\n            {\r\n                name: 'dimension2Code',\r\n                headerTemplate: kendo.template('${kendo.dimensionCategories[1].title}'),\r\n                type: 'string',\r\n                width: '70px'\r\n            },\r\n            {\r\n                name: 'dimension1Code',\r\n                headerTemplate: kendo.template('${kendo.dimensionCategories[0].title}'),\r\n                type: 'string',\r\n                width: '70px'\r\n            },\r\n            {\r\n                name: 'detailAccountCode',\r\n                title: translate('Detail account'),\r\n                type: 'string',\r\n                width: '70px'\r\n            },\r\n            {\r\n                name: 'subsidiaryLedgerAccountCode',\r\n                title: translate('Subsidiary ledger account'),\r\n                type: 'string',\r\n                width: '50px'\r\n            },\r\n            {\r\n                name: 'generalLedgerAccountCode',\r\n                title: translate('General ledger account'),\r\n                type: 'string',\r\n                width: '50px'\r\n            },\r\n            {\r\n                name: 'sumDebtor',\r\n                title: translate('Debtor'),\r\n                type: 'number',\r\n                width: '15%',\r\n                format: '{0:#,##}',\r\n                aggregates: ['sum'],\r\n                footerTemplate: \"#= kendo.toString(sum,'n0') #\"\r\n            },\r\n            {\r\n                name: 'sumCreditor',\r\n                title: translate('Creditor'),\r\n                type: 'number',\r\n                width: '15%',\r\n                format: '{0:#,##}',\r\n                aggregates: ['sum'],\r\n                footerTemplate: \"#= kendo.toString(sum,'n0') #\"\r\n            },\r\n            {\r\n                name: 'article', title: translate('Article'), type: 'string', width: '10%',\r\n                template: '<span title=\"${data.article}\">${data.article}</span>'\r\n            },\r\n        ],\r\n        commands: [],\r\n        readUrl: constants.urls.accountReview.getAllTiny(),\r\n        selectable: true\r\n    };\r\n\r\n    return options;\r\n}\r\n\r\naccModule\r\n    .controller('accountReviewTurnoverController', accountReviewTurnoverController)\r\n    .factory('accountReviewTurnoverGridOptionService', accountReviewTurnoverGridOptionService);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction banksController($scope, logger, confirm, bankApi, constants, translate) {\r\n    $scope.gridDateSource = {\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.bank.all(),\r\n                dataType: \"json\",\r\n                contentType: 'application/json; charset=utf-8',\r\n                type: 'GET'\r\n            },\r\n            update: {\r\n                url: (model)=> '/api/banks/{0}'.format(model.id),\r\n                dataType: 'json',\r\n                type: \"PUT\"\r\n            },\r\n            create: {\r\n                url: '/api/banks',\r\n                dataType: 'json',\r\n                type: 'POST'\r\n            },\r\n            destroy: {\r\n                url: (model)=> '/api/banks/{0}'.format(model.id),\r\n                dataType: 'json',\r\n                type: \"DELETE\"\r\n            }\r\n        },\r\n        pageSize: 20,\r\n        schema: {\r\n            data: 'data',\r\n            total: 'total',\r\n            model: {\r\n                id: 'id',\r\n                fields: {\r\n                    title: {validation: {required: true}}\r\n                },\r\n\r\n            }\r\n        },\r\n        serverPaging: true,\r\n        serverFiltering: true,\r\n        serverSorting: true\r\n    };\r\n\r\n\r\n    let gridOption = $scope.gridOption = {\r\n        columns: [\r\n            {name: 'title', title: translate('Title'), type: 'string'}\r\n        ],\r\n        commands: [\r\n            'edit',\r\n            {\r\n                title: translate('Remove'),\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove Bank'),\r\n                        translate('Are you sure ?'))\r\n                        .then(function () {\r\n                            gridOption.grid.dataSource.remove(current);\r\n                            gridOption.grid.dataSource.sync()\r\n                                .then(function () {\r\n                                    logger.success();\r\n                                    $scope.$apply();\r\n                                });\r\n                        });\r\n                }\r\n            }\r\n        ],\r\n        editable: \"inline\"\r\n    }\r\n\r\n    $scope.create = ()=> {\r\n        gridOption.grid.addRow();\r\n    }\r\n\r\n\r\n}\r\n\r\naccModule.controller('banksController', banksController);",
    "import accModule from '../acc.module';\r\n\r\nfunction chequeCategoriesController($scope, logger, chequeCategoryApi, confirm, constants, translate, $timeout,\r\n                                    chequeCategoryCreateModalService,\r\n                                    chequeCategoryUpdateModalService) {\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'bankId', title: translate('Bank'), width: '10%', type: 'bank', template: '${data.bank}'},\r\n            {name: 'totalPages', title: translate('Total pages'), type: 'number', width: '10%'},\r\n            {name: 'firstPageNumber', title: translate('First page number'), type: 'number', width: '10%'},\r\n            {name: 'lastPageNumber', title: translate('Last page number'), type: 'number', width: '10%'},\r\n            {\r\n                name: 'detailAccountId',\r\n                title: translate('Detail account'),\r\n                type: 'detailAccount',\r\n                template: '${data.detailAccount}'\r\n            },\r\n            {\r\n                name: 'status',\r\n                title: translate('Status'),\r\n                type: 'chequeCategoryStatus',\r\n                template: '${data.statusDisplay}',\r\n                width: '10%'\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                action: function (current) {\r\n                    chequeCategoryUpdateModalService.show({id: current.id})\r\n                        .then(()=> {\r\n                            logger.success();\r\n                            $scope.gridOption.refresh();\r\n                        });\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove Cheque category'),\r\n                        translate('Are you sure ?'))\r\n                        .then(()=> {\r\n                            chequeCategoryApi.remove(current.id)\r\n                                .then(function () {\r\n                                    logger.success();\r\n                                    $scope.gridOption.refresh();\r\n                                })\r\n                                .catch((errors)=> $scope.errors = errors)\r\n                                .finally(()=> $scope.isSaving = false);\r\n                        })\r\n\r\n                }\r\n            }\r\n        ],\r\n        readUrl: constants.urls.chequeCategory.all(),\r\n        current: null,\r\n        selectable: true\r\n    };\r\n\r\n    $scope.chequeGridOption = {\r\n        columns: [\r\n            {name: 'number', title: translate('Number'), width: '10%', type: 'number'},\r\n            {name: 'date', title: translate('Date'), type: 'date', width: '10%'},\r\n            {name: 'description', title: translate('Description'), type: 'string', width: '30%'},\r\n            {name: 'amount', title: translate('Amount'), type: 'number', width: '10%', format: '{0:#,##}'}\r\n        ],\r\n        commands: [],\r\n        //filterable: false\r\n    };\r\n    $scope.canShowCheques = false;\r\n\r\n    $scope.$watch('gridOption.current', (newValue)=> {\r\n        if (!newValue)\r\n            return $scope.canShowCheques = false;\r\n\r\n        $scope.canShowCheques = false;\r\n\r\n        $timeout(()=> {\r\n            $scope.chequeGridOption.readUrl = constants.urls.cheque.all(newValue.id);\r\n\r\n            $scope.canShowCheques = true;\r\n        }, 500);\r\n\r\n    });\r\n\r\n    $scope.create = ()=> {\r\n        chequeCategoryCreateModalService.show()\r\n            .then(()=> {\r\n                logger.success();\r\n                $scope.gridOption.refresh();\r\n            });\r\n    }\r\n}\r\n\r\naccModule.controller('chequeCategoriesController', chequeCategoriesController);\r\n",
    "\"use strict\";\r\n\r\nexport default class createFiscalPeriodController {\r\n    constructor($scope, formService, fiscalPeriodApi, navigate) {\r\n        this.$scope = $scope;\r\n        this.formService = formService;\r\n        this.fiscalPeriodApi = fiscalPeriodApi;\r\n        this.navigate = navigate;\r\n\r\n        $scope.fiscalPeriod = {\r\n            minDate: '',\r\n            maxDate: ''\r\n        };\r\n\r\n        $scope.isSaving = false;\r\n        $scope.save = this.save.bind(this);\r\n\r\n        $scope.errors = [];\r\n\r\n    }\r\n\r\n    save(form) {\r\n        if (form.$invalid)\r\n            return this.formService.setDirty(form);\r\n        this.$scope.isSaving = true;\r\n\r\n        this.fiscalPeriodApi.create(this.$scope.fiscalPeriod)\r\n            .then(result => {\r\n                this.$scope.$emit('fiscal-period-changed', result);\r\n                this.navigate('home');\r\n            })\r\n            .catch(err => this.$scope.errors = err)\r\n            .finally(()=> this.$scope.isSaving = false);\r\n    }\r\n}",
    "import accModule from '../acc.module';\r\n\r\nfunction detailAccountsController($scope, logger, translate, confirm, navigate,\r\n                                  detailAccountApi,\r\n                                  detailAccountCreateModalService,\r\n                                  detailAccountUpdateModalService) {\r\n    \"use strict\";\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {\r\n                name: 'isActive',\r\n                title: translate('Is active ?'),\r\n                type: 'activeType',\r\n                width: '150px',\r\n                template: '<i class=\"glyphicon glyphicon-${data.isActive ? \"ok-circle\" : \"remove-circle\"}\"' +\r\n                'style=\"font-size: 20px;color:${data.isActive ? \"green\" : \"red\"}\">' +\r\n                '</i>'\r\n            },\r\n            {name: 'code', title: translate('Code'), width: '120px', type: 'string'},\r\n            {name: 'title', title: translate('Title'), type: 'string'}\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                name: 'edit detail account',\r\n                action: function (current) {\r\n                    detailAccountUpdateModalService.show({id: current.id})\r\n                        .then(()=> $scope.gridOption.refresh());\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove Detail account'),\r\n                        translate('Are you sure ?'))\r\n                        .then(function () {\r\n                            detailAccountApi.remove(current.id)\r\n                                .then(function () {\r\n                                    logger.success();\r\n                                    $scope.gridOption.refresh();\r\n                                })\r\n                                .catch((errors)=> $scope.errors = errors)\r\n                                .finally(()=> $scope.isSaving = false);\r\n                        })\r\n\r\n                }\r\n            }\r\n        ],\r\n        readUrl: detailAccountApi.url.getAll\r\n    };\r\n\r\n    $scope.create = ()=> detailAccountCreateModalService.show()\r\n        .then(()=> $scope.gridOption.refresh());\r\n}\r\n\r\naccModule.controller('detailAccountsController', detailAccountsController);",
    "import accModule from '../acc.module';\r\n\r\nfunction dimensionsController($scope, logger, translate, confirm, constants, $timeout,\r\n                              dimensionCategoryApi, dimensionApi,\r\n                              dimensionCreateModalService,\r\n                              dimensionUpdateModalService) {\r\n    \"use strict\";\r\n    $scope.errors = [];\r\n\r\n    $scope.gridDateSource = {\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.dimensionCategory.all(),\r\n                dataType: \"json\",\r\n                contentType: 'application/json; charset=utf-8',\r\n                type: 'GET'\r\n            },\r\n            update: {\r\n                url: (model)=> `/api/dimension-categories/${model.id}`,\r\n                dataType: 'json',\r\n                type: \"PUT\"\r\n            },\r\n            parameterMap: (options, method)=> {\r\n                if (method == 'read')\r\n                    $scope.onCurrentChanged(null);\r\n                return options;\r\n            }\r\n        },\r\n        pageSize: 20,\r\n        schema: {\r\n            data: 'data',\r\n            total: 'total',\r\n            model: {\r\n                id: 'id',\r\n                fields: {\r\n                    title: {validation: {required: true}}\r\n                },\r\n\r\n            }\r\n        },\r\n        serverPaging: true,\r\n        serverFiltering: true,\r\n        serverSorting: true,\r\n    };\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'title', title: translate('Title'), type: 'string'}\r\n        ],\r\n        commands: ['edit'],\r\n        editable: \"inline\",\r\n        selectable: true,\r\n        filterable: false,\r\n        gridSize: '200px'\r\n    };\r\n\r\n    $scope.current = false;\r\n    $scope.gridDimensions = false;\r\n\r\n    $scope.onCurrentChanged = (current)=> {\r\n        $scope.current = current == null ? false : current;\r\n\r\n        $scope.gridDimensions = false;\r\n\r\n        if (!$scope.$$phase)\r\n            $scope.$apply();\r\n\r\n        if (current != null)\r\n            $timeout(()=> $scope.gridDimensions = gridOptionFactory(current), 0);\r\n    };\r\n\r\n    $scope.createDimension = (cat)=> {\r\n        dimensionCreateModalService.show({categoryId: cat.id})\r\n            .then(()=> {\r\n                cat.gridOption.refresh();\r\n                logger.success();\r\n            });\r\n    };\r\n\r\n    function gridOptionFactory(cat) {\r\n        let columns = [\r\n            {name: 'code', title: translate('Code'), width: '120px', type: 'string'},\r\n            {name: 'title', title: translate('Title'), type: 'string'}\r\n        ];\r\n\r\n        let commands = [\r\n            {\r\n                title: translate('Edit'),\r\n                action: function (current) {\r\n                    dimensionUpdateModalService.show({id: current.id})\r\n                        .then(()=> {\r\n                            $scope.gridDimensions.refresh();\r\n                            logger.success();\r\n                        });\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove Dimension'),\r\n                        translate('Are you sure ?'))\r\n                        .then(()=> {\r\n                            dimensionApi.remove(current.id)\r\n                                .then(function () {\r\n                                    $scope.gridDimensions.refresh();\r\n                                    logger.success();\r\n                                })\r\n                                .catch((err)=> $scope.errors = err);\r\n                        })\r\n\r\n                }\r\n            }\r\n        ];\r\n\r\n        return {\r\n            columns: columns,\r\n            commands: commands,\r\n            readUrl: dimensionApi.url.getAll(cat.id)\r\n        }\r\n    }\r\n\r\n}\r\n\r\naccModule.controller('dimensionsController', dimensionsController);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction generalLedgerAccountsController($scope, logger, translate, confirm,\r\n                                         generalLedgerAccountApi,\r\n                                         generalLedgerAccountCreateModalService,\r\n                                         generalLedgerAccountUpdateModalService) {\r\n    let columns = [\r\n        {name: 'code', title: translate('Code'), width: '120px', type: 'string'},\r\n        {name: 'title', title: translate('Title'), type: 'string'},\r\n        {\r\n            name: 'postingType',\r\n            title: translate('Posting type'),\r\n            type: 'postingType',\r\n            width: '150px',\r\n            template: '${data.postingTypeDisplay}'\r\n        },\r\n        {\r\n            name: 'balanceType',\r\n            title: translate('Balance type'),\r\n            type: 'balanceType',\r\n            width: '150px',\r\n            template: '${data.balanceTypeDisplay}'\r\n        },\r\n        {\r\n            name: 'isActive',\r\n            title: translate('Is active ?'),\r\n            type: 'activeType',\r\n            width: '150px',\r\n            template: '<i class=\"glyphicon glyphicon-${data.isActive ? \"ok-circle\" : \"remove-circle\"}\"' +\r\n            'style=\"font-size: 20px;color:${data.isActive ? \"green\" : \"red\"}\">' +\r\n            '</i>'\r\n        }\r\n    ];\r\n\r\n    let commands = [\r\n        {\r\n            title: translate('Edit'),\r\n            name: 'edit general ledger account',\r\n            action: function (current) {\r\n                generalLedgerAccountUpdateModalService.show({id: current.id})\r\n                    .then(function () {\r\n                        $scope.gridOption.refresh();\r\n                    });\r\n            }\r\n        },\r\n        {\r\n            title: translate('Remove'),\r\n            action: function (current) {\r\n                confirm(\r\n                    translate('Remove General ledger account'),\r\n                    translate('Are you sure ?'))\r\n                    .then(function () {\r\n                        generalLedgerAccountApi.remove(current.id)\r\n                            .then(function () {\r\n                                logger.success();\r\n                                $scope.gridOption.refresh();\r\n                            })\r\n                            .catch((errors)=> $scope.errors = errors)\r\n                            .finally(()=> $scope.isSaving = false);\r\n                    })\r\n\r\n            }\r\n        }\r\n    ];\r\n\r\n    $scope.gridOption = {\r\n        columns: columns,\r\n        commands: commands,\r\n        readUrl: generalLedgerAccountApi.url.getAll,\r\n        current: null,\r\n        selectable: true\r\n    };\r\n\r\n    $scope.create = function () {\r\n        generalLedgerAccountCreateModalService.show()\r\n            .then(function () {\r\n                $scope.gridOption.refresh();\r\n            });\r\n    };\r\n}\r\n\r\naccModule\r\n    .controller('generalLedgerAccountsController', generalLedgerAccountsController);",
    "import accModule from '../acc.module';\r\n\r\nfunction homeController($scope, $rootScope, constants, currentService, navigate) {\r\n\r\n    debugger;\r\n\r\n    $scope.current = currentService.get();\r\n\r\n    if (!$scope.current.fiscalPeriod)\r\n        return navigate('createFiscalPeriod');\r\n\r\n    $scope.fiscalPeriodDataBound = (e)=> {\r\n        let item = e.sender.dataItem();\r\n        $scope.$emit('fiscal-period-changed', item);\r\n    };\r\n\r\n    $scope.periodDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.period.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.periodOnChange = (e)=> {\r\n        let item = e.sender.dataItem();\r\n        $scope.$emit('fiscal-period-changed', item);\r\n    };\r\n\r\n    $scope.modesDataSource = constants.enums.AccMode().data;\r\n\r\n    $scope.modeOnChanged = ()=> {\r\n        $scope.$emit('mode-changed', {\r\n            key: $scope.current.mode,\r\n            display: constants.enums.AccMode().getDisplay($scope.current.mode)\r\n        });\r\n    };\r\n\r\n}\r\n\r\naccModule\r\n    .controller('homeController', homeController);",
    "import accModule from '../acc.module';\r\n\r\nfunction journalCopyController($scope, translate, journalApi, navigate, constants, $timeout, confirm) {\r\n    \"use strict\";\r\n\r\n    $scope.errors = [];\r\n\r\n    $scope.periodDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.period.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.periodOnChange = (e)=> {\r\n        let item = e.sender.dataItem();\r\n\r\n        $scope.canShowJournalGrid = false;\r\n        $scope.gridOption.readUrl = constants.urls.journal.getAllByPeriod(item.id);\r\n\r\n        $timeout(()=> $scope.canShowJournalGrid = true, 0)\r\n    };\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'temporaryNumber', title: translate('Temporary number'), width: '20%', type: 'number'},\r\n            {name: 'temporaryDate', title: translate('Temporary date'), type: 'date', width: '20%'},\r\n            {\r\n                name: 'description', title: translate('Description'), type: 'string', width: '50%',\r\n                template: '<span title=\"${data.description}\">${data.description}</span>'\r\n            }\r\n        ],\r\n        commands: [],\r\n        selectable: true,\r\n        current: null\r\n    };\r\n\r\n    $scope.canShowJournalGrid = false;\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.submit = (current)=> {\r\n\r\n        confirm(\r\n            translate('Are you sure ?'),\r\n            translate('Copy journal')\r\n        ).then(()=> {\r\n            $scope.isSaving = true;\r\n\r\n            journalApi.copy(current.id)\r\n                .then((result)=> {\r\n                    confirm(\r\n                        translate('Do you want to edit created journal ?'),\r\n                        translate('Successful'),\r\n                        'success'\r\n                    ).then(()=> {\r\n                        navigate('journalUpdate', {id: result.id});\r\n                    });\r\n                })\r\n                .finally(()=> $scope.isSaving = false)\r\n        });\r\n    };\r\n\r\n    $scope.editCreatedJournal = ()=> {\r\n        navigate('journalUpdate', {id: $scope.model.createdJournalId});\r\n    };\r\n}\r\n\r\naccModule\r\n    .controller('journalCopyController', journalCopyController);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalManagementController($scope, logger, confirm, constants, translate, $timeout,\r\n                                     showJournalDetailModalService,\r\n                                     journalBookkeepingService) {\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'monthName', title: translate('Month'), type: 'string'},\r\n            {name: 'count', title: translate('Count'), type: 'string'},\r\n            {name: 'minNumber', title: translate('From number'), type: 'string'},\r\n            {name: 'maxNumber', title: translate('To number'), type: 'string'},\r\n            {name: 'minDate', title: translate('From date'), type: 'string'},\r\n            {name: 'maxDate', title: translate('To date'), type: 'string'}\r\n        ],\r\n        commands: [],\r\n        readUrl: constants.urls.journal.getGroupedByMouth(),\r\n        current: null,\r\n        selectable: true,\r\n        filterable: false,\r\n        pageable: false,\r\n        gridSize: '300px'\r\n    };\r\n\r\n    $scope.canShowJournals = false;\r\n\r\n    $scope.journalGridOption = {\r\n        columns: [\r\n            {name: 'temporaryNumber', title: translate('Temporary number'), type: 'number', width: '10%'},\r\n            {name: 'temporaryDate', title: translate('Temporary date'), type: 'date', width: '10%'},\r\n            {name: 'number', title: translate('Number'), type: 'number', width: '10%'},\r\n            {name: 'date', title: translate('Date'), type: 'date', width: '10%'},\r\n            {\r\n                name: 'isFixed', title: translate('Fixed ?'), type: 'boolean', width: '10%',\r\n                template: '<i class=\"glyphicon glyphicon-${data.isFixed ? \"ok-circle\" : \"remove-circle\"}\"' +\r\n                'style=\"font-size: 20px;\">' +\r\n                '</i>'\r\n            },\r\n            {name: 'sumAmount', title: translate('Amount'), type: 'number', width: '10%', format: '{0:#,##}'},\r\n            {\r\n                name: 'hasAttachment', title: translate('Attachment ?'), type: 'boolean', width: '10%',\r\n                template: '<i class=\"glyphicon glyphicon-${data.hasAttachment ? \"ok-circle\" : \"remove-circle\"}\"' +\r\n                'style=\"font-size: 20px;\">' +\r\n                '</i>'\r\n            },\r\n            {name: 'countOfRows', title: translate('Rows'), type: 'number', width: '10%'},\r\n            {\r\n                name: 'description', title: translate('Description'), type: 'string', width: '20%',\r\n                template: '<span title=\"${data.description}\">${data.description}</span>'\r\n            },\r\n        ],\r\n        commands: [],\r\n        selectable: true,\r\n        current: null\r\n        //readUrl: constants.urls.journal.getByMonth()\r\n    }\r\n\r\n    $scope.$watch('gridOption.current', (newValue)=> {\r\n        if (!newValue) return;\r\n        $scope.canShowJournals = false;\r\n        $scope.journalGridOption.readUrl = constants.urls.journal.getByMonth(newValue.month);\r\n        $timeout(()=> $scope.canShowJournals = true, 0);\r\n    });\r\n\r\n    $scope.bookkeeping = (current)=> {\r\n        if (current.number)\r\n            return logger.error(translate('This journal already bookkeeped'));\r\n\r\n        journalBookkeepingService.show({id: current.id})\r\n            .then(()=> {\r\n                logger.success();\r\n                $scope.journalGridOption.refresh();\r\n            });\r\n    };\r\n\r\n    $scope.showJournal = (current)=> {\r\n        showJournalDetailModalService\r\n            .show({\r\n                id: current.id\r\n            });\r\n    };\r\n}\r\n\r\naccModule.controller('journalManagementController', journalManagementController);\r\n",
    "import accModule from '../acc.module';\r\nimport $ from 'jquery';\r\n\r\nfunction journalPrintController($scope, $routeParams, journalApi) {\r\n\r\n    let id = $routeParams.id;\r\n    $scope.data = {};\r\n    $scope.canShowReport = false;\r\n\r\n    journalApi.getJournalReportJson(id)\r\n        .then((result)=> {\r\n            $scope.data = result;\r\n            $scope.canShowReport = true;\r\n        });\r\n\r\n}\r\n\r\naccModule.controller('journalPrintController', journalPrintController);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalTemplatesController($scope, translate, confirm, navigate, journalTemplateApi, constants, prompt, logger, $timeout) {\r\n    $scope.errors = [];\r\n    $scope.canShowJournalGrid = false;\r\n\r\n    $scope.periodDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.period.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.periodOnChange = (e)=> {\r\n        let item = e.sender.dataItem();\r\n\r\n        $scope.canShowJournalGrid = false;\r\n        $scope.journalGridOption.readUrl = constants.urls.journal.getAllByPeriod(item.id);\r\n\r\n        $timeout(()=> $scope.canShowJournalGrid = true, 0)\r\n    };\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {\r\n                name: 'title', title: translate('Title'), width: '70%', type: 'string',\r\n                template: '<span title=\"${data.title}\">${data.title}</span>'\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('New Journal'),\r\n                action: (current)=> {\r\n                    confirm(\r\n                        translate('Are you sure ?'),\r\n                        translate('New Journal')\r\n                    ).then(()=> {\r\n                        journalTemplateApi.journalCreate(current.id)\r\n                            .then((result)=> {\r\n                                confirm(\r\n                                    translate('Do you want to edit created journal ?'),\r\n                                    translate('Successful'),\r\n                                    'success'\r\n                                ).then(()=> {\r\n                                    navigate('journalUpdate', {id: result.id});\r\n                                });\r\n                            })\r\n                            .catch((errors)=> $scope.errors = errors);\r\n                    })\r\n                }\r\n            }\r\n        ],\r\n        readUrl: constants.urls.journalTemplate.getAll()\r\n    };\r\n\r\n    $scope.journalGridOption = {\r\n        columns: [\r\n            {name: 'temporaryNumber', title: translate('Temporary number'), width: '10%', type: 'number'},\r\n            {name: 'temporaryDate', title: translate('Temporary date'), type: 'date', width: '20%'},\r\n            {\r\n                name: 'description', title: translate('Description'), type: 'string', width: '50%',\r\n                template: '<span title=\"${data.description}\">${data.description}</span>'\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Copy to journal template'),\r\n                action: (current)=> {\r\n                    prompt({\r\n                        title: translate('Copy to journal template'),\r\n                        text: translate('Enter Title of journal template'),\r\n                    }).then((inputValue)=> {\r\n                        journalTemplateApi.create(current.id, {title: inputValue})\r\n                            .then(function () {\r\n                                logger.success();\r\n                                $scope.gridOption.refresh();\r\n                            });\r\n                    })\r\n                }\r\n            }\r\n        ]\r\n    };\r\n}\r\n\r\naccModule.controller('journalTemplatesController', journalTemplatesController);\r\n",
    "import accModule from '../acc.module';\r\nimport $ from 'jquery';\r\n\r\nfunction journalUpdateController($scope, logger, confirm, translate, navigate, $routeParams, $rootScope, constants,\r\n                                 journalApi, journalLineApi, subsidiaryLedgerAccountApi, dimensionCategoryApi,\r\n                                 journalLineCreateControllerModalService,\r\n                                 journalLineUpdateControllerModalService,\r\n                                 journalBookkeepingService,\r\n                                 journalAttachImageService,\r\n                                 writeChequeOnJournalLineEntryService,\r\n                                 showReport) {\r\n\r\n    let id = $routeParams.id;\r\n\r\n    $scope.title = translate('Edit Journal');\r\n\r\n    $scope.errors = [];\r\n\r\n    $scope.journalStatueForTitle = {\r\n        icon: '',\r\n        color: '',\r\n        title: '',\r\n    };\r\n\r\n    $scope.journal = {\r\n        temporaryNumber: null,\r\n        temporaryDate: null,\r\n        number: null,\r\n        date: null,\r\n        description: '',\r\n        tagIds: []\r\n    };\r\n\r\n    $scope.journalTypeData = constants.enums.JournalType().data;\r\n\r\n    $scope.canShowNumberAndDate = false;\r\n\r\n    function fetch() {\r\n        journalApi.getById(id)\r\n            .then((result)=> {\r\n                $scope.journal = result;\r\n\r\n                $scope.canShowNumberAndDate = result.journalStatus != 'Temporary';\r\n\r\n                let status = $scope.journalStatueForTitle;\r\n\r\n                if ($scope.journal.isInComplete) {\r\n                    status.icon = 'exclamation-sign';\r\n                    status.color = 'red';\r\n                    status.title = translate('InComplete journal');\r\n                }\r\n\r\n                if ($scope.journal.journalStatus == 'BookKeeped') {\r\n                    status.icon = 'ok-circle';\r\n                    status.color = 'green';\r\n                    status.title = $scope.journal.journalStatusDisplay;\r\n                }\r\n\r\n                if ($scope.journal.journalStatus == 'Fixed') {\r\n                    status.icon = 'lock';\r\n                    status.color = 'blue';\r\n                    status.title = $scope.journal.journalStatusDisplay;\r\n                }\r\n            });\r\n    }\r\n\r\n    fetch();\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'row', title: '#', width: '50px', type: 'number'},\r\n            {\r\n                name: 'detailAccountId',\r\n                title: translate('Detail account'),\r\n                type: 'detailAccount',\r\n                template: '${data.detailAccountCode}',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'subsidiaryLedgerAccountId',\r\n                title: translate('Subsidiary ledger account'),\r\n                type: 'subsidiaryLedgerAccount',\r\n                template: '${data.subsidiaryLedgerAccountCode}',\r\n                width: '70px'\r\n            },\r\n            {\r\n                name: 'generalLedgerAccountId',\r\n                title: translate('General ledger account'),\r\n                type: 'generalLedgerAccount',\r\n                template: '${data.generalLedgerAccountCode}',\r\n                width: '70px'\r\n            },\r\n            {\r\n                name: 'article', title: translate('Article'), type: 'string', width: '20%',\r\n                template: '<span title=\"${data.article}\">${data.article}</span>'\r\n            },\r\n            {\r\n                name: 'debtor', title: translate('Debtor'), width: '120px', type: 'number', format: '{0:#,##}',\r\n                aggregates: ['sum'], footerTemplate: \"#= kendo.toString(sum,'n0') #\"\r\n            },\r\n            {\r\n                name: 'creditor', title: translate('Creditor'), width: '120px', type: 'number', format: '{0:#,##}',\r\n                aggregates: ['sum'], footerTemplate: \"#= kendo.toString(sum,'n0') #\"\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                action: function (current) {\r\n                    journalLineUpdateControllerModalService\r\n                        .show({\r\n                            journalId: id,\r\n                            id: current.id\r\n                        })\r\n                        .then(()=> $scope.gridOption.refresh());\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove General ledger account'),\r\n                        translate('Are you sure ?'))\r\n                        .then(function () {\r\n                            journalLineApi.remove(current.id)\r\n                                .then(function () {\r\n                                    logger.success();\r\n                                    $scope.gridOption.refresh();\r\n                                })\r\n                                .catch((errors)=>\r\n                                    logger.error(errors.join('<b/>')));\r\n                        })\r\n\r\n                }\r\n            }\r\n        ],\r\n        current: null,\r\n        selectable: true,\r\n        filterable: false,\r\n        readUrl: journalLineApi.url.getAll(id),\r\n        gridSize: '400px'\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n        if (form.$invalid)\r\n            return;\r\n\r\n        $scope.errors.asEnumerable().removeAll();\r\n\r\n        $scope.isSaving = true;\r\n\r\n        journalApi.update(id, $scope.journal)\r\n            .then(()=> {\r\n                logger.success();\r\n            })\r\n            .catch((errors)=>$scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.createJournalLine = ()=> {\r\n        journalLineCreateControllerModalService\r\n            .show({journalId: id})\r\n            .then(()=> $scope.gridOption.refresh())\r\n    };\r\n\r\n    $scope.bookkeeping = ()=> {\r\n        journalBookkeepingService.show({id: id})\r\n            .then(()=> {\r\n                logger.success();\r\n                fetch();\r\n            });\r\n    };\r\n\r\n    $scope.attachImage = ()=> {\r\n        journalAttachImageService.show({id: id})\r\n            .then(()=> {\r\n                logger.success();\r\n                fetch();\r\n            });\r\n    };\r\n\r\n    $scope.print = ()=> navigate('journalPrint', {id: id});//showReport(`/report/journal/${id}`);\r\n\r\n    $scope.writeCheque = ()=> {\r\n        $rootScope.blockUi.block();\r\n\r\n        let current = $scope.gridOption.current;\r\n        subsidiaryLedgerAccountApi.getById(current.subsidiaryLedgerAccountId)\r\n            .then((result)=> {\r\n                $rootScope.blockUi.unBlock();\r\n\r\n                if (result.isBankAccount) {\r\n                    writeChequeOnJournalLineEntryService.show({\r\n                        journalLineId: current.id,\r\n                        detailAccountId: current.detailAccountId,\r\n                        detailAccountDisplay: current.detailAccountDisplay,\r\n                        amount: current.creditor,\r\n                        description: current.article,\r\n                        date: $scope.journal.date\r\n                    }).then(()=> {\r\n                        $scope.gridOption.refresh();\r\n                        logger.success();\r\n                    });\r\n                }\r\n                else {\r\n                    logger.error(translate('The current subsidiaryLedgerAccount is not bank account'));\r\n                }\r\n            });\r\n\r\n\r\n    };\r\n    $scope.journalLineCurrent = false;\r\n    $scope.journalLineCurrentChanged = (current)=> {\r\n        $scope.journalLineCurrent = current;\r\n\r\n        if (!$scope.$$phase)\r\n            $scope.$apply();\r\n    };\r\n\r\n    $scope.dimensionCategories = {};\r\n\r\n    dimensionCategoryApi.getAllLookup()\r\n        .then((result)=> {\r\n            let cats = result.data;\r\n            $scope.dimensionCategories = cats;\r\n        });\r\n\r\n    $scope.tagsOptions = {\r\n        placeholder: translate('Select ...'),\r\n        dataTextField: \"title\",\r\n        dataValueField: \"id\",\r\n        valuePrimitive: true,\r\n        autoBind: false,\r\n        dataSource: {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: constants.urls.tag.getAll()\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        }\r\n    };\r\n\r\n}\r\n\r\naccModule.controller('journalUpdateController', journalUpdateController);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalsController($scope, translate, journalApi, navigate, logger,\r\n                            journalCreateModalControllerService,\r\n                            journalAdvancedSearchModalService,\r\n                            journalsExtraFilterResolve) {\r\n\r\n    $scope.searchParameters = false;\r\n\r\n    $scope.gridOption = {\r\n        name: 'journals',\r\n        columns: [\r\n            {\r\n                name: 'journalStatus',\r\n                title: translate('Status'),\r\n                type: 'journalStatus',\r\n                width: '70px',\r\n                filterable: false,\r\n                template: `<i title=\"#: data.statusTitle #\" class=\"glyphicon glyphicon-#: data.statusIcon #\"\r\n                            style=\"color: #: data.statusColor #;font-size: 20px\"></i>`\r\n            },\r\n            {name: 'temporaryNumber', title: translate('Temporary number'), width: '100px', type: 'number'},\r\n            {name: 'temporaryDate', title: translate('Temporary date'), type: 'date', width: '100px',},\r\n            {name: 'number', title: translate('Number'), width: '100px', type: 'number'},\r\n            {name: 'date', title: translate('Date'), type: 'date', width: '100px',},\r\n            {\r\n                name: 'description', title: translate('Description'), type: 'string', width: '30%',\r\n                template: '<span title=\"${data.description}\">${data.description}</span>'\r\n            },\r\n            {name: 'createdBy', title: translate('User'), width: '100px', type: 'string'}\r\n            /*{name: 'sumDebtor', title: translate('sum debtor'), type: 'number', format: '{0:#,##}'},\r\n             {\r\n             name: 'sumCreditor',\r\n             title: translate('sum creditor'),\r\n             type: 'number',\r\n             format: '{0:#,##}'\r\n             },*/\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                action: function (current) {\r\n                    navigate('journalUpdate', {\r\n                        id: current.id\r\n                    });\r\n                }\r\n            }\r\n        ],\r\n        readUrl: journalApi.url.getAll,\r\n        selectable: 'multiple cell',\r\n        dataMapper: (result) => {\r\n            let data = result.data.asEnumerable().select(d=> {\r\n\r\n                d.statusTitle = d.journalStatusDisplay;\r\n                if (d.isInComplete) {\r\n                    d.statusIcon = 'exclamation-sign';\r\n                    d.statusColor = 'red';\r\n                    d.statusTitle = translate('InComplete journal');\r\n                    return d;\r\n                }\r\n\r\n                if (d.journalStatus == 'BookKeeped') {\r\n                    d.statusIcon = 'ok-circle';\r\n                    d.statusColor = 'green';\r\n                }\r\n\r\n                if (d.journalStatus == 'Fixed') {\r\n                    d.statusIcon = 'lock';\r\n                    d.statusColor = 'blue';\r\n                }\r\n\r\n                return d;\r\n            }).toArray();\r\n\r\n            return data;\r\n        },\r\n        resolveExtraFilter: journalsExtraFilterResolve,\r\n        setExtraFilter: (extra)=> {\r\n            $scope.searchParameters = extra;\r\n\r\n            if (!$scope.$$phase)\r\n                $scope.$apply();\r\n        }\r\n    };\r\n\r\n    $scope.create = ()=> {\r\n        journalCreateModalControllerService.show()\r\n            .then((result)=> {\r\n                logger.success();\r\n                navigate('journalUpdate', {\r\n                    id: result.id\r\n                });\r\n            });\r\n    };\r\n\r\n    $scope.advancedSearch = ()=> {\r\n        journalAdvancedSearchModalService.show()\r\n            .then((result)=> {\r\n                $scope.searchParameters = result;\r\n\r\n                $scope.$broadcast('{0}/execute-advanced-search'.format($scope.gridOption.name),\r\n                    result.resolve(result.data));\r\n            });\r\n    };\r\n\r\n    $scope.removeParameters = ()=> {\r\n        $scope.searchParameters = false;\r\n        $scope.$broadcast('{0}/execute-advanced-search'\r\n            .format($scope.gridOption.name), null);\r\n    };\r\n\r\n    $scope.$on('$routeChangeStart', (next, current) => {\r\n        $scope.gridOption.saveState($scope.searchParameters);\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalsController', journalsController)\r\n    .factory('journalsExtraFilterResolve', ()=> {\r\n        return function (filterData) {\r\n            if (!filterData) return null;\r\n\r\n            let instance = angular.extend({}, filterData);\r\n\r\n            instance.generalLedgerAccounts = filterData.generalLedgerAccounts\r\n                .asEnumerable()\r\n                .select((g)=> g.id)\r\n                .toArray();\r\n\r\n            instance.subsidiaryLedgerAccounts = filterData.subsidiaryLedgerAccounts\r\n                .asEnumerable()\r\n                .select((s)=> s.id)\r\n                .toArray();\r\n\r\n            instance.detailAccounts = filterData.detailAccounts\r\n                .asEnumerable()\r\n                .select((d)=> d.id)\r\n                .toArray();\r\n\r\n            instance.dimension1s = filterData.dimension2s\r\n                .asEnumerable()\r\n                .select((d)=> d.id)\r\n                .toArray();\r\n\r\n            instance.dimension2s = filterData.dimension2s\r\n                .asEnumerable()\r\n                .select((d)=> d.id)\r\n                .toArray();\r\n\r\n            instance.dimension3s = filterData.dimension3s\r\n                .asEnumerable()\r\n                .select((d)=> d.id)\r\n                .toArray();\r\n\r\n            instance.dimension4s = filterData.dimension4s\r\n                .asEnumerable()\r\n                .select((d)=> d.id)\r\n                .toArray();\r\n\r\n            instance.chequeNumbers = filterData.chequeNumbers\r\n                .asEnumerable()\r\n                .select((c)=> c.id)\r\n                .toArray();\r\n\r\n\r\n            return instance;\r\n        }\r\n    });",
    "import accModule from '../acc.module';\r\n\r\nfunction subsidiaryLedgerAccountCreateController($scope, logger, navigate, $routeParams,\r\n                                                 constants, formService,\r\n                                                 subsidiaryLedgerAccountApi,\r\n                                                 dimensionCategoryApi) {\r\n\r\n    let generalLedgerAccountId = $routeParams.generalLedgerAccountId;\r\n\r\n    $scope.errors = [];\r\n    $scope.assignmentStatus = constants.enums.AssignmentStatus().data;\r\n\r\n    $scope.subsidiaryLedgerAccount = {\r\n        code: '',\r\n        title: '',\r\n        detailAccountAssignmentStatus: null,\r\n        isBankAccount: false,\r\n        dimension1AssignmentStatus: null,\r\n        dimension2AssignmentStatus: null,\r\n        dimension3AssignmentStatus: null,\r\n    };\r\n\r\n    $scope.dimensionCategories = [];\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result)=> {\r\n            $scope.dimensionCategories = result.data;\r\n        });\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n        if (form.$invalid) {\r\n            formService.setDirty(form);\r\n            return;\r\n        }\r\n\r\n        $scope.isSaving = true;\r\n\r\n        subsidiaryLedgerAccountApi.create(\r\n            generalLedgerAccountId,\r\n            $scope.subsidiaryLedgerAccount)\r\n            .then(() => {\r\n                logger.success();\r\n                navigate(\r\n                    'subsidiaryLedgerAccounts',\r\n                    {generalLedgerAccountId: generalLedgerAccountId});\r\n            }).catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    }\r\n}\r\n\r\naccModule\r\n    .controller('subsidiaryLedgerAccountCreateController', subsidiaryLedgerAccountCreateController);",
    "import accModule from '../acc.module';\r\n\r\nfunction subsidiaryLedgerAccountUpdateController($scope, logger, navigate, constants,\r\n                                                 $routeParams, formService,\r\n                                                 subsidiaryLedgerAccountApi,\r\n                                                 dimensionCategoryApi) {\r\n    let id = $routeParams.id;\r\n\r\n    $scope.errors = [];\r\n    $scope.assignmentStatus = new constants.enums.AssignmentStatus().data\r\n    $scope.dimensionCategories = [];\r\n\r\n    $scope.subsidiaryLedgerAccount = {\r\n        code: '',\r\n        title: '',\r\n        detailAccountAssignmentStatus: null,\r\n        isBankAccount: false,\r\n        dimension1AssignmentStatus: null,\r\n        dimension2AssignmentStatus: null,\r\n        dimension3AssignmentStatus: null,\r\n        isActive: true\r\n    };\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result)=> {\r\n            $scope.dimensionCategories = result.data;\r\n        });\r\n\r\n    subsidiaryLedgerAccountApi.getById(id)\r\n        .then((result)=>\r\n            $scope.subsidiaryLedgerAccount = result);\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n\r\n        if (form.$invalid) {\r\n            formService.setDirty(form);\r\n            return;\r\n        }\r\n\r\n        $scope.isSaving = true;\r\n\r\n        subsidiaryLedgerAccountApi\r\n            .update(id, $scope.subsidiaryLedgerAccount)\r\n            .then(()=> {\r\n                logger.success();\r\n                navigate('subsidiaryLedgerAccounts', {\r\n                    generalLedgerAccountId: $scope.subsidiaryLedgerAccount.generalLedgerAccountId\r\n                });\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    }\r\n\r\n    $scope.isActivating = false;\r\n\r\n    $scope.activate = ()=> {\r\n        $scope.isActivating = true;\r\n\r\n        subsidiaryLedgerAccountApi.activate(id)\r\n            .then(()=> {\r\n                logger.success();\r\n                $scope.subsidiaryLedgerAccount.isActive = true;\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isActivating = false);\r\n    };\r\n\r\n\r\n    $scope.isDeactivating = false;\r\n\r\n    $scope.deactivate = ()=> {\r\n        $scope.isDeactivating = true;\r\n\r\n        subsidiaryLedgerAccountApi.deactivate(id)\r\n            .then(()=> {\r\n                logger.success();\r\n                $scope.subsidiaryLedgerAccount.isActive = false;\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isDeactivating = false);\r\n    };\r\n}\r\n\r\naccModule.controller(\r\n    'subsidiaryLedgerAccountUpdateController',\r\n    subsidiaryLedgerAccountUpdateController);",
    "import accModule from '../acc.module';\r\n\r\nfunction subsidiaryLedgerAccountsController($scope, logger, confirm, navigate, $routeParams, translate,\r\n                                            subsidiaryLedgerAccountApi) {\r\n\r\n    let generalLedgerAccountId = $routeParams.generalLedgerAccountId;\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'code', title: translate('Code'), width: '200px', type: 'string'},\r\n            {name: 'title', title: translate('Title'), type: 'string'},\r\n            {\r\n                name: 'isActive',\r\n                title: translate('Is active ?'),\r\n                type: 'activeType',\r\n                width: '170px',\r\n                template: '<i class=\"glyphicon glyphicon-${data.isActive ? \"ok-circle\" : \"remove-circle\"}\"' +\r\n                'style=\"font-size: 20px;color:${data.isActive ? \"green\" : \"red\"}\">' +\r\n                '</i>'\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                name: 'editSubsidiaryLedgerAccount',\r\n                action: (current) => {\r\n                    navigate('subsidiaryLedgerAccountUpdate', {\r\n                        id: current.id\r\n                    });\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                action: (current) => {\r\n                    confirm(\r\n                        translate('Remove Subsidiary ledger account'),\r\n                        translate('Are you sure ?'))\r\n                        .then(()=> {\r\n                            subsidiaryLedgerAccountApi.remove(current.id)\r\n                                .then(()=> {\r\n                                    logger.success();\r\n                                    $scope.gridOption.refresh();\r\n                                })\r\n                                .catch((errors)=> $scope.errors = errors);\r\n                        });\r\n\r\n                }\r\n            }\r\n        ],\r\n        readUrl: subsidiaryLedgerAccountApi.url.getAll(generalLedgerAccountId)\r\n    };\r\n\r\n    $scope.create = ()=> {\r\n        navigate('subsidiaryLedgerAccountCreate', {\r\n            generalLedgerAccountId: generalLedgerAccountId\r\n        });\r\n    }\r\n}\r\n\r\naccModule\r\n    .controller('subsidiaryLedgerAccountsController', subsidiaryLedgerAccountsController);",
    "import accModule from '../acc.module';\r\n\r\nfunction alertTag() {\r\n    let alertType = {\r\n        warning: {icon: 'warning-sign'},\r\n        success: {icon: 'ok-sign'},\r\n        danger: {icon: 'remove-sign'},\r\n        info: {icon: 'info=sign'}\r\n    }\r\n    return {\r\n        restrict: 'E',\r\n        template: '<div class=\"alert alert-{{type}}\" role=\"alert\" style=\"margin-top: 10px\"' +\r\n        'ng-if=\"show\">' +\r\n        '<span class=\"glyphicon glyphicon-{{icon}}\"></span>' +\r\n        '<label>{{text}}</label>' +\r\n        '</div>',\r\n        scope: {\r\n            show: '='\r\n        },\r\n        link: function (scope, element, attrs) {\r\n            scope.text = attrs.text;\r\n            scope.type = attrs.type;\r\n            scope.icon = alertType[scope.type].icon;\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagAlert', alertTag);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction blockUi() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/blockUi.html',\r\n        transclude: true,\r\n        link: function (scope, element, attrs) {\r\n\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagBlockUi', blockUi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction button() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/button-template.html',\r\n        replace: true,\r\n        scope: {\r\n            isWaiting: '=',\r\n            icon: '@',\r\n            styleType: '@',\r\n            title: '@'\r\n        },\r\n        link: function (scope, element, attrs) {\r\n\r\n        }\r\n    };\r\n}\r\n\r\n\r\naccModule.directive('devTagButton', button);",
    "import accModule from '../acc.module';\r\n\r\nfunction checkBox() {\r\n    return {\r\n        require: 'ngModel',\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/checkbox-template.html',\r\n        replace: true,\r\n        scope: {\r\n            ngModel: '=',\r\n            title: '@'\r\n        },\r\n        link: function (scope, element, attrs) {\r\n            scope.change = ()=> {\r\n                scope.ngModel = !scope.ngModel;\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagCheckBox', checkBox);",
    "import accModule from '../acc.module';\r\n\r\nfunction combobox() {\r\n    return {\r\n        restrict: 'E',\r\n        replace: true,\r\n        template: '<input kendo-combo-box />',\r\n        link: function (scope, element, attrs) {\r\n\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagComboBox', combobox);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction content() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/content-template.html',\r\n        transclude: true,\r\n        scope: {},\r\n        link: function (scope, element, attrs) {\r\n            scope.title = attrs.title;\r\n            scope.panelType = attrs.panelType || 'primary';\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagContent', content);",
    "\"use strict\";\r\n\r\nexport function contentCover(){\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/content-cover.html',\r\n        scope: false,\r\n        transclude: true,\r\n        replace: true,\r\n        link:  (scope, element, attrs) => {\r\n\r\n        }\r\n    };\r\n}\r\n\r\nexport function contentCoverForm(){\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/content-cover-form.html',\r\n        scope: false,\r\n        transclude: true,\r\n        replace: true,\r\n        link:  (scope, element, attrs) => {\r\n\r\n        }\r\n    };\r\n}\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\n\r\nfunction customValidator() {\r\n    return {\r\n        restrict: 'A',\r\n        require: 'ngModel',\r\n        link: function (scope, element, attr, ctrl) {\r\n\r\n            function customValidator(ngModelValue) {\r\n                if (ngModelValue == 0)\r\n                    ctrl.$setValidity('notZero', false);\r\n                else\r\n                    ctrl.$setValidity('notZero', true);\r\n\r\n                return ngModelValue;\r\n            }\r\n\r\n            ctrl.$parsers.push(customValidator);\r\n        }\r\n    }\r\n}\r\n\r\naccModule.directive('notZero', customValidator);",
    "import accModule from '../acc.module';\r\n\r\nfunction datepicker() {\r\n    return {\r\n        restrict: 'E',\r\n        template: '<input kendo-date-picker style=\"width: 100%;\" />',\r\n        replace: true,\r\n        link: function (scope, element, attrs) {\r\n\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagDatepicker', datepicker);",
    "import $ from 'jquery';\r\nimport accModule from '../acc.module';\r\n\r\nfunction dropdownlist() {\r\n    return {\r\n        restrict: 'E',\r\n        require: 'ngModel',\r\n        template: '<select></select>',\r\n        replace: true,\r\n        scope: {\r\n            dataTextField: '@kDataTextField',\r\n            dataValueField: '@kDataValueField',\r\n            optionLabel: '@kOptionLabel',\r\n            dataSource: '=kDataSource',\r\n            onChange: '&kOnChange'\r\n        },\r\n        link: function (scope, element, attrs, ngModel) {\r\n            let dropdown = $(element).kendoDropDownList({\r\n                optionLabel: scope.optionLabel,\r\n                dataTextField: scope.dataTextField,\r\n                dataValueField: scope.dataValueField,\r\n                dataSource: scope.dataSource,\r\n                change: (e)=> {\r\n                    let item = e.sender.dataItem();\r\n\r\n                    scope.$apply(()=>\r\n                        ngModel.$setViewValue(item[scope.dataValueField]));\r\n                    if (scope.onChange)\r\n                        scope.onChange({selectedItem: item});\r\n                }\r\n            }).data('kendoDropDownList');\r\n\r\n            ngModel.$render = ()=> dropdown.value(ngModel.$modelValue);\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagDropdownlist', dropdownlist);",
    "import accModule from '../acc.module';\r\n\r\naccModule.directive('focusMe', function ($timeout, $parse) {\r\n    return {\r\n        link: function (scope, element, attrs) {\r\n            var model = $parse(attrs.focusMe);\r\n            scope.$watch(model, function (value) {\r\n                console.log('value=', value);\r\n                if (value === true) {\r\n                    $timeout(function () {\r\n                        element[0].focus();\r\n                    }, 3000);\r\n                }\r\n            });\r\n            element.bind('blur', function () {\r\n                console.log('blur')\r\n                model.assign(scope, false);\r\n            })\r\n        }\r\n    };\r\n});\r\n",
    "import $ from 'jquery';\r\nimport accModule from '../acc.module';\r\n\r\nlet translate = JSON.parse(localStorage.translate);\r\nlet dimensionCategories = JSON.parse(localStorage.dimensionCategories).data;\r\n\r\nkendo.translate = (key)=> {\r\n    let value = translate[key];\r\n\r\n    if (!value) return key;\r\n    return value;\r\n};\r\n\r\nkendo.toAmount = (amount)=> {\r\n    return kendo.toString(amount, '#,##0;(#,##0)');\r\n};\r\n\r\nkendo.dimensionCategories = dimensionCategories;\r\n\r\nfunction grid(gridFilterCellType, $compile, translate) {\r\n    return {\r\n        restrict: 'E',\r\n        transclude: true,\r\n        template: '<div>' +\r\n        '<div ng-transclude style=\"display: none\"></div>' +\r\n        '</div>',\r\n        scope: {\r\n            kOption: '=',\r\n            kDatasource: '=',\r\n            option: '=',\r\n            detailOption: '=',\r\n            onCurrentChanged: '&'\r\n        },\r\n        controller: ()=> {\r\n        },\r\n        link: function (scope, element, attrs) {\r\n            let extra = scope.option.extra || null;\r\n\r\n            scope.$on('{0}/execute-advanced-search'.format(scope.option.name), (e, data)=> {\r\n                extra = {filter: data};\r\n                grid.dataSource.read();\r\n            });\r\n\r\n            var grid = {};\r\n\r\n            if (scope.kOption) {\r\n                grid = $(element).kendoGrid(scope.kOption).data(\"kendoGrid\");\r\n            }\r\n            else {\r\n                var option = createKendoGridOption(scope, scope.option);\r\n\r\n                let detailTemplate = $(element).find('.detail-template')\r\n                if (detailTemplate.lenght != 0) {\r\n                    option.detailTemplate = detailTemplate.html();\r\n                }\r\n\r\n\r\n                if (scope.detailOption) {\r\n                    var detailOption = createKendoGridOption(scope, scope.detailOption);\r\n\r\n\r\n                    option.detailTemplate = kendo.template('<div class=\"detail-template\"></div>');\r\n                    option.detailInit = function (e) {\r\n                        var detailRow = e.detailRow;\r\n                        var parent = e.data;\r\n\r\n                        if (scope.detailOption.url) {\r\n                            var url = scope.detailOption.url(e.data);\r\n                            detailOption.dataSource = new kendo.data.DataSource({\r\n                                transport: {\r\n                                    read: {\r\n                                        url: url,\r\n                                        dataType: \"json\",\r\n                                        contentType: 'application/json; charset=utf-8',\r\n                                        type: 'GET'\r\n                                    }\r\n                                },\r\n                                schema: {\r\n                                    data: \"data\",\r\n                                    total: \"total\"\r\n                                    //model: model\r\n                                },\r\n                                pageSize: option.pageSize || 20,\r\n                                serverPaging: true,\r\n                                serverFiltering: true,\r\n                                serverSorting: true\r\n                            })\r\n                        }\r\n\r\n                        detailRow.find('.detail-template').kendoGrid(detailOption);\r\n\r\n                        parent.refreshDetail = function () {\r\n                            detailOption.dataSource.read();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var grid = $(element).kendoGrid(option).data(\"kendoGrid\");\r\n                $(element).find('.k-grid-content').css('height', scope.option.gridSize || '500px');\r\n\r\n                if (option.commandTemplate)\r\n                    option.commandTemplate.commands.forEach(function (cmd) {\r\n                        $(element).on(\"click\", cmd.selector, function (e) {\r\n                            var dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\r\n                            cmd.action(dataItem);\r\n                            scope.$apply();\r\n                        });\r\n                    });\r\n            }\r\n\r\n            if (scope.option) {\r\n                scope.option.grid = grid;\r\n\r\n                scope.option.refresh = function () {\r\n                    grid.dataSource.read();\r\n                };\r\n\r\n                function setState() {\r\n                    let name = scope.option.name;\r\n\r\n                    if (!name || name == '')\r\n                        return grid.dataSource.read();\r\n\r\n                    let gridState = JSON.parse(localStorage.getItem(`${name}-grid-state`));\r\n\r\n                    if (!gridState) return grid.dataSource.read();\r\n                    ;\r\n\r\n                    let state = gridState.options;\r\n\r\n                    state.columns = state.columns.asEnumerable()\r\n                        .where(c=> !c.hasOwnProperty('command'))\r\n                        .concat([{command: scope.option.commands.asEnumerable().select(commandFactory).toArray()}])\r\n                        .toArray();\r\n\r\n                    grid.setOptions(state);\r\n\r\n                    extra = scope.option.resolveExtraFilter ? {filter: scope.option.resolveExtraFilter(gridState.extra.data)} : null;\r\n                    scope.option.setExtraFilter(gridState.extra);\r\n\r\n                    grid.dataSource.read();\r\n                }\r\n\r\n                scope.option.saveState = (extra)=> {\r\n                    let name = scope.option.name;\r\n\r\n                    if (!name || name == '')\r\n                        return;\r\n\r\n                    let gridState = {\r\n                        options: grid.getOptions(),\r\n                        extra: extra\r\n                    };\r\n\r\n                    localStorage.setItem(`${name}-grid-state`, JSON.stringify(gridState));\r\n                };\r\n\r\n                setState();\r\n\r\n            }\r\n\r\n            function createKendoGridOption(scope, option) {\r\n\r\n                var aggregatesForDateSource = [];\r\n\r\n                function setAggregatesForDataSource(column) {\r\n                    let aggregates = column.aggregates;\r\n\r\n                    if (!aggregates)\r\n                        return;\r\n\r\n                    if (aggregates.length == 0)\r\n                        return;\r\n\r\n                    let aggregatesForThisColumn = aggregates.asEnumerable().select(agg=> {\r\n                        return {\r\n                            field: column.name,\r\n                            aggregate: agg\r\n                        };\r\n                    }).toArray();\r\n\r\n                    aggregatesForDateSource = aggregatesForDateSource\r\n                        .asEnumerable()\r\n                        .concat(aggregatesForThisColumn)\r\n                        .toArray();\r\n                }\r\n\r\n                var cols = option.columns\r\n                    .asEnumerable().select(function (col) {\r\n                        setAggregatesForDataSource(col);\r\n\r\n                        return {\r\n                            field: col.name,\r\n                            title: col.title,\r\n                            width: col.width,\r\n                            format: col.format,\r\n                            template: col.template,\r\n                            aggregates: col.aggregates,\r\n                            headerTemplate: col.headerTemplate,\r\n                            footerTemplate: col.footerTemplate,\r\n                            filterable: col.filterable == undefined ? getFilterable(col.type) : col.filterable\r\n                        }\r\n                    }).toArray();\r\n\r\n                var model = {fields: {}};\r\n                option.columns.forEach(function (col) {\r\n                    model.fields[col.name] = {\r\n                        type: gridFilterCellType[col.type].modelType,\r\n\r\n                    };\r\n                });\r\n\r\n                var commands = option.commands.asEnumerable().select(commandFactory).toArray();\r\n\r\n                if (option.commandTemplate)\r\n                    cols.push({template: kendo.template($(option.commandTemplate.template).html())});\r\n\r\n                cols.push({command: commands});\r\n\r\n                var filterable = option.filterable == undefined || option.filterable == true\r\n                    ? {\r\n                    mode: 'row',\r\n                    operators: {\r\n                        string: {contains: 'Contains'},\r\n                        number: {\r\n                            eq: translate('Equal to'),\r\n                            gte: translate(\"Greater than or equal to\"),\r\n                            gt: translate(\"Greater than\"),\r\n                            lte: translate(\"Less than or equal to\"),\r\n                            lt: translate(\"Less than\")\r\n                        },\r\n                        date: {\r\n                            gt: \"After\",\r\n                            lt: \"Before\",\r\n                            eq: \"Equal\"\r\n                        }\r\n                    }\r\n                }\r\n                    : false;\r\n\r\n                var kendGridOption = {\r\n                    dataSource: scope.kDatasource ? scope.kDatasource : new kendo.data.DataSource({\r\n                        transport: {\r\n                            read: {\r\n                                url: option.readUrl,\r\n                                dataType: \"json\",\r\n                                contentType: 'application/json; charset=utf-8',\r\n                                type: 'GET'\r\n                            },\r\n                            parameterMap: function (options) {\r\n                                if (extra)\r\n                                    options.extra = extra;\r\n\r\n                                scope.onCurrentChanged({current: false});\r\n\r\n                                return options;\r\n                            }\r\n                        },\r\n                        schema: {\r\n                            data: option.dataMapper ? option.dataMapper : 'data',\r\n                            total: \"total\",\r\n                            model: model,\r\n                            aggregates: \"aggregates\"\r\n                        },\r\n                        serverAggregates: true,\r\n                        aggregate: aggregatesForDateSource,\r\n                        pageSize: option.pageSize || 20,\r\n                        serverPaging: true,\r\n                        serverFiltering: true,\r\n                        serverSorting: true\r\n                    }),\r\n                    autoBind: false,\r\n                    filterable: filterable,\r\n                    pageable: option.pageable == undefined\r\n                        ? {\r\n                        refresh: true,\r\n                        pageSizes: true,\r\n                        buttonCount: 5\r\n                    } : option.pageable,\r\n                    toolbar: [\"excel\", \"pdf\"],\r\n                    excel: {\r\n                        filterable: true,\r\n                        fileName: `${option.name}.xlsx`,\r\n                        allPages: true\r\n                    },\r\n                    pdf: {\r\n                        allPages: true,\r\n                        fileName: `${option.name}.pdf`,\r\n                        avoidLinks: true,\r\n                        paperSize: \"A4\",\r\n                        margin: {top: \"2cm\", left: \"1cm\", right: \"1cm\", bottom: \"1cm\"},\r\n                        landscape: true,\r\n                        repeatHeaders: true\r\n                    },\r\n                    sortable: true,\r\n                    allowCopy: true,\r\n                    columns: cols,\r\n                    selectable: option.selectable,\r\n                    editable: option.editable,\r\n                    resizable: true,\r\n                    change: function () {\r\n                        var current = this.dataItem(this.select());\r\n\r\n                        option.current = current;\r\n\r\n                        scope.onCurrentChanged({current: current});\r\n\r\n                        scope.$apply();\r\n                    }\r\n                };\r\n\r\n                if (option.toolbar)\r\n                    scope.options.toolbar = kendo.template(scope.toolbar);\r\n\r\n                return kendGridOption;\r\n            }\r\n\r\n            function getFilterable(type) {\r\n                var filterable = {};\r\n                var cell = gridFilterCellType[type];\r\n\r\n                if (cell.hasOwnProperty('cell'))\r\n                    cell = cell.cell;\r\n\r\n                filterable.cell = cell;\r\n\r\n                return filterable;\r\n            }\r\n\r\n            function commandHandler(cmd) {\r\n                return function (e) {\r\n                    e.preventDefault();\r\n\r\n                    var dataItem = this.dataItem($(e.currentTarget).closest(\"tr\"));\r\n                    cmd.action(dataItem);\r\n\r\n                    scope.$apply();\r\n                }\r\n            }\r\n\r\n            function commandFactory(cmd) {\r\n                if (typeof cmd == \"string\")\r\n                    return cmd;\r\n\r\n                return {\r\n                    text: cmd.title,\r\n                    imageClass: cmd.imageClass,\r\n                    click: commandHandler(cmd)\r\n                };\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nfunction detail() {\r\n    return {\r\n        restrict: 'E',\r\n        template: '<div ng-transclude class=\"detail-template\"></div>',\r\n        transclude: true,\r\n        scope: {},\r\n        replace: true,\r\n        require: '^devTagGrid',\r\n        link: function (scope, element, attrs) {\r\n\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagGrid', grid)\r\n    .directive('devTagGridDetail', detail);",
    "import accModule from '../acc.module';\r\n\r\nfunction journalSearchParameters(dimensionCategoryApi) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/journal-search-parameters.html',\r\n        scope: {\r\n            searchParameters: '=',\r\n            removeParameters: '&'\r\n        },\r\n        link: function (scope, element, attrs) {\r\n            scope.dimensionCategorie = [];\r\n\r\n            dimensionCategoryApi.getAllLookup()\r\n                .then((result)=> scope.dimensionCategories = result.data);\r\n\r\n            scope.remove = (e)=> {\r\n                e.preventDefault();\r\n                scope.removeParameters();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\naccModule.directive('devTagJournalSearchParameters', journalSearchParameters);",
    "import $ from 'jquery';\r\nimport accModule from '../acc.module';\r\n\r\nfunction header() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/header-template.html',\r\n        replace: true,\r\n        scope: false,\r\n        link: function (scope, element, attrs) {\r\n            scope.currentUser = localStorage.getItem('currentUser');\r\n\r\n            $(element).find('.dropdown')\r\n            $('input').click(function () {\r\n                $('.dropdown').addClass('open');\r\n                $('.dropdown').addClass('test-class');\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction togglemenu() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/togglemenu-template.html',\r\n        replace: true,\r\n        scope: {\r\n            menuitems: '=',\r\n            toggleobservable: '='\r\n        },\r\n        transclude: true,\r\n        link: function (scope, element, attrs) {\r\n            $(\"#menu-toggle\").click(function (e) {\r\n                e.preventDefault();\r\n                $(\"#wrapper\").toggleClass(\"toggled\");\r\n            });\r\n\r\n            createMenu(scope.menuitems, element);\r\n        }\r\n    }\r\n}\r\n\r\nfunction createMenu(menuItems, element) {\r\n    menuItems.forEach(function (item) {\r\n        var $el = $(element).find('.gw-nav');\r\n        var icon = item.icon || 'file';\r\n\r\n        var li = $('<li class=\"init-arrow-down\"></li>');\r\n        li.append('<a href=\"{0}\"></a>'.format(item.url));\r\n        li.find('a').append('<span class=\"webfont-menu\" aria-hidden=\"true\">' +\r\n            '<span class=\"glyphicon glyphicon-{0}\"></span>'.format(icon) +\r\n            '</span>'.format(icon));\r\n\r\n        li.find('a').append('<span class=\"gw=menu-text\">{0}</span>'.format(item.title));\r\n\r\n        if (item.children.length > 0) {\r\n            li.find('a').append('<b class=\"gw-arrow icon-arrow-up8\"></b>');\r\n            li.append('<ul class=\"gw-submenu\"></ul>');\r\n\r\n            item.children.forEach(function (child) {\r\n                var liChild = $('<li></li>');\r\n                var icon = child.icon || 'file';\r\n\r\n                liChild.append('<a href=\"{0}\"></a>'.format(child.url));\r\n                /* liChild.find('a')\r\n                 .append('<span class=\"webfont-submenu glyphicon glyphicon-{0}\"></span>'\r\n                 .format(icon));*/\r\n\r\n                liChild.find('a').append(child.title);\r\n\r\n                li.find('ul').append(liChild);\r\n            });\r\n        }\r\n        ;\r\n\r\n        $el.append(li);\r\n    });\r\n\r\n    menuCreateExpandAndActiveBehavior($(element));\r\n}\r\n\r\nfunction menuCreateExpandAndActiveBehavior($element) {\r\n    var $ele = function (selector) {\r\n        return $element.find(selector);\r\n    };\r\n\r\n    $ele('.gw-nav > li > a').click(function (e) {\r\n        var hrefAttr = $(this).attr('href');\r\n        if (hrefAttr == undefined || hrefAttr == null || hrefAttr == '')\r\n            e.preventDefault();\r\n\r\n        var gw_nav = $ele('.gw-nav');\r\n        gw_nav.find('li').removeClass('active');\r\n        $ele('.gw-nav > li > ul > li').removeClass('active');\r\n\r\n        var checkElement = $(this).parent();\r\n        var ulDom = checkElement.find('.gw-submenu')[0];\r\n\r\n        if (ulDom == undefined) {\r\n            checkElement.addClass('active');\r\n            $ele('.gw-nav').find('li').find('ul:visible').slideUp();\r\n            return;\r\n        }\r\n        if (ulDom.style.display != 'block') {\r\n            gw_nav.find('li').find('ul:visible').slideUp();\r\n            gw_nav.find('li.init-arrow-up').removeClass('init-arrow-up').addClass('arrow-down');\r\n            gw_nav.find('li.arrow-up').removeClass('arrow-up').addClass('arrow-down');\r\n            checkElement.removeClass('init-arrow-down');\r\n            checkElement.removeClass('arrow-down');\r\n            checkElement.addClass('arrow-up');\r\n            checkElement.addClass('active');\r\n            checkElement.find('ul').slideDown(300);\r\n        } else {\r\n            checkElement.removeClass('init-arrow-up');\r\n            checkElement.removeClass('arrow-up');\r\n            checkElement.removeClass('active');\r\n            checkElement.addClass('arrow-down');\r\n            checkElement.find('ul').slideUp(300);\r\n\r\n        }\r\n    });\r\n    $('.gw-nav > li > ul > li > a').click(function () {\r\n        $ele(this).parent().parent().removeClass('active');\r\n        $ele('.gw-nav > li > ul > li').removeClass('active');\r\n        $(this).parent().addClass('active')\r\n    });\r\n};\r\n\r\naccModule\r\n    .directive('devTagHeader', header)\r\n    .directive('devTagTogglemenu', togglemenu);\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction NgKendoGrid($compile) {\r\n    return {\r\n        restrict: 'E',\r\n        transclude: true,\r\n        template: '<div kendo-grid options=\"kGridOptions\" ng-transclude></div>',\r\n        scope: {\r\n            kOptions: '='\r\n        },\r\n        link: (scope, element, attrs)=> {\r\n            scope.kGridOptions = scope.kOptions;\r\n        },\r\n        compile: (tElem, tAttrs)=> {\r\n\r\n\r\n            return {\r\n                pre: (scope, element, attrs)=> {\r\n\r\n\r\n                    let template = $(element).find('.col').html();\r\n                    let result = $compile(template)(scope);\r\n                    scope.kGridOptions = scope.kOptions;\r\n\r\n                },\r\n                post: (scope, element, attrs)=> {\r\n\r\n                    let grid = $(element).find('div').data(\"kendoGrid\");\r\n                }\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n}\r\n\r\naccModule.directive('devTagNgKendoGrid', NgKendoGrid);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction numeric() {\r\n    return {\r\n        restrict: 'E',\r\n        template: '<input type=\"number\" class=\"form-control\" /> ',\r\n        replace: true\r\n    }\r\n}\r\n\r\naccModule.directive('devTagNumeric', numeric);",
    "import accModule from '../acc.module';\r\n\r\nlet digitToWord = function (str) {\r\n    var delimiter, digit, i, iThree, numbers, part, parts, result, resultThree, three;\r\n    if (!isFinite(str)) {\r\n        return '';\r\n    }\r\n    if (typeof str !== \"string\") {\r\n        str = str.toString();\r\n    }\r\n    parts = ['', 'هزار', 'میلیون', 'میلیارد', 'هزار میلیارد', 'کوادریلیون', 'کویینتیلیون', 'سکستیلیون'];\r\n    numbers = {\r\n        0: ['', 'صد', 'دویست', 'سیصد', 'چهارصد', 'پانصد', 'ششصد', 'هفتصد', 'هشتصد', 'نهصد'],\r\n        1: ['', 'ده', 'بیست', 'سی', 'چهل', 'پنجاه', 'شصت', 'هفتاد', 'هشتاد', 'نود'],\r\n        2: ['', 'یک', 'دو', 'سه', 'چهار', 'پنج', 'شش', 'هفت', 'هشت', 'نه'],\r\n        two: ['ده', 'یازده', 'دوازده', 'سیزده', 'چهارده', 'پانزده', 'شانزده', 'هفده', 'هجده', 'نوزده'],\r\n        zero: 'صفر'\r\n    };\r\n    delimiter = ' و ';\r\n    str = str.split('').reverse().join('').replace(/\\d{3}(?=\\d)/g, \"$&,\").split('').reverse().join('').split(',').map(function (str) {\r\n        return Array(4 - str.length).join('0') + str;\r\n    });\r\n    result = (function () {\r\n        var results;\r\n        results = [];\r\n        for (iThree in str) {\r\n            three = str[iThree];\r\n            resultThree = (function () {\r\n                var j, len, results1;\r\n                results1 = [];\r\n                for (i = j = 0, len = three.length; j < len; i = ++j) {\r\n                    digit = three[i];\r\n                    if (i === 1 && digit === '1') {\r\n                        results1.push(numbers.two[three[2]]);\r\n                    } else if ((i !== 2 || three[1] !== '1') && numbers[i][digit] !== '') {\r\n                        results1.push(numbers[i][digit]);\r\n                    } else {\r\n                        continue;\r\n                    }\r\n                }\r\n                return results1;\r\n            })();\r\n            resultThree = resultThree.join(delimiter);\r\n            part = resultThree.length > 0 ? ' ' + parts[str.length - iThree - 1] : '';\r\n            results.push(resultThree + part);\r\n        }\r\n        return results;\r\n    })();\r\n    result = result.filter(function (x) {\r\n        return x.trim() !== '';\r\n    });\r\n    result = result.join(delimiter).trim();\r\n    if (result !== '') {\r\n        return result;\r\n    } else {\r\n        return numbers.zero;\r\n    }\r\n};\r\n\r\nStimulsoft.Base.Localization.StiLocalization.setLocalizationFile('/client/content/fa.xml', true);\r\n\r\nStimulsoft.Report.Dictionary.StiFunctions.addFunction(\r\n    \"devFunction\",\r\n    \"digitToWord\",\r\n    \"digitToWord\", \"\", \"\",\r\n    String, \"\", [Number], [\"Amount\"], [\"\"],\r\n    digitToWord);\r\n\r\nfunction reportViewer() {\r\n    return {\r\n        restrict: 'E',\r\n        template: '<div id=\"contentViewer\" style=\"direction: ltr\"></div>',\r\n        scope: {\r\n            reportData: '=',\r\n            reportFileName: '@',\r\n            reportDataSourceName: '@'\r\n        },\r\n        link: function (scope, element, attrs) {\r\n            let options = new Stimulsoft.Viewer.StiViewerOptions();\r\n\r\n            options.toolbar.fontFamily = \"BKoodakBold\";\r\n            options.toolbar.showDesignButton = true;\r\n            options.toolbar.printDestination = Stimulsoft.Viewer.StiPrintDestination.Pdf;\r\n            options.appearance.htmlRenderMode = Stimulsoft.Report.Export.StiHtmlExportMode.Table;\r\n\r\n            let report = new Stimulsoft.Report.StiReport();\r\n            let viewer = new Stimulsoft.Viewer.StiViewer(options, \"StiViewer\", false);\r\n\r\n            report.loadFile(`/client/reportFiles/${scope.reportFileName}`);\r\n            viewer.renderHtml(\"contentViewer\");\r\n\r\n            let today = new Stimulsoft.Report.Dictionary.StiVariable();\r\n            today.name = 'today';\r\n            today.alias = 'Today';\r\n            today.category = \"general\";\r\n            today.value = '1395/01/01';\r\n\r\n            report.dictionary.variables.add(today);\r\n\r\n            let user = new Stimulsoft.Report.Dictionary.StiVariable();\r\n            user.name = 'user';\r\n            user.alias = 'User';\r\n            user.category = \"general\";\r\n            user.value = localStorage.getItem('currentUser');\r\n\r\n            report.dictionary.variables.add(user);\r\n\r\n            let data = {};\r\n            data[scope.reportDataSourceName] = scope.reportData;\r\n\r\n            report.regData(\"data\", \"data\", data);\r\n            viewer.report = report;\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagReportViewer', reportViewer);",
    "\"use strict\";\r\n\r\nexport default function shell($rootScope, menuItems, translate, currentService, $cookies, constants, fiscalPeriodApi) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/shell.html',\r\n        scope: {},\r\n        link: function (scope, element, attrs) {\r\n\r\n            currentService.setFiscalPeriod(parseInt($cookies.get('current-period')));\r\n            currentService.setMode($cookies.get('current-mode'));\r\n\r\n            scope.current = {\r\n                period: '',\r\n                mode: constants.enums.AccMode().getDisplay(currentService.get().mode)\r\n            };\r\n\r\n            fiscalPeriodApi.current()\r\n                .then(result=> scope.current.period = result.display);\r\n\r\n            scope.isToggleMenuOpen = false;\r\n            scope.menuItems = menuItems;\r\n\r\n            $rootScope.blockUi = {\r\n                isBlocking: false,\r\n                message: translate('Please wait ...'),\r\n                block: (message)=> {\r\n                    $rootScope.blockUi.message = message\r\n                        ? message\r\n                        : translate('Please wait ...');\r\n\r\n                    $rootScope.blockUi.isBlocking = true;\r\n                },\r\n                unBlock: ()=> {\r\n                    $rootScope.blockUi.isBlocking = false;\r\n                }\r\n            };\r\n\r\n            scope.toggle = function () {\r\n                if ($scope.isToggleMenuOpen)\r\n                    $scope.isToggleMenuOpen = false;\r\n                else\r\n                    $scope.isToggleMenuOpen = true;\r\n            }\r\n\r\n            scope.$on('fiscal-period-changed', (e, fiscalPeriod)=> {\r\n                $cookies.put('current-period', fiscalPeriod.id);\r\n                currentService.setFiscalPeriod(fiscalPeriod.id);\r\n\r\n                scope.current.period = fiscalPeriod.display;\r\n            });\r\n\r\n            scope.$on('mode-changed', (e, mode)=> {\r\n                $cookies.put('current-mode', mode.key);\r\n                currentService.setMode(mode.key);\r\n                scope.current.mode = mode.display;\r\n            });\r\n        }\r\n    };\r\n}",
    "import accModule from '../acc.module';\r\n\r\nfunction subContent() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/subContent.html',\r\n        transclude: true,\r\n        replace: true,\r\n        scope: {},\r\n        link: function (scope, element, attrs) {\r\n            scope.title = attrs.title;\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagSubContent', subContent);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction textEditor() {\r\n    return {\r\n        restrict: 'E',\r\n        replace: true,\r\n        template: '<textarea kendo-editor k-ng-model=\"ngModel\"></textarea>',\r\n        link: function (scope, element, attrs) {\r\n\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagEditor', textEditor);",
    "import accModule from '../acc.module';\r\nimport $ from 'jquery';\r\nimport 'jquery.filedrop';\r\n\r\nfunction uploader($rootScope, logger) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/uploader.html',\r\n        replace: true,\r\n        scope: {\r\n            before: '&',\r\n            uploaded: '&'\r\n        },\r\n        link: (scope, element, attrs) => {\r\n\r\n            $(element).filedrop({\r\n                url: '/upload',\r\n                dragOver: ()=> {\r\n                    let $elm = $(element).find('.place_drag');\r\n                    $elm.addClass('place_drag_uploader');\r\n                    $elm.find('.hover_upload_list').addClass('webfont_file');\r\n                },\r\n                dragLeave: ()=> {\r\n                    let $elm = $(element).find('.place_drag');\r\n                    $elm.removeClass('place_drag_uploader');\r\n                    $elm.find('.hover_upload_list').removeClass('webfont_file');\r\n                    $elm.find('.place_drag_text1').show();\r\n                },\r\n                uploadStarted: ()=> {\r\n                    let $elm = $(element).find('.place_drag');\r\n                    $elm.removeClass('place_drag_uploader');\r\n                    $elm.find('.hover_upload_list').removeClass('webfont_file');\r\n                    $elm.find('.place_drag_text1').hide();\r\n\r\n                    $rootScope.blockUi.block();\r\n                    scope.$apply();\r\n\r\n                    scope.before();\r\n                },\r\n                uploadFinished: (i, file, response, time)=> {\r\n                    scope.uploaded(response);\r\n                    $rootScope.blockUi.unBlock();\r\n                    scope.$apply();\r\n                },\r\n                error: (err, file) => {\r\n                    $rootScope.blockUi.unBlock();\r\n                    scope.$apply();\r\n\r\n                    switch (err) {\r\n                        case 'BrowserNotSupported':\r\n                            logger.error('browser does not support HTML5 drag and drop');\r\n                            break;\r\n                        case 'TooManyFiles':\r\n                            // user uploaded more than 'maxfiles'\r\n                            break;\r\n                        case 'FileTooLarge':\r\n                            // program encountered a file whose size is greater than 'maxfilesize'\r\n                            // FileTooLarge also has access to the file which was too large\r\n                            // use file.name to reference the filename of the culprit file\r\n                            break;\r\n                        case 'FileTypeNotAllowed':\r\n                            // The file type is not in the specified list 'allowedfiletypes'\r\n                            break;\r\n                        case 'FileExtensionNotAllowed':\r\n                            // The file extension is not in the specified list 'allowedfileextensions'\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                },\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagUploader', uploader);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction validationSummary() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/validationSummary.html',\r\n        replace: true,\r\n        scope: {\r\n            errors: '='\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagValidationSummary', validationSummary);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction amount() {\r\n    return (input)=> {\r\n        if (!input)\r\n            return '';\r\n\r\n        return kendo.toString(input, 'n0');\r\n    }\r\n}\r\n\r\naccModule.filter('amount', amount);",
    "let isClientTest = ()=> {\r\n    let isClientTest = localStorage.getItem('isClientTest');\r\n\r\n    return isClientTest == null ? false : true;\r\n}\r\n\r\n\r\nlet baseTemplateUrl = ()=> {\r\n    return isClientTest() ? 'partials/' : '';\r\n}\r\n\r\nlet config = {\r\n    isClientTest: isClientTest,\r\n    baseTemplateUrl: baseTemplateUrl\r\n};\r\n\r\nexport default config;",
    "import enums from './enums';\r\nimport urls from './urls';\r\nimport config from './config';\r\nimport accModule from '../acc.module';\r\n\r\nlet constants = {\r\n    enums: enums,\r\n    urls: urls,\r\n    config: config\r\n};\r\n\r\naccModule.constant('constants', constants);\r\n\r\nexport default constants;",
    "class Enum {\r\n\r\n    constructor(enums) {\r\n        this.data = enums;\r\n    }\r\n\r\n    getDisplay(key) {\r\n        return this.data.asEnumerable()\r\n            .single(e=>e.key == key)\r\n            .display;\r\n    }\r\n\r\n    getKey(name) {\r\n        return this.data.asEnumerable()\r\n            .single(e=>e.name == name)\r\n            .key;\r\n    }\r\n\r\n    getKeys() {\r\n        let names = Array.from(arguments);\r\n\r\n        return names.asEnumerable()\r\n            .select(name=> this.getKey(name))\r\n            .toArray();\r\n    }\r\n\r\n    get() {\r\n        return this.data;\r\n    }\r\n}\r\n\r\nexport default Enum;",
    "﻿import Enum from './enumType';\r\nlet enums = {};\r\n\r\nenums.AccountPostingType = () => {\r\n    return new Enum([\r\n        {key: 'balanceSheet', display: 'تراز نامه ای'},\r\n        {key: 'benefitAndLoss', display: 'سود و زیانی'},\r\n        {key: 'entezami', display: 'انتظامی'}\r\n    ]);\r\n};\r\n\r\nenums.AccountBalanceType = () => {\r\n    return new Enum([\r\n        {key: 'debit', display: 'بدهکار'},\r\n        {key: 'credit', display: 'بستانکار'}\r\n    ]);\r\n}\r\n\r\nenums.AssignmentStatus = () => {\r\n    return new Enum([\r\n        {key: 'Required', display: 'اجباری است'},\r\n        {key: 'NotRequired', display: 'انتخابی است'},\r\n        {key: 'DoesNotHave', display: 'ندارد'}\r\n    ]);\r\n}\r\n\r\nenums.JournalType = () => {\r\n    return new Enum([\r\n        {key: 'Opening', display: 'افتتاحیه'},\r\n        {key: 'Closing', display: 'اختتامیه'},\r\n        {key: 'FixedAsset', display: 'اموال'},\r\n        {key: 'Payroll', display: 'حقوق'},\r\n        {key: 'Special', display: 'ویژه'}\r\n    ]);\r\n}\r\n\r\nenums.JournalStatus = () => {\r\n    return new Enum([\r\n        {key: 'Temporary', display: 'موقت'},\r\n        {key: 'BookKeeped', display: 'ثبت دفترداری'},\r\n        {key: 'Fixed', display: 'ثبت قطعی'}\r\n    ]);\r\n};\r\n\r\nenums.Active = () => {\r\n    return new Enum([\r\n        {key: true, name: 'showActiveItems', display: 'نمایش فعال ها'},\r\n        {key: false, name: 'showInactiveItems', display: 'نمایش غیر فعال ها'}\r\n    ]);\r\n};\r\n\r\nenums.ChequeCategoryStatus = ()=> {\r\n    return new Enum([\r\n        {key: 'Open', display: 'باز'},\r\n        {key: 'Closed', display: 'بسته'}\r\n    ]);\r\n};\r\n\r\nenums.AccMode = () => {\r\n    return new Enum([\r\n        {key: 'Create', display: 'تنظیم'},\r\n        {key: 'Audit', display: 'رسیدگی'}\r\n    ]);\r\n};\r\n\r\nexport default enums;\r\n\r\n",
    "let rootUrl = ()=> '/api';\r\n\r\nlet generalLedgerAccount = {\r\n    all: ()=> '{0}/general-ledger-accounts'.format(rootUrl())\r\n};\r\n\r\nlet subsidiaryLedgerAccount = {\r\n    all: ()=> '{0}/subsidiary-ledger-accounts'.format(rootUrl()),\r\n    allByGeneralLedgerAccount: (generalLedgerAccountId)=>\r\n        '{0}/subsidiary-ledger-accounts/general-ledger-account/{1}'\r\n            .format(rootUrl(), generalLedgerAccountId)\r\n};\r\n\r\nlet detailAccount = {\r\n    all: ()=> '{0}/detail-accounts'.format(rootUrl())\r\n};\r\n\r\nlet dimensionCategory = {\r\n    all: ()=> `${rootUrl()}/dimension-categories`\r\n};\r\n\r\nlet dimension = {\r\n    allByCategory: (categoryId)=> '{0}/dimensions/category/{1}'.format(rootUrl(), categoryId)\r\n};\r\n\r\nlet period = {\r\n    all: ()=> '{0}/fiscal-periods'.format(rootUrl())\r\n};\r\n\r\nlet chequeCategory = {\r\n    all: ()=> '{0}/cheque-categories'.format(rootUrl()),\r\n    allOpens: (detailAccountId)=> '{0}/cheque-categories/detail-account/{1}/opens'.format(rootUrl(), detailAccountId)\r\n};\r\n\r\nlet bank = {\r\n    all: ()=> '{0}/banks'.format(rootUrl())\r\n};\r\n\r\nlet cheque = {\r\n    all: (categoryId)=> '{0}/cheques/category/{1}'.format(rootUrl(), categoryId),\r\n    allwhites: (categoryId)=> '{0}/cheques/category/{1}/whites'.format(rootUrl(), categoryId),\r\n    allUseds: ()=> '{0}/cheques/useds'.format(rootUrl())\r\n};\r\n\r\nlet journal = {\r\n    getGroupedByMouth: ()=> '{0}/journals/summary/grouped-by-month'.format(rootUrl()),\r\n    getByMonth: (month)=> '{0}/journals/month/{1}'.format(rootUrl(), month),\r\n    getAllByPeriod: (periodId)=> '{0}/journals/period/{1}'.format(rootUrl(), periodId)\r\n};\r\n\r\nlet journalTemplate = {\r\n    getAll: ()=> '{0}/journal-templates'.format(rootUrl())\r\n};\r\n\r\nlet accountReview = {\r\n    getAllGeneralLedgerAccount: ()=> `${rootUrl()}/account-review/general-ledger-account`,\r\n    getAllSubsidiaryLedgerAccount: ()=> `${rootUrl()}/account-review/subsidiary-ledger-account`,\r\n    getAllDetailAccount: ()=> `${rootUrl()}/account-review/detail-account`,\r\n    getAllDimension1: ()=> `${rootUrl()}/account-review/dimension-1`,\r\n    getAllDimension2: ()=> `${rootUrl()}/account-review/dimension-2`,\r\n    getAllDimension3: ()=> `${rootUrl()}/account-review/dimension-3`,\r\n    getAllTiny: ()=> `${rootUrl()}/account-review/tiny`\r\n};\r\n\r\nlet tag = {\r\n    getAll: ()=> `${rootUrl()}/tags`\r\n};\r\n\r\nlet apiUrls = {\r\n    generalLedgerAccount: generalLedgerAccount,\r\n    subsidiaryLedgerAccount: subsidiaryLedgerAccount,\r\n    detailAccount: detailAccount,\r\n    dimensionCategory: dimensionCategory,\r\n    dimension: dimension,\r\n    period: period,\r\n    chequeCategory: chequeCategory,\r\n    bank: bank,\r\n    cheque: cheque,\r\n    journal: journal,\r\n    journalTemplate: journalTemplate,\r\n    accountReview: accountReview,\r\n    tag: tag\r\n};\r\n\r\nexport default apiUrls;",
    "import accModule from '../acc.module';\r\n\r\nfunction chequeCategoryCreateModalController($scope, $modalInstance, formService, chequeCategoryApi, logger, constants) {\r\n    \"use strict\";\r\n\r\n    $scope.errors = [];\r\n    $scope.chequeCategory = {\r\n        bankId: '',\r\n        detailAccountId: null,\r\n        totalPages: null,\r\n        firstPageNumber: null\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        $scope.errors.asEnumerable().removeAll();\r\n        $scope.isSaving = true;\r\n\r\n        chequeCategoryApi.create($scope.chequeCategory)\r\n            .then(function (result) {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.lastPageNumber = ()=> {\r\n        let model = $scope.chequeCategory;\r\n\r\n        return (model.firstPageNumber && model.totalPages)\r\n            ? model.firstPageNumber + model.totalPages - 1\r\n            : null\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.bankDataSource = {\r\n        type: 'json',\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.bank.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    }\r\n}\r\n\r\nfunction chequeCategoryCreateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: chequeCategoryCreateModalController,\r\n        templateUrl: 'partials/modals/chequeCategoryCreate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('chequeCategoryCreateModalController', chequeCategoryCreateModalController)\r\n    .factory('chequeCategoryCreateModalService', chequeCategoryCreateModalService);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction chequeCategoryUpdateModalController($scope, $modalInstance, formService, chequeCategoryApi, logger, data, constants) {\r\n    \"use strict\";\r\n\r\n    let id = data.id;\r\n    $scope.errors = [];\r\n    $scope.chequeCategory = {\r\n        bankId: '',\r\n        detailAccountId: null,\r\n        totalPages: null,\r\n        firstPageNumber: null\r\n    }\r\n\r\n    chequeCategoryApi.getById(id)\r\n        .then((result)=> $scope.chequeCategory = result);\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        $scope.errors.asEnumerable().removeAll();\r\n        $scope.isSaving = true;\r\n\r\n        chequeCategoryApi.update($scope.chequeCategory)\r\n            .then(function (result) {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.lastPageNumber = ()=> {\r\n        let model = $scope.chequeCategory;\r\n\r\n        return (model.firstPageNumber && model.totalPages)\r\n            ? model.firstPageNumber + model.totalPages - 1\r\n            : null\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.bankDataSource = {\r\n        type: 'json',\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.bank.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    }\r\n}\r\n\r\nfunction chequeCategoryUpdateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: chequeCategoryUpdateModalController,\r\n        templateUrl: 'partials/modals/chequeCategoryUpdate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('chequeCategoryUpdateModalController', chequeCategoryUpdateModalController)\r\n    .factory('chequeCategoryUpdateModalService', chequeCategoryUpdateModalService);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction detailAccountCreateModalController($scope, $modalInstance, formService, detailAccountApi, logger) {\r\n    \"use strict\";\r\n\r\n    $scope.errors = [];\r\n    $scope.detailAccount = {\r\n        title: '',\r\n        code: '',\r\n        description: ''\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        $scope.errors.asEnumerable().removeAll();\r\n        $scope.isSaving = true;\r\n\r\n        detailAccountApi.create($scope.detailAccount)\r\n            .then((result) => {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction detailAccountCreateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: detailAccountCreateModalController,\r\n        templateUrl: 'partials/modals/detailAccountCreate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('detailAccountCreateModalController', detailAccountCreateModalController)\r\n    .factory('detailAccountCreateModalService', detailAccountCreateModalService);",
    "import accModule from '../acc.module';\r\n\r\nfunction detailAccountUpdateModalController($scope, $modalInstance, data, formService, detailAccountApi, logger) {\r\n    \"use strict\";\r\n\r\n    let id = data.id;\r\n\r\n    $scope.errors = [];\r\n    $scope.detailAccount = {\r\n        title: '',\r\n        code: '',\r\n        description: ''\r\n    };\r\n\r\n    detailAccountApi.getById(id)\r\n        .then((result)=> $scope.detailAccount = result);\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        $scope.errors.asEnumerable().removeAll();\r\n        $scope.isSaving = true;\r\n\r\n        detailAccountApi.update(data.id, $scope.detailAccount)\r\n            .then((result) => {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n\r\n    $scope.activate = ()=> {\r\n        detailAccountApi.activate(id)\r\n            .then(()=> {\r\n                $scope.detailAccount.isActive = true;\r\n                logger.success();\r\n            })\r\n            .catch((errors)=> $scope.errors = errors);\r\n    };\r\n\r\n    $scope.deactivate = ()=> {\r\n        detailAccountApi.deactivate(id)\r\n            .then(()=> {\r\n                $scope.detailAccount.isActive = false;\r\n                logger.success();\r\n            })\r\n            .catch((errors)=> $scope.errors = errors);\r\n    };\r\n}\r\n\r\nfunction detailAccountUpdateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: detailAccountUpdateModalController,\r\n        templateUrl: 'partials/modals/detailAccountUpdate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('detailAccountUpdateModalController', detailAccountUpdateModalController)\r\n    .factory('detailAccountUpdateModalService', detailAccountUpdateModalService);",
    "import accModule from '../acc.module';\r\nimport config from '../localData/config';\r\n\r\nfunction dimensionCreateModalController(data,\r\n                                        $scope, $modalInstance, dimensionApi) {\r\n    \"use strict\";\r\n\r\n    $scope.errors = [];\r\n    $scope.dimension = {\r\n        title: '',\r\n        code: '',\r\n        description: ''\r\n    }\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return;\r\n\r\n        $scope.errors.asEnumerable().removeAll();\r\n\r\n        dimensionApi.create(data.categoryId, $scope.dimension)\r\n            .then(function (result) {\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch(function (errors) {\r\n                $scope.errors = errors;\r\n            });\r\n    };\r\n\r\n    $scope.close = function () {\r\n        $modalInstance.dismiss();\r\n    };\r\n}\r\n\r\nfunction dimensionCreateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: dimensionCreateModalController,\r\n        templateUrl: 'partials/modals/dimensionCreate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('dimensionCreateModalController', dimensionCreateModalController)\r\n    .factory('dimensionCreateModalService', dimensionCreateModalService);",
    "import accModule from '../acc.module';\r\n\r\nfunction dimensionUpdateModalController(data, $scope, $modalInstance, dimensionApi) {\r\n    \"use strict\";\r\n\r\n    $scope.errors = [];\r\n    $scope.dimension = {\r\n        title: '',\r\n        code: '',\r\n        description: ''\r\n    }\r\n\r\n\r\n    dimensionApi.getById(data.id)\r\n        .then((result)=> $scope.dimension = result);\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return;\r\n\r\n        $scope.errors.asEnumerable().removeAll();\r\n        $scope.isSaving = true;\r\n\r\n\r\n        dimensionApi.update(data.id, $scope.dimension)\r\n            .then(function (result) {\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction dimensionUpdateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: dimensionUpdateModalController,\r\n        templateUrl: 'partials/modals/dimensionUpdate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('dimensionUpdateModalController', dimensionUpdateModalController)\r\n    .factory('dimensionUpdateModalService', dimensionUpdateModalService);",
    "import accModule from '../acc.module';\r\nimport constants from '../localData/constants';\r\n\r\nfunction generalLedgerAccountCreateModalController($scope, $modalInstance, generalLedgerAccountApi, logger, formService) {\r\n\r\n    $scope.errors = [];\r\n    $scope.generalLedgerAccount = {\r\n        title: '',\r\n        code: '',\r\n        postingType: null,\r\n        balanceType: null,\r\n        description: ''\r\n    }\r\n\r\n    $scope.isSaving = false;\r\n    $scope.save = function (form) {\r\n        if (form.$invalid) {\r\n            formService.setDirty(form);\r\n            return;\r\n        }\r\n\r\n        $scope.errors.asEnumerable().removeAll();\r\n\r\n        $scope.isSaving = true;\r\n\r\n        generalLedgerAccountApi.create($scope.generalLedgerAccount)\r\n            .then(function (result) {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = function () {\r\n        $modalInstance.dismiss();\r\n    };\r\n\r\n    $scope.accountPostingType = constants.enums.AccountPostingType();\r\n    $scope.accountBalanceType = constants.enums.AccountBalanceType();\r\n}\r\n\r\nfunction generalLedgerAccountCreateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: generalLedgerAccountCreateModalController,\r\n        templateUrl: 'partials/modals/generalLedgerAccountCreate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('generalLedgerAccountCreateModalController', generalLedgerAccountCreateModalController)\r\n    .factory('generalLedgerAccountCreateModalService', generalLedgerAccountCreateModalService);\r\n\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\nimport constants from '../localData/constants';\r\nimport config from '../localData/config';\r\n\r\nfunction generalLedgerAccountUpdateModalController($scope,\r\n                                                   $modalInstance,\r\n                                                   data,\r\n                                                   generalLedgerAccountApi,\r\n                                                   logger, formService) {\r\n\r\n    $scope.errors = [];\r\n    $scope.generalLedgerAccount = {\r\n        title: '',\r\n        code: '',\r\n        postingType: null,\r\n        balanceType: null,\r\n        description: ''\r\n    };\r\n\r\n    generalLedgerAccountApi.getById(data.id)\r\n        .then(function (result) {\r\n            $scope.generalLedgerAccount = result;\r\n        });\r\n\r\n    $scope.isSaving = false;\r\n    $scope.save = function (form) {\r\n\r\n        if (form.$invalid) {\r\n            formService.setDirty(form);\r\n            return;\r\n        }\r\n\r\n        $scope.errors.asEnumerable().removeAll();\r\n\r\n        $scope.isSaving = true;\r\n\r\n        generalLedgerAccountApi.update(data.id, $scope.generalLedgerAccount)\r\n            .then(function (result) {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch(function (errors) {\r\n                $scope.errors = errors;\r\n            })\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.activate = function () {\r\n        if ($scope.generalLedgerAccount.isActive)\r\n            return;\r\n\r\n        generalLedgerAccountApi.activate($scope.generalLedgerAccount.id)\r\n            .then(function () {\r\n                $scope.generalLedgerAccount.isActive = true;\r\n                logger.success();\r\n            })\r\n            .catch(function () {\r\n                $scope.errors = err.errors;\r\n            })\r\n    }\r\n\r\n    $scope.deactivate = function () {\r\n        if (!$scope.generalLedgerAccount.isActive)\r\n            return;\r\n\r\n        generalLedgerAccountApi.deactivate($scope.generalLedgerAccount.id)\r\n            .then(function () {\r\n                $scope.generalLedgerAccount.isActive = false;\r\n                logger.success();\r\n            })\r\n            .catch(function () {\r\n                $scope.errors = err.errors;\r\n            })\r\n    }\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n\r\n    $scope.accountPostingType = constants.enums.AccountPostingType();\r\n    $scope.accountBalanceType = constants.enums.AccountBalanceType();\r\n}\r\n\r\nfunction generalLedgerAccountUpdateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: generalLedgerAccountUpdateModalController,\r\n        templateUrl: 'partials/modals/generalLedgerAccountUpdate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller(\r\n        'generalLedgerAccountUpdateModalController',\r\n        generalLedgerAccountUpdateModalController)\r\n    .factory(\r\n        'generalLedgerAccountUpdateModalService',\r\n        generalLedgerAccountUpdateModalService);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalAdvancedSearchModalController($scope, $modalInstance, translate, constants,\r\n                                              dimensionCategoryApi) {\r\n    $scope.journalSearch = {\r\n        title: '',\r\n        minNumber: null,\r\n        maxNumber: null,\r\n        minDate: null,\r\n        maxDate: null,\r\n        generalLedgerAccounts: [],\r\n        subsidiaryLedgerAccounts: [], //combination of generalLedgerAccount and subsidiaryLedgerAccount\r\n        detailAccounts: [],\r\n        dimension1s: [],\r\n        dimension2s: [],\r\n        dimension3s: [],\r\n        dimension4s: [],\r\n        chequeNumbers: [],\r\n        minChequeDate: null,\r\n        maxChequeDate: null,\r\n        chequeDescription: '',\r\n        amount: {\r\n            value: null,\r\n            operator: null,\r\n        },\r\n        isNotPeriodIncluded: false\r\n    };\r\n\r\n    $scope.amountOperators = [\r\n        {key: 'eq ', display: translate('Equal to')},\r\n        {key: 'gte', display: translate(\"Greater than or equal to\")},\r\n        {key: 'gt ', display: translate(\"Greater than\")},\r\n        {key: 'lte', display: translate(\"Less than or equal to\")},\r\n        {key: 'lt ', display: translate(\"Less than\")}\r\n    ];\r\n\r\n    $scope.execute = ()=> {\r\n        let result = {\r\n            resolve: resolveFilter,\r\n            data: $scope.journalSearch\r\n        };\r\n\r\n        $modalInstance.close(result);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n\r\n    $scope.generalLedgerAccountOptions = {\r\n        placeholder: translate('Select ...'),\r\n        dataTextField: \"display\",\r\n        dataValueField: \"id\",\r\n        valuePrimitive: false,\r\n        autoBind: false,\r\n        dataSource: {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: constants.urls.generalLedgerAccount.all()\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        }\r\n    };\r\n\r\n    $scope.subsidiaryLedgerAccountOptions = {\r\n        placeholder: translate('Select ...'),\r\n        dataTextField: \"account\",\r\n        dataValueField: \"id\",\r\n        valuePrimitive: false,\r\n        autoBind: false,\r\n        dataSource: {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: constants.urls.subsidiaryLedgerAccount.all()\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        }\r\n    };\r\n\r\n    $scope.dimension1Options = {};\r\n    $scope.dimension2Options = {};\r\n    $scope.dimension3Options = {};\r\n    $scope.dimension4Options = {};\r\n\r\n    $scope.detailAccountOptions = {\r\n        placeholder: translate('Select ...'),\r\n        dataTextField: \"display\",\r\n        dataValueField: \"id\",\r\n        valuePrimitive: false,\r\n        autoBind: false,\r\n        dataSource: {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: constants.urls.detailAccount.all()\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        }\r\n    };\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result)=> {\r\n            let cats = result.data;\r\n            $scope.dimensionCategories = cats;\r\n\r\n            $scope.dimension1Options = dimensionOptionFactory(cats[0].id);\r\n            $scope.dimension2Options = dimensionOptionFactory(cats[1].id);\r\n            $scope.dimension3Options = dimensionOptionFactory(cats[2].id);\r\n        });\r\n\r\n    function dimensionOptionFactory(categoryId) {\r\n        return {\r\n            placeholder: translate('Select ...'),\r\n            dataTextField: \"display\",\r\n            dataValueField: \"id\",\r\n            valuePrimitive: false,\r\n            autoBind: false,\r\n            dataSource: {\r\n                type: \"json\",\r\n                serverFiltering: true,\r\n                transport: {\r\n                    read: {\r\n                        url: constants.urls.dimension.allByCategory(categoryId)\r\n                    }\r\n                },\r\n                schema: {\r\n                    data: 'data'\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    $scope.chequeOptions = {\r\n        placeholder: translate('Select ...'),\r\n        dataTextField: \"number\",\r\n        dataValueField: \"id\",\r\n        valuePrimitive: true,\r\n        autoBind: false,\r\n        dataSource: {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: constants.urls.cheque.allUseds()\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        }\r\n    };\r\n\r\n    function resolveFilter(filterData) {\r\n\r\n        let instance = angular.extend({}, filterData);\r\n\r\n        instance.generalLedgerAccounts = filterData.generalLedgerAccounts\r\n            .asEnumerable()\r\n            .select((g)=> g.id)\r\n            .toArray();\r\n\r\n        instance.subsidiaryLedgerAccounts = filterData.subsidiaryLedgerAccounts\r\n            .asEnumerable()\r\n            .select((s)=> s.id)\r\n            .toArray();\r\n\r\n        instance.detailAccounts = filterData.detailAccounts\r\n            .asEnumerable()\r\n            .select((d)=> d.id)\r\n            .toArray();\r\n\r\n        instance.dimension1s = filterData.dimension2s\r\n            .asEnumerable()\r\n            .select((d)=> d.id)\r\n            .toArray();\r\n\r\n        instance.dimension2s = filterData.dimension2s\r\n            .asEnumerable()\r\n            .select((d)=> d.id)\r\n            .toArray();\r\n\r\n        instance.dimension3s = filterData.dimension3s\r\n            .asEnumerable()\r\n            .select((d)=> d.id)\r\n            .toArray();\r\n\r\n        instance.dimension4s = filterData.dimension4s\r\n            .asEnumerable()\r\n            .select((d)=> d.id)\r\n            .toArray();\r\n\r\n        instance.chequeNumbers = filterData.chequeNumbers\r\n            .asEnumerable()\r\n            .select((c)=> c.id)\r\n            .toArray();\r\n\r\n\r\n        return instance;\r\n    }\r\n}\r\n\r\nfunction journalAdvancedSearchModalService(modalBase) {\r\n    return modalBase({\r\n        controller: journalAdvancedSearchModalController,\r\n        templateUrl: 'partials/modals/journalAdvancedSearch.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalAdvancedSearchModalController', journalAdvancedSearchModalController)\r\n    .factory('journalAdvancedSearchModalService', journalAdvancedSearchModalService);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalAttachImageController($scope, $modalInstance, data, journalApi) {\r\n\r\n    let journalId = data.id;\r\n    let errors = $scope.errors = [];\r\n\r\n    $scope.uploaded = (fileName)=> {\r\n        journalApi.attachImage(journalId, {fileName: fileName})\r\n            .then(()=> $modalInstance.close())\r\n            .catch((err)=> errors = err);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction journalAttachImageService(modalBase) {\r\n    return modalBase({\r\n        controller: journalAttachImageController,\r\n        templateUrl: 'partials/modals/journalAttachImage.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalAttachImageController', journalAttachImageController)\r\n    .factory('journalAttachImageService', journalAttachImageService);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalBookkeepingController($scope, $modalInstance, formService,\r\n                                      data, journalApi) {\r\n\r\n    let journalId = data.id;\r\n\r\n    $scope.errors = [];\r\n    $scope.bookkeeping = {\r\n        number: null,\r\n        date: ''\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        journalApi.bookkeeping(journalId, $scope.bookkeeping)\r\n            .then((result)=> $modalInstance.close())\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction journalBookkeepingService(modalBase) {\r\n    return modalBase({\r\n        controller: journalBookkeepingController,\r\n        templateUrl: 'partials/modals/journalBookkeeping.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalBookkeepingController', journalBookkeepingController)\r\n    .factory('journalBookkeepingService', journalBookkeepingService);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalCreateModalController($scope, $modalInstance, journalApi, logger) {\r\n\r\n    $scope.errors = [];\r\n    $scope.journal = {\r\n        temporaryNumber: null,\r\n        temporaryDate: null,\r\n        description: ''\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return;\r\n\r\n        $scope.errors.asEnumerable().removeAll();\r\n\r\n        $scope.isSaving = true;\r\n\r\n        journalApi.create($scope.journal)\r\n            .then((result)=> {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> {\r\n                $scope.errors = errors;\r\n            })\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction journalCreateModalControllerService(modalBase) {\r\n    return modalBase({\r\n        controller: journalCreateModalController,\r\n        templateUrl: 'partials/modals/journalCreate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalCreateModalController', journalCreateModalController)\r\n    .factory('journalCreateModalControllerService', journalCreateModalControllerService);\r\n\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalLineCreateOrUpdateController($scope, $modalInstance, $timeout, formService, $q,\r\n                                             journalLineApi, dimensionCategoryApi, logger, constants, data) {\r\n\r\n    let journalId = data.journalId;\r\n    let id = data.id;\r\n    let editMode = $scope.editMode = id == undefined ? 'create' : 'update';\r\n\r\n    $scope.generalLedgerAccountShouldBeFocus = true;\r\n\r\n    $scope.errors = [];\r\n    $scope.dimensionCategories = [];\r\n    $scope.journalLine = {\r\n        generalLedgerAccountId: null,\r\n        subsidiaryLedgerAccountId: null,\r\n        detailAccountId: null,\r\n        dimension1Id: null,\r\n        dimension2Id: null,\r\n        dimension3Id: null,\r\n        article: '',\r\n        amount: null,\r\n        balanceType: ''\r\n    };\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.dimension1DataSource = null;\r\n    $scope.dimension2DataSource = null;\r\n    $scope.dimension3DataSource = null;\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result)=> {\r\n            let cats = result.data;\r\n            $scope.dimensionCategories = cats;\r\n\r\n            $scope.dimension1DataSource = dimensionDataSourceFactory(cats[0].id);\r\n            $scope.dimension2DataSource = dimensionDataSourceFactory(cats[1].id);\r\n            $scope.dimension3DataSource = dimensionDataSourceFactory(cats[2].id);\r\n        });\r\n\r\n    if (editMode == 'update')\r\n        journalLineApi.getById(id)\r\n            .then((result)=> {\r\n                result.amount = 0;\r\n                result.balanceType = '';\r\n\r\n                if (result.creditor > 0) {\r\n                    result.amount = result.creditor;\r\n                    result.balanceType = 'creditor';\r\n                }\r\n\r\n                if (result.debtor > 0) {\r\n                    result.amount = result.debtor;\r\n                    result.balanceType = 'debtor';\r\n                }\r\n\r\n                $scope.journalLine = result\r\n            });\r\n\r\n    let resetForm = (form)=> {\r\n\r\n        $scope.journalLine = {\r\n            generalLedgerAccountId: null,\r\n            subsidiaryLedgerAccount: null,\r\n            detailAccountId: null,\r\n            description: '',\r\n            amount: null,\r\n            balanceType: ''\r\n        };\r\n\r\n        $timeout(()=> formService.setClean(form), 100);\r\n\r\n        $scope.generalLedgerAccountShouldBeFocus = true;\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    let save = (form)=> {\r\n        let deferred = $q.defer();\r\n\r\n        function execute() {\r\n            if (form.$invalid) {\r\n                formService.setDirty(form);\r\n                deferred.reject();\r\n                return;\r\n            }\r\n\r\n            $scope.isSaving = true;\r\n\r\n            if (editMode == 'create')\r\n                journalLineApi.create(journalId, $scope.journalLine)\r\n                    .then((result)=> {\r\n                        deferred.resolve(result);\r\n                        logger.success();\r\n                    })\r\n                    .catch((errors)=> {\r\n                        $scope.errors = errors;\r\n                        deferred.reject();\r\n                    })\r\n                    .finally(()=> {\r\n                        $scope.isSaving = false;\r\n                        deferred.resolve();\r\n                    });\r\n\r\n            if (editMode == 'update')\r\n                journalLineApi.update(id, $scope.journalLine)\r\n                    .then(()=> {\r\n                        deferred.resolve();\r\n                        logger.success();\r\n                    })\r\n                    .catch((errors)=> {\r\n                        $scope.errors = errors;\r\n                        deferred.reject();\r\n                    })\r\n                    .finally(()=> $scope.isSaving = false);\r\n        }\r\n\r\n        $timeout(execute, 0);\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    $scope.saveAndNew = (form)=> {\r\n        save(form)\r\n            .then(()=> resetForm(form));\r\n    };\r\n\r\n    $scope.saveAndReturn = (form)=> {\r\n        save(form)\r\n            .then((result)=> $modalInstance.close(result));\r\n    };\r\n\r\n    $scope.generalLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.generalLedgerAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.generalLedgerAccountOnChange = ()=> {\r\n        $scope.journalLine.subsidiaryLedgerAccountId = null;\r\n\r\n        $scope.journalLine.detailAccount = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n        $scope.journalLine.dimension1 = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n        $scope.journalLine.dimension2 = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n        $scope.journalLine.dimension3 = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n        $scope.journalLine.detailAccount = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n    };\r\n\r\n    $scope.subsidiaryLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: (filter)=> {\r\n                    let generalLegerAccountId = filter.filter.filters\r\n                        .asEnumerable()\r\n                        .first(f => f.field == 'generalLedgerAccountId')\r\n                        .value;\r\n\r\n                    return constants.urls\r\n                        .subsidiaryLedgerAccount\r\n                        .allByGeneralLedgerAccount(generalLegerAccountId)\r\n                }\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.subsidiaryLedgerAccountSelect = (e)=> {\r\n        let item = e.sender.dataItem();\r\n\r\n        if (!item) {\r\n            $scope.journalLine.detailAccount = {\r\n                canShow: false,\r\n                isRequired: false\r\n            };\r\n            $scope.journalLine.dimension1 = {\r\n                canShow: false,\r\n                isRequired: false\r\n            };\r\n            $scope.journalLine.dimension2 = {\r\n                canShow: false,\r\n                isRequired: false\r\n            };\r\n            $scope.journalLine.dimension3 = {\r\n                canShow: false,\r\n                isRequired: false\r\n            };\r\n\r\n            return;\r\n        }\r\n\r\n        $scope.journalLine.detailAccount = {\r\n            canShow: ['Required', 'NotRequired'].asEnumerable().contains(item.detailAccountAssignmentStatus),\r\n            isRequired: item.detailAccountAssignmentStatus == 'Required'\r\n        };\r\n\r\n        $scope.journalLine.dimension1 = {\r\n            canShow: ['Required', 'NotRequired'].asEnumerable().contains(item.dimension1AssignmentStatus),\r\n            isRequired: item.dimension1AssignmentStatus == 'Required'\r\n        };\r\n\r\n        $scope.journalLine.dimension2 = {\r\n            canShow: ['Required', 'NotRequired'].asEnumerable().contains(item.dimension2AssignmentStatus),\r\n            isRequired: item.dimension2AssignmentStatus == 'Required'\r\n        };\r\n\r\n        $scope.journalLine.dimension3 = {\r\n            canShow: ['Required', 'NotRequired'].asEnumerable().contains(item.dimension3AssignmentStatus),\r\n            isRequired: item.dimension3AssignmentStatus == 'Required'\r\n        };\r\n    };\r\n\r\n    $scope.subsidiaryLedgerAccountDataBound = (e)=> e.sender.trigger('change');\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: constants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    let dimensionDataSourceFactory = (categoryId)=> {\r\n        return {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: constants.urls.dimension.allByCategory(categoryId)\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        }\r\n    };\r\n\r\n    $scope.changeAmountBalance = ()=>\r\n        $scope.journalLine.balanceType = $scope.journalLine.balanceType == 'debtor'\r\n            ? 'creditor'\r\n            : 'debtor';\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction journalLineCreateOrUpdateControllerModalService(modalBase) {\r\n    return modalBase({\r\n        controller: journalLineCreateOrUpdateController,\r\n        templateUrl: 'partials/modals/journalLineCreateOrUpdate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalLineCreateController', journalLineCreateOrUpdateController)\r\n    .factory('journalLineCreateControllerModalService', journalLineCreateOrUpdateControllerModalService);\r\n\r\naccModule\r\n    .controller('journalLineUpdateController', journalLineCreateOrUpdateController)\r\n    .factory('journalLineUpdateControllerModalService', journalLineCreateOrUpdateControllerModalService);\r\n\r\n\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction showJournalDetailController($scope, translate, $modalInstance, journalApi, journalLineApi, data) {\r\n    \"use strict\";\r\n\r\n    let id = data.id;\r\n    $scope.journal = {};\r\n\r\n    function fetch() {\r\n        journalApi.getById(id)\r\n            .then((result)=> $scope.journal = result);\r\n    }\r\n\r\n    fetch();\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'row', title: '#', width: '60px', type: 'number', filterable: false},\r\n            {\r\n                name: 'generalLedgerAccountId',\r\n                title: translate('General ledger account'),\r\n                type: 'generalLedgerAccount',\r\n                template: '${data.generalLedgerAccountCode}',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'subsidiaryLedgerAccountId',\r\n                title: translate('Subsidiary ledger account'),\r\n                type: 'subsidiaryLedgerAccount',\r\n                template: '${data.subsidiaryLedgerAccountCode}',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'detailAccountId',\r\n                title: translate('Detail account'),\r\n                type: 'detailAccount',\r\n                template: '${data.detailAccountCode}',\r\n                width: '120px'\r\n            },\r\n            {\r\n                name: 'article', title: translate('Article'), width: '200px', type: 'string',\r\n                template: '<span title=\"${data.article}\">${data.article}</span>'\r\n            },\r\n            {\r\n                name: 'debtor', title: translate('Debtor'), width: '120px', type: 'number', format: '{0:#,##}',\r\n                aggregates: ['sum'], footerTemplate: \"{0}: #= kendo.toString(sum,'n0') #\".format(translate('Sum'))\r\n            },\r\n            {\r\n                name: 'creditor', title: translate('Creditor'), width: '120px', type: 'number', format: '{0:#,##}',\r\n                aggregates: ['sum'], footerTemplate: \"{0}: #= kendo.toString(sum,'n0') #\".format(translate('Sum'))\r\n            }\r\n        ],\r\n        commands: [],\r\n        gridSize: '300px',\r\n        readUrl: journalLineApi.url.getAll(id)\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction showJournalDetailModalService(modalBase) {\r\n    return modalBase({\r\n        controller: showJournalDetailController,\r\n        templateUrl: 'partials/modals/showJournalDetail.html',\r\n        size: 'lg'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('showJournalDetailController', showJournalDetailController)\r\n    .factory('showJournalDetailModalService', showJournalDetailModalService);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction writeChequeOnJournalLineEntryController($scope,\r\n                                                 chequeApi, chequeCategoryApi, data, $timeout,\r\n                                                 formService, $modalInstance, constants) {\r\n    $scope.errors = [];\r\n    $scope.cheque = {\r\n        journalLineId: data.journalLineId,\r\n        detailAccountDisplay: data.detailAccountDisplay,\r\n        chequeId: null,\r\n        amount: data.amount,\r\n        date: data.date,\r\n        description: data.description\r\n    };\r\n\r\n    $scope.openChequeCategories = [];\r\n    $scope.selectedChequeCategory = false;\r\n    $scope.hasOpenChequeCategories = true;\r\n\r\n    chequeCategoryApi.getOpens(data.detailAccountId)\r\n        .then((result)=> {\r\n            $scope.openChequeCategories = result;\r\n            if (result.length == 0)\r\n                $scope.hasOpenChequeCategories = false;\r\n        });\r\n\r\n    $scope.selectChequeCategory = (cat)=> {\r\n        $scope.selectedChequeCategory = false;\r\n        $scope.whiteChequesDataSource.transport.read.url = constants.urls.cheque.allwhites(cat.id);\r\n\r\n        $timeout(()=> $scope.selectedChequeCategory = cat, 1);\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n        if (!$scope.hasOpenChequeCategories)\r\n            return;\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        $scope.isSaving = true;\r\n        chequeApi.write($scope.cheque.chequeId, $scope.cheque)\r\n            .then((result)=> $modalInstance.close(result))\r\n            .catch((result)=> $scope.errors = result)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n\r\n    $scope.whiteChequesDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: null\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n}\r\n\r\nfunction writeChequeOnJournalLineEntryService(modalBase) {\r\n    return modalBase({\r\n        controller: writeChequeOnJournalLineEntryController,\r\n        templateUrl: 'partials/modals/writeChequeOnJournalLineEntry.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('writeChequeOnJournalLineEntryController', writeChequeOnJournalLineEntryController)\r\n    .factory('writeChequeOnJournalLineEntryService', writeChequeOnJournalLineEntryService);",
    "import accModule from '../acc.module';\r\n\r\nfunction apiPromise($http, $q) {\r\n\r\n    function promise($httpPromise) {\r\n        var deferred = $q.defer();\r\n\r\n        $httpPromise\r\n            .success(function (result) {\r\n                if (result.isValid) {\r\n                    deferred.resolve(result.returnValue);\r\n                }\r\n                else {\r\n                    deferred.reject(result.errors)\r\n                }\r\n            })\r\n            .error(function (error) {\r\n                console.error(error);\r\n                deferred.reject(['Internal Error']);\r\n            });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    return {\r\n        get: function (url, data) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.get(url, data)\r\n                .success(function (result) {\r\n                    deferred.resolve(result);\r\n                })\r\n                .error(function (error) {\r\n                    console.error(error);\r\n                    deferred.reject(['Internal Error']);\r\n                });\r\n\r\n            return deferred.promise;\r\n        },\r\n        post: function (url, data) {\r\n            return promise($http.post(url, data));\r\n        },\r\n        put: function (url, data) {\r\n            return promise($http.put(url, data));\r\n        },\r\n        delete: function (url, data) {\r\n            return promise($http.delete(url, data));\r\n        }\r\n    };\r\n}\r\n\r\naccModule.factory('apiPromise', apiPromise)",
    "import swal from 'bootstrap-sweetalert';\r\nimport accModule from '../acc.module';\r\n\r\nfunction confirm(translate, $q) {\r\n\r\n    return (message, title, type)=> {\r\n        let deferred = $q.defer();\r\n\r\n        swal({\r\n            title: title,\r\n            text: message,\r\n            type: type || \"warning\",\r\n            showCancelButton: true,\r\n            cancelButtonText: translate('No'),\r\n            confirmButtonText: translate('Yes')\r\n        }, (isConfirm)=> {\r\n            if (isConfirm) deferred.resolve();\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n}\r\n\r\naccModule.factory('confirm', confirm);\r\n",
    "\"use strict\";\r\n\r\nexport default class currentService {\r\n    constructor() {\r\n        this.current = {\r\n            fiscalPeriod: null,\r\n            mode: null\r\n        };\r\n    }\r\n\r\n    setFiscalPeriod(fiscalPeriodId){\r\n        this.current.fiscalPeriod = fiscalPeriodId == 0 ? null : fiscalPeriodId;\r\n    }\r\n\r\n    setMode(mode){\r\n        this.current.mode = mode;\r\n    }\r\n\r\n    get(){\r\n        return this.current;\r\n    }\r\n}",
    "import accModule from '../acc.module';\r\n\r\nfunction formService() {\r\n\r\n    function setDirty(form) {\r\n        angular.forEach(form.$error, function (type) {\r\n            angular.forEach(type, function (field) {\r\n                field.$setDirty();\r\n            });\r\n        });\r\n        return form;\r\n    }\r\n\r\n    function setClean(form) {\r\n        angular.forEach(form.$error, function (type) {\r\n            angular.forEach(type, function (field) {\r\n                field.$setPristine();\r\n            });\r\n        });\r\n    }\r\n\r\n    return {\r\n        setDirty: setDirty,\r\n        setClean: setClean\r\n    }\r\n}\r\n\r\naccModule.service('formService', formService);",
    "import accModule from '../acc.module';\r\nimport $ from 'jquery';\r\n\r\nfunction gridFilterCellTypeProvider() {\r\n    var type = {\r\n        string: {\r\n            showOperators: false,\r\n            operator: \"contains\",\r\n            modelType: \"string\"\r\n        },\r\n        number: {\r\n            showOperators: true,\r\n            operator: \"eq\",\r\n            modelType: \"number\"\r\n        },\r\n        date: {\r\n            showOperators: false,\r\n            operator: \"contains\",\r\n            modelType: \"string\"\r\n        },\r\n        boolean: {}\r\n    }\r\n\r\n    function combo(option) {\r\n        return {\r\n            showOperators: false,\r\n            operator: \"eq\",\r\n            template: function (args) {\r\n                args.element.kendoComboBox({\r\n                    placeholder: '...',\r\n                    dataTextField: option.text,\r\n                    dataValueField: option.value,\r\n                    valuePrimitive: true,\r\n                    filter: \"contains\",\r\n                    autoBind: false,\r\n                    minLength: 2,\r\n                    dataSource: {\r\n                        type: \"json\",\r\n                        serverFiltering: true,\r\n                        transport: {\r\n                            read: {\r\n                                url: option.url\r\n                            },\r\n                            parameterMap: function (options) {\r\n                                return kendo.stringify(options);\r\n                            }\r\n                        },\r\n                        schema: {\r\n                            parse: function (response) {\r\n                                return response.data;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    function dropdown(option) {\r\n        return {\r\n            showOperators: false,\r\n            operator: \"eq\",\r\n            template: function (args) {\r\n                args.element.kendoDropDownList({\r\n                    dataTextField: option.text,\r\n                    dataValueField: option.value,\r\n                    filter: \"contains\",\r\n                    autoBind: false,\r\n                    minLength: 2,\r\n                    dataSource: option.data,\r\n                    valuePrimitive: true\r\n                });\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    this.control = {\r\n        combo: combo,\r\n        dropdown: dropdown\r\n    }\r\n\r\n    this.$get = function () {\r\n        return type;\r\n    }\r\n\r\n    this.set = function (extendedObject) {\r\n        type = angular.extend(type, extendedObject);\r\n    }\r\n}\r\n\r\naccModule.provider('gridFilterCellType', gridFilterCellTypeProvider);\r\n\r\n",
    "import swal from 'bootstrap-sweetalert';\r\nimport accModule from '../acc.module';\r\n\r\nfunction logger(translate) {\r\n    return {\r\n        success: function (message) {\r\n            swal({\r\n                title: translate('Successful'),\r\n                text: message || translate('Done successfully'),\r\n                type: 'success',\r\n                timer: 2000,\r\n                confirmButtonText: translate('OK')\r\n            });\r\n        },\r\n        info: function (message) {\r\n            swal({\r\n                title: translate('Info'),\r\n                text: message,\r\n                type: 'info',\r\n                timer: 2000,\r\n                confirmButtonText: translate('OK')\r\n            });\r\n        },\r\n        warning: function (message) {\r\n            swal({\r\n                title: translate('Warning'),\r\n                text: message,\r\n                type: 'warning',\r\n                timer: 2000,\r\n                confirmButtonText: translate('OK')\r\n            });\r\n        },\r\n        error: function (message) {\r\n            swal({\r\n                title: translate('Error'),\r\n                text: message,\r\n                type: 'error',\r\n                timer: 2000,\r\n                confirmButtonText: translate('OK')\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\naccModule.factory('logger', logger);\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nclass menuItemsProvider {\r\n\r\n    constructor() {\r\n        this.menuItems = [];\r\n    }\r\n\r\n    $get() {\r\n        return this.menuItems;\r\n    }\r\n\r\n    add(item) {\r\n        this.menuItems.push(item);\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\naccModule.provider('menuItems', menuItemsProvider);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction modalBase($modal, $q) {\r\n\r\n    /*{controller: string, templateUrl: string, size(optional): string, data: object}*/\r\n\r\n    var modalFunction = function (option) {\r\n        var modalInstance = $modal.open({\r\n            animation: true,\r\n            templateUrl: option.templateUrl,\r\n            controller: option.controller,\r\n            backdrop: true,\r\n            keyboard: false,\r\n            size: option.size, // nothing = normal , 'sm' = small , 'lg' = large\r\n            resolve: {\r\n                data: function () {\r\n                    return option.data;\r\n                }\r\n            }\r\n        });\r\n\r\n        var deferred = $q.defer();\r\n\r\n        modalInstance.result.then(function (result) {\r\n            deferred.resolve(result);\r\n        });\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    return function (option) {\r\n        return {\r\n            show: function (data) {\r\n                option.data = data;\r\n                return modalFunction(option)\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\naccModule.factory('modalBase', modalBase);\r\n",
    "import accModule from '../acc.module';\r\nimport swal from 'bootstrap-sweetalert';\r\n\r\nfunction prompt(translate, $q) {\r\n    return (option)=> {\r\n        let deferred = $q.defer();\r\n\r\n        swal({\r\n            title: option.title,\r\n            text: option.text,\r\n            type: 'input',\r\n            showCancelButton: true,\r\n            closeOnConfirm: false,\r\n            cancelButtonText: translate('Cancel'),\r\n            confirmButtonText: translate('Confirm'),\r\n            showLoaderOnConfirm: true,\r\n            animation: \"slide-from-top\",\r\n            inputPlaceholder: translate(\"Type something\")\r\n        }, (inputValue)=> {\r\n            if (!inputValue) {\r\n                swal.showInputError(translate('You should type something'));\r\n                return false;\r\n            }\r\n\r\n            deferred.resolve(inputValue);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n}\r\n\r\naccModule.factory('prompt', prompt);",
    "import accModule from '../acc.module';\r\n\r\nfunction routeNavigatorService($route, $location) {\r\n\r\n    function getRoute(name) {\r\n        return getKeys($route.routes)\r\n            .asEnumerable()\r\n            .select((r)=> $route.routes[r])\r\n            .first((r)=> r.controller == '{0}Controller'.format(name));\r\n    }\r\n\r\n    let navigate = (name, parameters, queryString)=> {\r\n        let route = getRoute(name);\r\n        let path = route.originalPath;\r\n\r\n        route.keys.forEach((key)=> {\r\n            let parameterValue = parameters[key.name] || '';\r\n            if (parameterValue == '' && key.optional == true)\r\n                throw new Error('[{0}] parameter is not optional'.format(key.name));\r\n\r\n            path = path.replace(new RegExp(':{0}'.format(key.name)), parameterValue);\r\n        });\r\n\r\n        if (queryString)\r\n            $location.search(queryString);\r\n\r\n        $location.path(path);\r\n\r\n    }\r\n\r\n    return navigate;\r\n}\r\n\r\naccModule.factory('navigate', routeNavigatorService);\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction showReport() {\r\n    return (url)=> {\r\n        window.open(url, '_blank');\r\n    }\r\n}\r\n\r\naccModule.factory('showReport', showReport);",
    "import accModule from '../acc.module';\r\n\r\nfunction translate($filter) {\r\n    return (key) => $filter('translate')(key);\r\n}\r\n\r\naccModule.factory('translate', translate);",
    "import accModule from '../acc.module';\r\n\r\n\r\nfunction translateStorageService() {\r\n\r\n    return {\r\n        put: (name, value)=> {\r\n            localStorage.setItem('translate.{0}'.format(name), value);\r\n        },\r\n        get: (name)=> {\r\n            return localStorage.getItem('translate.{0}'.format(name));\r\n        }\r\n    }\r\n}\r\n\r\naccModule.factory('translateStorageService', translateStorageService);"
  ]
}