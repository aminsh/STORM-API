{
  "version": 3,
  "sources": [
    "../../node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "src\\acc.config.js",
    "src\\acc.module.js",
    "src\\apis\\bankApi.js",
    "src\\apis\\chequeApi.js",
    "src\\apis\\chequeCategoryApi.js",
    "src\\apis\\detailAccountApi.js",
    "src\\apis\\dimensionApi.js",
    "src\\apis\\dimensionCategoryApi.js",
    "src\\apis\\fiscalPeriodApi.js",
    "src\\apis\\generalLedgerAccountApi.js",
    "src\\apis\\journalApi.js",
    "src\\apis\\journalLineApi.js",
    "src\\apis\\journalTemplateApi.js",
    "src\\apis\\reportApi.js",
    "src\\apis\\subsidiaryLedgerAccountApi.js",
    "src\\apis\\tagApi.js",
    "src\\config\\ADMdtp.config.js",
    "src\\config\\authConfig.js",
    "src\\config\\gridFilterCellTypeConfig.js",
    "src\\config\\menu.config.js",
    "src\\config\\route.config.js",
    "src\\config\\translate.config.js",
    "src\\controllers\\accountReviewController.js",
    "src\\controllers\\accountReviewTurnoverController.js",
    "src\\controllers\\banksController.js",
    "src\\controllers\\chequeCategoriesController.js",
    "src\\controllers\\chequePrintController.js",
    "src\\controllers\\createFiscalPeriodController.js",
    "src\\controllers\\detailAccountsController.js",
    "src\\controllers\\dimensionsController.js",
    "src\\controllers\\generalLedgerAccountsController.js",
    "src\\controllers\\homeController.js",
    "src\\controllers\\journalCopy.js",
    "src\\controllers\\journalManagementController.js",
    "src\\controllers\\journalPrintController.js",
    "src\\controllers\\journalTemplatesController.js",
    "src\\controllers\\journalUpdateController.js",
    "src\\controllers\\journalsController.js",
    "src\\controllers\\reportController.js",
    "src\\controllers\\reportDesignerController.js",
    "src\\controllers\\subsidiaryLedgerAccountCreateController.js",
    "src\\controllers\\subsidiaryLedgerAccountUpdateController.js",
    "src\\controllers\\subsidiaryLedgerAccountsController.js",
    "src\\directives\\alert.js",
    "src\\directives\\blockUi.js",
    "src\\directives\\button.js",
    "src\\directives\\chart.doughnut.js",
    "src\\directives\\checkbox.js",
    "src\\directives\\combobox.js",
    "src\\directives\\content.js",
    "src\\directives\\contentCover.js",
    "src\\directives\\customValidator.js",
    "src\\directives\\datepicker.js",
    "src\\directives\\dropdownlist.js",
    "src\\directives\\focusMe.js",
    "src\\directives\\grid.bootstrap.js",
    "src\\directives\\grid.editable.js",
    "src\\directives\\grid.editable.row.js",
    "src\\directives\\grid.filter.js",
    "src\\directives\\grid.sort.js",
    "src\\directives\\journalSearchParameters.js",
    "src\\directives\\layout.js",
    "src\\directives\\multiSelect.js",
    "src\\directives\\ngHtmlCompile.js",
    "src\\directives\\ngKendoGrid.js",
    "src\\directives\\numeric.js",
    "src\\directives\\paging.js",
    "src\\directives\\panelbar.js",
    "src\\directives\\radio.js",
    "src\\directives\\reportDesigner.js",
    "src\\directives\\reportViewer.js",
    "src\\directives\\shell.header.js",
    "src\\directives\\shell.js",
    "src\\directives\\shell.sidebar.item.js",
    "src\\directives\\shell.sidebar.js",
    "src\\directives\\subContent.js",
    "src\\directives\\textEditor.js",
    "src\\directives\\uploader.js",
    "src\\directives\\validationSummary.js",
    "src\\filters\\amount.js",
    "src\\localData\\config.js",
    "src\\localData\\devConstants.js",
    "src\\localData\\enumType.js",
    "src\\localData\\enums.js",
    "src\\localData\\urls.js",
    "src\\modals\\chequeCategroyCreate.js",
    "src\\modals\\chequeCategroyUpdate.js",
    "src\\modals\\detailAccountCreate.js",
    "src\\modals\\detailAccountUpdate.js",
    "src\\modals\\dimensionCreate.js",
    "src\\modals\\dimensionUpdate.js",
    "src\\modals\\generalLedgerAccountCreate.js",
    "src\\modals\\generalLedgerAccountUpdate.js",
    "src\\modals\\journalAdvnacedSearch.js",
    "src\\modals\\journalAttachImage.js",
    "src\\modals\\journalBookkeeping.js",
    "src\\modals\\journalCreate.js",
    "src\\modals\\journalLineCreateOrUpdate.js",
    "src\\modals\\showJournalDetail.js",
    "src\\modals\\subsidiaryLedgerAccountEntry.js",
    "src\\modals\\writeChequeOnJournalLineEntry.js",
    "src\\services\\apiPromise.js",
    "src\\services\\confirm.js",
    "src\\services\\currentService.js",
    "src\\services\\formService.js",
    "src\\services\\gridFilterCellTypeProvider.js",
    "src\\services\\logger.js",
    "src\\services\\menuItemsProvider.js",
    "src\\services\\modalBase.js",
    "src\\services\\prompt.js",
    "src\\services\\routeNavigatorService.js",
    "src\\services\\showReport.js",
    "src\\services\\translate.js",
    "src\\services\\translateStorageService.js",
    "src\\utilities\\stimulsoft.js"
  ],
  "names": [],
  "mappings": "AAAA;+FCAA,GAAA,MAAA,QAAA,kDAGA,SAAA,yBACA,QAAA,2BACA,QAAA,6BACA,QAAA,qCACA,QAAA,sBACA,IAAA,SAAA,QAAA,kEAIA,SAAA,gCACA,QAAA,iDACA,QAAA,oDACA,QAAA,yDACA,QAAA,yDACA,QAAA,0CACA,QAAA,sCACA,QAAA,oCACA,QAAA,yCACA,QAAA,4CACA,QAAA,iCACA,QAAA,6CACA,QAAA,6BACA,QAAA,4CACA,QAAA,yCACA,QAAA,iDACA,QAAA,uCACA,IAAA,+BAAA,QAAA,mIACA,uBAAA,QAAA,8GACA,kBAAA,QAAA,+FACA,0BAAA,QAAA,sHAGA,SAAA,kCACA,QAAA,qCACA,QAAA,2BACA,QAAA,+BACA,QAAA,uBACA,QAAA,qBACA,QAAA,yBACA,QAAA,4BACA,QAAA,kBACA,QAAA,oBACA,QAAA,4BACA,IAAA,kBAAA,QAAA,qFACA,WAAA,QAAA,mEACA,QAAA,QAAA,yDAGA,SAAA,uCACA,QAAA,uCACA,QAAA,yCACA,QAAA,4BACA,QAAA,4BACA,QAAA,0BACA,QAAA,sCACA,QAAA,+BACA,QAAA,+BACA,QAAA,iCACA,QAAA,iCACA,QAAA,0CACA,QAAA,8BACA,QAAA,kCACA,QAAA,gCACA,QAAA,gCAEA,QAAA,4BAGA,QAAA,sBACA,QAAA,2BACA,QAAA,wBACA,QAAA,gCACA,QAAA,kCACA,QAAA,wBACA,QAAA,yBACA,QAAA,uBACA,QAAA,yBACA,QAAA,wBACA,QAAA,2BACA,QAAA,6BACA,QAAA,4BAEA,QAAA,uBACA,QAAA,wBACA,QAAA,2BACA,QAAA,yBACA,QAAA,sBACA,QAAA,4BACA,QAAA,wCACA,QAAA,4BACA,IAAA,QAAA,QAAA,6DACA,cAAA,QAAA,4BACA,SAAA,8BACA,IAAA,WAAA,QAAA,sEACA,QAAA,QAAA,qEACA,QAAA,QAAA,sEACA,cAAA,QAAA,wFACA,MAAA,QAAA,oEACA,OAAA,QAAA,kEACA,OAAA,QAAA,gEACA,OAAA,QAAA,oEACA,cAAA,QAAA,uFACA,QAAA,QAAA,gEACA,eAAA,QAAA,qFACA,OAAA,QAAA,qEAGA,SAAA,oBAGA,QAAA,0BACA,QAAA,sCACA,QAAA,yBACA,QAAA,sBACA,QAAA,yCACA,QAAA,qBACA,QAAA,gCACA,QAAA,wBACA,QAAA,oCACA,QAAA,wBACA,QAAA,qBACA,QAAA,wBACA,IAAA,iBAAA,QAAA,qFAGA,OAAA,QACK,OADL,SAAA,SAEK,UAAU,QAFf,QAAA,SAGK,UAAU,cAHf,QAAA,SAIK,UAAU,eAJf,QAAA,SAKK,UAAU,mBALf,eAAA,SAMK,UAAU,qBANf,cAAA,cAOK,UAAU,yBAPf,cAAA,kBAQK,UAAU,iBARf,WAAA,SASK,UAAU,aATf,OAAA,SAUK,UAAU,mBAVf,OAAA,SAWK,UAAU,iBAXf,OAAA,SAYK,UAAU,eAZf,SAAA,SAaK,UAAU,qBAbf,OAAA,SAcK,UAAU,wBAdf,eAAA,SAeK,UAAU,gBAff,gBAAA,SAgBK,UAAU,sBAhBf,QAAA,SAiBK,QAAQ,iBAAA,QAAe,KAjB5B,iBAAA,SAkBK,QAAQ,kBAlBb,kBAAA,SAmBK,QAAQ,YAnBb,YAAA,SAoBK,QAAQ,SApBb,SAAA,SAqBK,WAAW,+BAAA,QAA6B,KArB7C,+BAAA,SAsBK,WAAW,wBAtBhB,wBAAA,SAuBK,WAAW,mBAvBhB,mBAAA,SAwBK,WAAW,2BAxBhB,2BAAA,SA0BA,MAAA,QAAU;;;qJC1JV,IAAA,UAAA,QAAA,qDACA,SAAA,mBACA,QAAA,qBACA,QAAA,iBACA,QAAA,oBACA,QAAA,qBACA,QAAA,oBACA,QAAA,oBACA,QAAA,mBAEA,QAAA,sBAEA,QAAA,YACA,QAAA,iBAEA,QAAA,iBAEA,OAAO,eAAe,MAAM,UAAW,YAAc,YAAY,IACjE,OAAO,eAAe,MAAM,UAAW,cAAgB,YAAY,GAEnE,IAAI,WAAY,UAAA,QAAQ,OAAO,cAC3B,YACA,UACA,aACA,aACA,eACA,yBACA,aACA,YACA,qBACA,WACA,iBAGJ,WAAU,KAAO,WACb,UAAA,QAAQ,QAAQ,UAAU,MAAM,WAC5B,UAAA,QAAQ,UAAU,UAAW,kBAIrC,UAAU,IAAI,SAAC,eAAgB,SAAU,YACrC,eAAe,SAAS,aAAa,QAAQ,UAC7C,eAAe,gBAAgB,SAAS,SAAS,IAAI,oBACrD,eAAe,QAAQ,SAAS,IAAI,iBACpC,eAAe,UAAU,KAAK,MAAM,aAAa,QAAQ,mBAEzD,WAAW,sBAAuB,EAClC,WAAW,eAAgB,oBAGhB;;;+FChDf,QAAS,SAAQ,YACb,GAAI,WAAY,WAEhB,QACI,QAAS,SAAU,IACf,MAAO,YAAW,IAAI,gBAAgB,OAAO,UAAW,MAE5D,OAAQ,SAAU,MACd,MAAO,YAAW,KAAK,YAAY,OAAO,WAAY,OAE1D,OAAQ,SAAU,GAAI,MAClB,MAAO,YAAW,IAAI,gBAAgB,OAAO,UAAW,IAAK,OAEjE,OAAQ,SAAU,IACd,MAAO,YAAW,OAAO,gBAAgB,OAAO,UAAW,OAhBvE,GAAA,MAAA,QAAA,mDAuBA,OAAA,QAAU,QAAQ,UAAW;;;+FCrB7B,QAAS,WAAU,YACf,GAAI,WAAY,WAEhB,QACI,QAAS,SAAU,IACf,MAAO,YAAW,IAAI,kBAAkB,OAAO,UAAW,MAE9D,MAAO,SAAC,GAAI,MAAL,MAAa,YAAW,IAAI,wBAAwB,OAAO,UAAW,IAAK,QAT1F,GAAA,MAAA,QAAA,mDAeA,OAAA,QAAU,QAAQ,YAAa;;;+FCb/B,QAAS,mBAAkB,YACvB,GAAI,WAAY,WAEhB,QACI,SAAU,SAAC,iBAAD,MACN,YAAW,IAAI,iDACV,OAAO,UAAW,mBAC3B,QAAS,SAAU,IACf,MAAO,YAAW,IAAI,4BAA4B,OAAO,UAAW,MAExE,OAAQ,SAAU,MACd,MAAO,YAAW,KAAK,wBAAwB,OAAO,WAAY,OAEtE,OAAQ,SAAU,GAAI,MAClB,MAAO,YAAW,IAAI,4BAA4B,OAAO,UAAW,IAAK,OAE7E,OAAQ,SAAU,IACd,MAAO,YAAW,OAAO,4BAA4B,OAAO,UAAW,OAnBnF,GAAA,MAAA,QAAA,mDA0BA,OAAA,QAAU,QAAQ,oBAAqB;;;+FCxBvC,QAAS,kBAAiB,YACtB,GAAI,WAAY,WAEhB,QACI,KACI,OAAQ,sBAAsB,OAAO,WACrC,aAAc,6BAA6B,OAAO,YAEtD,QAAS,SAAU,IACf,MAAO,YAAW,IAAI,0BAA0B,OAAO,UAAW,MAEtE,OAAQ,SAAU,MACd,MAAO,YAAW,KAAK,sBAAsB,OAAO,WAAY,OAEpE,OAAQ,SAAU,GAAI,MAClB,MAAO,YAAW,IAAI,0BAA0B,OAAO,UAAW,IAAK,OAE3E,OAAQ,SAAU,IACd,MAAO,YAAW,OAAO,0BAA0B,OAAO,UAAW,MAEzE,SAAU,SAAU,IAChB,MAAO,YAAW,IAAI,mCAAmC,OAAO,UAAW,MAE/E,WAAY,SAAU,IAClB,MAAO,YAAW,IAAI,qCAAqC,OAAO,UAAW,OA1BzF,GAAA,MAAA,QAAA,mDAiCA,OAAA,QAAU,QAAQ,mBAAoB;;;+FC/BtC,QAAS,cAAa,WAAY,GAAI,UAClC,GAAI,WAAY,WAEhB,QACI,KACI,OAAQ,SAAU,UACd,MAAO,8BAA8B,OAAO,UAAW,YAG/D,OAAQ,WACJ,MAAO,YAAW,IAAI,iBAAiB,OAAO,aAElD,QAAS,SAAU,IACf,MAAO,YAAW,IAAI,qBAAqB,OAAO,UAAW,MAEjE,OAAQ,SAAU,WAAY,MAC1B,MAAO,YAAW,KAAK,8BAA8B,OAAO,UAAW,YAAa,OAExF,OAAQ,SAAU,GAAI,MAClB,MAAO,YAAW,IAAI,qBAAqB,OAAO,UAAW,IAAK,OAEtE,OAAQ,SAAU,IACd,MAAO,YAAW,OAAO,qBAAqB,OAAO,UAAW,MAEpE,SAAU,SAAU,IAChB,MAAO,YAAW,IAAI,8BAA8B,OAAO,UAAW,MAE1E,WAAY,SAAU,IAClB,MAAO,YAAW,IAAI,gCAAgC,OAAO,UAAW,OA9BpF,GAAA,MAAA,QAAA,mDAqCA,OAAA,QAAU,QAAQ,eAAgB;;;+FCnClC,QAAS,sBAAqB,WAAY,GAAI,UAC1C,GAAI,WAAY,WAEhB,QACI,KACI,OAAQ,2BAA2B,OAAO,YAE9C,OAAQ,WACJ,MAAO,YAAW,IAAI,2BAA2B,OAAO,aAE5D,aAAc,WACV,GAAI,UAAW,GAAG,QACd,oBAAsB,KAAK,MAAM,aAAa,QAAQ,uBAU1D,OARI,qBACA,SAAS,WAAA,MAAK,UAAS,QAAQ,sBAAsB,GACpD,WAAW,IAAI,2BAA2B,OAAO,YACjD,KAAK,SAAC,QACH,aAAa,QAAQ,sBAAuB,KAAK,UAAU,SAC3D,SAAS,QAAQ,UAGlB,SAAS,SAEpB,QAAS,SAAU,IACf,MAAO,YAAW,IAAI,+BAA+B,OAAO,UAAW,MAE3E,OAAQ,SAAU,MACd,MAAO,YAAW,KAAK,2BAA2B,OAAO,WAAY,OAEzE,OAAQ,SAAU,GAAI,MAClB,MAAO,YAAW,IAAI,+BAA+B,OAAO,UAAW,IAAK,OAEhF,OAAQ,SAAU,IACd,MAAO,YAAW,OAAO,+BAA+B,OAAO,UAAW,MAE9E,SAAU,SAAU,IAChB,MAAO,YAAW,IAAI,wCAAwC,OAAO,UAAW,MAEpF,WAAY,SAAU,IAClB,MAAO,YAAW,IAAI,0CAA0C,OAAO,UAAW,OA1C9F,GAAA,MAAA,QAAA,mDAiDA,OAAA,QAAU,QAAQ,uBAAwB;;;ksBCjDpB,2BAClB,QAAA,iBAAY,YAAW,gBAAA,KAAA,iBACnB,KAAK,UAAY,YACjB,KAAK,WAAa,WAElB,KAAK,OAAQ,cAAc,OAAO,KAAK,6EAGpC,cACH,MAAO,MAAK,WAAW,KAAQ,KAAK,UAA7B,kBAAyD,gDAIhE,MAAO,MAAK,WAAW,IAAO,KAAK,UAA5B,kEAbO;;;+FCEtB,QAAS,yBAAwB,YAC7B,GAAI,WAAY,WAEhB,QACI,KACI,OAAQ,8BAA8B,OAAO,WAC7C,aAAc,qCACT,OAAO,YAEhB,QAAS,SAAU,IACf,MAAO,YAAW,IAAI,kCACjB,OAAO,UAAW,MAE3B,OAAQ,SAAU,MACd,MAAO,YAAW,KAAK,8BAA8B,OAAO,WAAY,OAE5E,OAAQ,SAAU,GAAI,MAClB,MAAO,YAAW,IAAI,kCAAkC,OAAO,UAAW,IAAK,OAEnF,OAAQ,SAAU,IACd,MAAO,YAAW,OAAO,kCAAkC,OAAO,UAAW,MAEjF,SAAU,SAAU,IAChB,MAAO,YAAW,IAAI,2CAA2C,OAAO,UAAW,MAEvF,WAAY,SAAU,IAClB,MAAO,YAAW,IAAI,6CAA6C,OAAO,UAAW,OA5BjG,GAAA,MAAA,QAAA,mDAiCA,OAAA,QAAU,QAAQ,0BAA2B;;;+FC/B7C,QAAS,YAAW,YAChB,GAAI,WAAY,WAEhB,QACI,KACI,OAAQ,eAAe,OAAO,YAElC,kBAAmB,WAAA,MAAM,YAAW,IAAI,wCAAwC,OAAO,aACvF,QAAS,SAAU,IACf,MAAO,YAAW,IAAI,mBAAmB,OAAO,UAAW,MAE/D,YAAY,SAAC,QAAD,MAAW,YAAW,IAAO,UAAlB,uBAAkD,SACzE,aAAc,WAAA,MAAM,YAAW,IAAO,UAAlB,yBACpB,qBAAsB,SAAA,IAAA,MAAM,YAAW,IAAX,wBAAuC,KACnE,OAAQ,SAAU,MACd,MAAO,YAAW,KAAK,eAAe,OAAO,WAAY,OAE7D,OAAQ,SAAU,GAAI,MAClB,MAAO,YAAW,IAAI,mBAAmB,OAAO,UAAW,IAAK,OAEpE,OAAQ,SAAU,IACd,MAAO,YAAW,OAAO,mBAAmB,OAAO,UAAW,MAElE,KAAM,SAAC,IAAD,MAAQ,YAAW,KAAK,wBAAwB,OAAO,UAAW,MACxE,YAAa,SAAC,GAAI,MAAL,MAAc,YAAW,IAAI,+BAA+B,OAAO,UAAW,IAAK,OAChG,YAAa,SAAC,GAAI,MAAL,MAAc,YAAW,IAAI,gCAAgC,OAAO,UAAW,IAAK,OACjG,mBAAoB,WAAA,MAAM,YAAW,IAAO,UAAlB,sCA5BlC,GAAA,MAAA,QAAA,mDAgCA,OAAA,QAAU,QAAQ,aAAc;;;+FC9BhC,QAAS,gBAAe,YACpB,GAAI,WAAY,WAEhB,QACI,KACI,OAAQ,SAAC,WAAD,MAAc,gCAAgC,OAAO,UAAW,aAE5E,QAAS,SAAU,IACf,MAAO,YAAW,IAAI,wBAAwB,OAAO,UAAW,MAEpE,OAAQ,SAAU,UAAW,MACzB,MAAO,YAAW,KAAK,gCAAgC,OAAO,UAAW,WAAY,OAEzF,OAAQ,SAAU,GAAI,MAClB,MAAO,YAAW,IAAI,wBAAwB,OAAO,UAAW,IAAK,OAEzE,OAAQ,SAAU,IACd,MAAO,YAAW,OAAO,wBAAwB,OAAO,UAAW,OAnB/E,GAAA,MAAA,QAAA,mDA0BA,OAAA,QAAU,QAAQ,iBAAkB;;;+FCxBpC,QAAS,oBAAmB,YACxB,GAAI,WAAY,WAEhB,QACI,OAAQ,SAAC,UAAW,MAAZ,MACJ,YAAW,KAAK,oCAAoC,OAAO,UAAW,WAAY,OACtF,cAAe,SAAC,IAAD,MACX,YAAW,KAAK,2CAA2C,OAAO,UAAW,MACjF,OAAQ,SAAC,IAAD,MACJ,YAAW,OAAO,4BAA4B,OAAO,UAAW,OAX5E,GAAA,MAAA,QAAA,mDAiBA,OAAA,QAAU,QAAQ,qBAAsB;;;otBCfpC,QAAA,QAAY,YAAY,gBAAA,KAAA,QACpB,KAAK,UAAY,oBACjB,KAAK,WAAa,kEAGjB,MACD,MAAO,MAAK,WAAW,KAAK,KAAK,UAAW,oDAG1B,MAClB,MAAO,MAAK,WAAW,IAAI,oCAAqC;;;+FCVxE,QAAS,4BAA2B,YAChC,GAAI,WAAY,WAEhB,QACI,KACI,OAAQ,SAAU,UACd,MAAO,4DAA4D,OAAO,UAAW,WAEzF,aAAc,SAAU,UACpB,MAAO,mEAAmE,OAAO,UAAW,YAGpG,QAAS,SAAU,IACf,MAAO,YAAW,IAAI,sCACjB,OAAO,UAAW,MAE3B,OAAQ,SAAU,SAAU,MACxB,MAAO,YAAW,KAAK,4DAClB,OAAO,UAAW,UAAW,OAGtC,OAAQ,SAAU,GAAI,MAClB,MAAO,YAAW,IAAI,qCACjB,OAAO,UAAW,IAAK,OAGhC,OAAQ,SAAU,IACd,MAAO,YAAW,OAAO,qCACpB,OAAO,UAAW,MAG3B,SAAU,SAAU,IAChB,MAAO,YAAW,IAAI,8CACjB,OAAO,UAAW,MAG3B,WAAY,SAAU,IAClB,MAAO,YAAW,IAAI,gDACjB,OAAO,UAAW,OAxCnC,GAAA,MAAA,QAAA,mDA6CA,OAAA,QACK,QAAQ,6BAA8B;;;otBC5CvC,QAAA,QAAY,YAAY,gBAAA,KAAA,QACpB,KAAK,UAAY,iBACjB,KAAK,WAAa,oEAGf,MACH,MAAO,MAAK,WAAW,KAAK,KAAK,UAAW;;;sKCPrC,SAAU,eAAgB,iBACrC,eAAe,YACX,QAAS,SACT,QAAS,OACT,OAAQ,aAER,WAAW,IAGf,gBAAgB,YAAa,kBAAmB,6EAC5C,QAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,aAGrF,IAAA,QAAA,QAAA,kDACA,SAAA,QAAM,SAAS,OAAO,kBAAkB,aACxC,QAAA,QAAM,SAAS,OAAO,WAAa,+CACnC,QAAA,QAAM,SAAS,OAAO,gBAAkB;;;+FCjBxC,GAAA,MAAA,QAAA,oDACA,QAAA,QAAA,kDAEA,OAAA,QAAU,OAAO,SAAA,eACb,cAAc,SAAS,QAAQ,OAAO,oBAAsB,iBAE5D,cAAc,aAAa,KAAK,WAC5B,OACI,QAAW,SAAC,QACR,MAAO,SAEX,SAAY,SAAC,WAGT,MAAO,YAEX,aAAgB,SAAC,WACb,MAAO,YAEX,cAAiB,SAAC,WACd,MAAwB,MAApB,UAAU,QAAmC,6BAAlB,UAAU,KAC9B,SAAS,SAEb,iBAMvB,EAAA,SAAA,SAAE,UAAU,UAAU,SAAC,EAAG,UACtB,GAAuB,KAAnB,SAAS,QAA0C,6BAAzB,SAAS,aACnC,MAAO,UAAS;;;+FC/BxB,GAAA,MAAA,QAAA,oDACA,cAAA,QAAA,iFAEA,OAAA,QAAU,OAAO,SAAU,4BAEvB,GAAI,cACA,KAAM,eAAA,QAAa,MAAM,qBAAqB,KAC9C,SAAA,6TASA,aACA,KAAM,eAAA,QAAa,MAAM,qBAAqB,KAC9C,SAAA,+PASA,YACA,KAAM,eAAA,QAAa,MAAM,SAAS,KAClC,SAAA,8PASA,aACA,KAAM,eAAA,QAAa,MAAM,cAAc,KACvC,SAAA,8PASA,eACA,KAAM,eAAA,QAAa,MAAM,gBAAgB,KACzC,SAAA,8PASA,sBACA,KAAM,eAAA,QAAa,MAAM,uBAAuB,KAChD,SAAA,8PASA,sBACA,YACI,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,eAAA,QAAa,KAAK,qBAAqB,QAGpD,QACI,KAAM,SAGd,SAAA,oTAQA,OAAO,MAAO,UAGd,yBACA,YACI,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,eAAA,QAAa,KAAK,wBAAwB,QAGvD,QACI,KAAM,SAGd,SAAA,oTAQA,OAAO,MAAO,UAGd,eACA,YACI,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,eAAA,QAAa,KAAK,cAAc,QAG7C,QACI,KAAM,SAGd,SAAA,oTAQA,OAAO,MAAO,UAGd,MACA,YACI,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,eAAA,QAAa,KAAK,KAAK,QAGpC,QACI,KAAM,SAGd,SAAA,kTAWJ,4BAA2B,KACvB,YAAa,YACb,YAAa,YACb,WAAY,WACZ,KAAK,KACL,qBAAsB,qBACtB,wBAAyB,wBACzB,cAAe,cACf,qBAAsB,qBACtB,YAAa,YACb,cAAe;;;+FCjLvB,GAAA,MAAA,QAAA,mDAEA,OAAA,QAAU,OAAO,SAAA,mBAGb,kBACK,KACG,MAAO,sBACP,IAAK,GACL,KAAM,cACN,WAEQ,MAAO,oBACP,IAAK,6BAGL,MAAO,aACP,IAAK,qBAGL,MAAO,OACP,IAAK,kBAIhB,KACG,MAAO,eACP,IAAK,GACL,KAAM,aACN,WAEQ,MAAO,sBACP,IAAK,YACL,KAAM,KAGN,MAAO,eACP,IAAK,sBACL,KAAM,KAGN,MAAO,UACP,IAAK,gBACL,KAAM,6BAGN,MAAO,gBACP,IAAK,yBAIhB,KACG,MAAO,aACP,IAAK,GACL,KAAM,cACN,WAEQ,MAAO,aACP,IAAK,qBACL,KAAM,KAGN,MAAO,UACP,IAAK,SACL,KAAM,OAIjB,KACG,MAAO,UACP,IAAK,GACL,KAAM,kBACN,WAEQ,MAAO,YACP,IAAK,kBACL,KAAM,KAGN,MAAO,UACP,IAAK,WACL,KAAM;;;+FCjF1B,GAAA,MAAA,QAAA,mDAEA,OAAA,QAAU,OAAO,SAAC,eAAgB,mBAE9B,kBAAkB,WACd,SAAS,EACT,aAAa,IAGjB,kBAAkB,WAAW,KAC7B,eACK,KAAK,SACF,WAAY,iBACZ,YAAa,6BAEhB,KAAK,iCACF,WAAY,kCACZ,YAAa,8CAEhB,KAAK,iEACF,WAAY,qCACZ,YAAa,iDAEhB,KAAK,kEACF,WAAY,0CACZ,YAAa,sDAEhB,KAAK,4CACF,WAAY,0CACZ,YAAa,sDAEhB,KAAK,yBACF,WAAY,2BACZ,YAAa,uCAEhB,KAAK,+BACF,WAAY,gCACZ,YAAa,4CAEhB,KAAK,iCACF,WAAY,gCACZ,YAAa,4CAEhB,KAAK,oBACF,WAAY,uBACZ,YAAa,mCAEhB,KAAK,kBACF,WAAY,qBACZ,YAAa,iCAEhB,KAAK,sBACF,WAAY,wBACZ,YAAa,oCAEhB,KAAK,2BACF,WAAY,6BACZ,YAAa,yCAEhB,KAAK,0BACF,WAAY,0BACZ,YAAa,sCAEhB,KAAK,2BACF,WAAY,yBACZ,YAAa,qCAEhB,KAAK,4BACF,WAAY,8BACZ,YAAa,0CAEhB,KAAK,mBACF,YAAa,iCAEhB,KAAK,2BACF,WAAY,6BACZ,YAAa,yCAEhB,KAAK,0BACF,WAAY,wBACZ,YAAa,oCAEhB,KAAK,eACF,WAAY,kBACZ,YAAa,8BAEhB,KAAK,wBACF,WAAY,0BACZ,YAAa,sCAEhB,KAAK,uCACF,WAAY,kCACZ,YAAa,8CAEhB,KAAK,2BACF,WAAY,+BACZ,YAAa,2CAEhB,KAAK,iBACF,WAAY,mBACZ,YAAa,+BAEhB,KAAK,qCACF,WAAY,2BACZ,YAAa,uCAEhB,KAAK,mBACF,YAAa,iCAEhB,UAAU,qBAGnB,MAAA,QAAU,IACN,SAAA,QAAA,MAAU,QAAO;;;+FCjHrB,GAAA,MAAA,QAAA,mDACA,SAAA,+BACA,IAAA,SAAA,QAAA,+DAEA,OAAA,QAAU,OAAO,SAAA,oBACb,GAAI,SAAA,QAAO,eACP,mBAAmB,aAAa,6BAC7B,CACH,GAAI,WAAY,KAAK,MAAM,aAAa,QAAQ,aAEhD,oBAAmB,aAAa,QAAS,WACzC,mBAAmB,WAAW,2BAGlC,mBAAmB,kBAAkB,SACrC,mBAAmB,yBAAyB;;;+FCZhD,QAAS,yBAAwB,OAAQ,SAAU,qBAAsB,aAAc,aA6CnF,QAAS,4BAA2B,YAChC,OACI,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,UAAU,cAAc,cAGvD,QACI,KAAM,SAKlB,QAAS,aACL,GAAI,OAAQ,KAAK,UAAU,OAAO,WAElC,cAAa,QAAQ,uBAAwB,OAGjD,QAAS,iBACL,GAAI,YAAa,OAAO,WACpB,SAeJ,OAbI,YAAW,YACX,OAAO,UAAY,WAAW,UAC9B,OAAO,UAAY,WAAW,WAG9B,WAAW,UACX,OAAO,QAAU,WAAW,QAC5B,OAAO,QAAU,WAAW,SAGhC,OAAO,qBAAuB,WAAW,qBACzC,OAAO,oBAAsB,WAAW,oBAEjC,OAjFX,OAAO,WAAa,aAAa,QAAQ,wBACnC,KAAK,MAAM,aAAa,QAAQ,0BAElC,QAAS,GACT,QAAS,GACT,UAAW,KACX,UAAW,KACX,sBAAsB,EACtB,qBAAqB,EACrB,cAAe,KACf,WAAY,KACZ,WAAY,KACZ,WAAY,MAGhB,OAAO,yBACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,cAAc,QAG7C,QACI,KAAM,SAId,OAAO,wBACP,OAAO,wBACP,OAAO,wBACP,OAAO,wBAEP,qBAAqB,SAChB,KAAK,SAAC,QACH,GAAI,MAAO,OAAO,IAClB,QAAO,oBAAsB,GAAA,OAAA,QAAe,MAAM,eAAe,KAAK,GAAG,UAEzE,OAAO,qBAAuB,2BAA2B,KAAK,GAAG,IACjE,OAAO,qBAAuB,2BAA2B,KAAK,GAAG,IACjE,OAAO,qBAAuB,2BAA2B,KAAK,GAAG,MA4CzE,OAAO,gBAAkB,SAAC,KAAK,YAI3B,WACA,IAAI,QAAS,eAEb,UAAS,yBAA0B,KAAM,YAAa,SAG1D,OAAO,8BAAgC,SAAC,YACpC,WAEA,IAAI,QAAS,eACb,QAAO,gBAAkB,OAAO,WAAW,cAAc,GACzD,OAAO,qBAAuB,OAAO,WAAW,cAAc,QAE9D,SAAS,yBAA0B,KAAM,YAAa,SAG1D,OAAO,0BAA4B,SAAC,cAAe,WAAY,OAC3D,WAEA,IAAI,QAAS,eACb,QAAU,cAAV,MAA+B,OAAO,WAAW,eAAe,GAChE,OAAU,cAAV,WAAoC,OAAO,WAAW,eAAe,QACrE,OAAU,cAAV,WAAoC,OAAO,oBAAoB,OAAO,MAEtE,SAAS,yBAA0B,KAAM,YAAa,SArH9D,GAAA,MAAA,QAAA,oDACA,KAAA,QAAA,oDAwHA,OAAA,QAAU,WAAW,0BAA2B;;;+FCtHhD,QAAS,iCAAgC,OAAQ,SAAU,aAAc,UAAW,UAC3C,qBACA,uCACA,+BAoFrC,QAAS,sBACL,GAAI,mBA4DJ,OA1DI,YAAW,wBACX,gBAAgB,MACZ,KAAM,UAAU,0BAChB,MAAO,WAAW,8BAGtB,WAAW,2BACX,gBAAgB,MACZ,KAAM,UAAU,6BAChB,MAAO,WAAW,iCAGtB,WAAW,iBACX,gBAAgB,MACZ,KAAM,UAAU,kBAChB,MAAO,WAAW,uBAGtB,WAAW,cACX,gBAAgB,MACZ,KAAM,UAAU,cAChB,MAAO,WAAW,oBAGtB,WAAW,cACX,gBAAgB,MACZ,KAAM,UAAU,cAChB,MAAO,WAAW,oBAGtB,WAAW,cACX,gBAAgB,MACZ,KAAM,UAAU,cAChB,MAAO,WAAW,oBAGtB,WAAW,WACX,gBAAgB,MACZ,KAAM,UAAU,UAChB,MAAA,IAAW,WAAW,UAAtB,IAAmC,WAAW,UAA9C,MAGJ,WAAW,SACX,gBAAgB,MACZ,KAAM,UAAU,QAChB,MAAA,IAAW,WAAW,QAAtB,IAAiC,WAAW,QAA5C,MAGJ,KAAK,WAAW,uBAChB,gBAAgB,MACZ,KAAM,UAAU,6BAGpB,KAAK,WAAW,sBAChB,gBAAgB,MACZ,KAAM,UAAU,4BAGjB,gBAGX,QAAS,iBACL,GAAI,UAiCJ,OA/BI,YAAW,yBACX,OAAO,uBAAyB,WAAW,wBAE3C,WAAW,4BACX,OAAO,0BAA4B,WAAW,2BAE9C,WAAW,kBACX,OAAO,gBAAkB,WAAW,iBAEpC,WAAW,eACX,OAAO,aAAe,WAAW,cAEjC,WAAW,eACX,OAAO,aAAe,WAAW,cAEjC,WAAW,eACX,OAAO,aAAe,WAAW,cAEjC,WAAW,YACX,OAAO,UAAY,WAAW,UAC9B,OAAO,UAAY,WAAW,WAG9B,WAAW,UACX,OAAO,QAAU,WAAW,QAC5B,OAAO,QAAU,WAAW,SAGhC,OAAO,qBAAuB,WAAW,qBACzC,OAAO,mBAAqB,WAAW,mBAEhC,OArLX,GAAI,SACA,qBAAsB,UAAU,yCAChC,wBAAyB,UAAU,4CACnC,cAAe,UAAU,iCACzB,WAAe,UAAU,4BAAzB,IAAwD,UAAU,cAClE,WAAe,UAAU,4BAAzB,IAAwD,UAAU,cAClE,WAAe,UAAU,4BAAzB,IAAwD,UAAU,cAClE,KAAM,UAAU,2BAGhB,WAAa,OAAO,WAAa,aAAa,KAC9C,WAAa,UAAU,QAE3B,QAAO,WAEC,MAAO,EACP,IAAK,OACL,QAAS,UAAU,4BAGnB,MAAO,EACP,IAAK,uBACL,QAAS,UAAU,4BAGnB,MAAO,EACP,IAAK,0BACL,QAAS,UAAU,+BAGnB,MAAO,EACP,IAAK,gBACL,QAAS,UAAU,oBAGnB,MAAO,EACP,IAAK,aACL,QAAS,UAAU,gBAGnB,MAAO,EACP,IAAK,aACL,QAAS,UAAU,gBAGnB,MAAO,EACP,IAAK,aACL,QAAS,UAAU,gBAI3B,OAAO,MAAQ,OAAO,aAAa,MAEnC,OAAO,gBAAkB,qBAEzB,OAAO,WAAa,uCAAuC,aAAa,MACxE,OAAO,WAAW,OAAS,OAAQ,iBACnC,OAAO,SAAU,EAEjB,OAAO,QAAU,SAAC,KACd,GAAI,QAAS,QAAQ,UAAW,kBACzB,QAAU,IAAV,YACA,QAAU,IAAV,WAEP,OAAU,WAAV,MAA4B,OAAO,QAAW,WAAlB,MAC5B,OAAU,WAAV,WAAoC,OAAO,QAAW,WAAlB,QAApC,IAA2E,OAAO,QAAW,WAAlB,SAE3E,SAAS,yBAA0B,KAAM,KAAM,SAGnD,OAAO,iBAAmB,SAAC,SAClB,UAAS,OAAO,SAAU,GAE/B,OAAO,QAAU,SAGrB,OAAO,YAAc,WACjB,8BACK,MACG,GAAI,OAAO,QAAQ,MA2GnC,QAAS,wCAAuC,UAAW,cACvD,GAAI,YAEA,gBAEI,KAAM,qBACN,MAAO,UAAU,oBACjB,KAAM,SACN,MAAO,MACP,SAAU,uCACV,YAAa,OACb,eAAgB,mDAGhB,KAAM,YACN,MAAO,UAAU,UACjB,KAAM,SACN,MAAO,MACP,SAAU,8BACV,YAAa,OACb,eAAgB,0CAGhB,KAAM,cACN,MAAO,UAAU,YACjB,KAAM,SACN,MAAO,MACP,SAAU,gCACV,YAAa,OACb,eAAgB,4CAGhB,KAAM,eACN,MAAO,UAAU,aACjB,KAAM,SACN,MAAO,MACP,SAAU,iCACV,YAAa,OACb,eAAgB,4CAiNxB,OA7MA,SAAQ,sBACJ,UAEQ,KAAM,2BACN,MAAO,UAAU,0BACjB,KAAM,SACN,MAAO,QAGP,KAAM,4BACN,MAAO,UAAU,SACjB,KAAM,SACN,MAAO,QAXf,OAaO,eAEP,YACA,QAAS,aAAa,KAAK,cAAc,6BACzC,YAAY,GAGhB,QAAQ,yBACJ,UAEQ,KAAM,8BACN,MAAO,UAAU,6BACjB,KAAM,SACN,MAAO,OAGP,KAAM,2BACN,MAAO,UAAU,0BACjB,KAAM,SACN,MAAO,OAEV,KAAM,+BAAgC,MAAO,UAAU,SAAU,KAAM,SAAU,MAAO,QAb7F,OAcO,eAEP,YACA,QAAS,aAAa,KAAK,cAAc,gCACzC,YAAY,GAGhB,QAAQ,eACJ,UAEQ,KAAM,oBACN,MAAO,UAAU,kBACjB,KAAM,SACN,MAAO,QAGP,KAAM,qBACN,MAAO,UAAU,SACjB,KAAM,SACN,MAAO,QAXf,OAaO,eAEP,YACA,QAAS,aAAa,KAAK,cAAc,sBACzC,YAAY,GAGhB,QAAQ,YACJ,UAEQ,KAAM,iBACN,MAAO,UAAU,cACjB,KAAM,SACN,MAAO,QAGP,KAAM,kBACN,MAAO,UAAU,SACjB,KAAM,SACN,MAAO,QAXf,OAaO,eAEP,YACA,QAAS,aAAa,KAAK,cAAc,mBACzC,YAAY,GAGhB,QAAQ,YACJ,UAEQ,KAAM,iBACN,MAAO,UAAU,cACjB,KAAM,SACN,MAAO,QAGP,KAAM,kBACN,MAAO,UAAU,SACjB,KAAM,SACN,MAAO,QAXf,OAaO,eAEP,YACA,QAAS,aAAa,KAAK,cAAc,mBACzC,YAAY,GAGhB,QAAQ,YACJ,UAEQ,KAAM,iBACN,MAAO,UAAU,cACjB,KAAM,SACN,MAAO,QAGP,KAAM,kBACN,MAAO,UAAU,SACjB,KAAM,SACN,MAAO,QAXf,OAaO,eAEP,YACA,QAAS,aAAa,KAAK,cAAc,mBACzC,YAAY,GAGhB,QAAQ,MACJ,UAEQ,KAAM,SACN,MAAO,UAAU,UACjB,KAAM,SACN,MAAO,SAGP,KAAM,OACN,MAAO,UAAU,QACjB,KAAM,SACN,MAAO,UAGP,KAAM,iBAEN,KAAM,SACN,MAAO,SAGP,KAAM,iBAEN,KAAM,SACN,MAAO,SAGP,KAAM,iBAEN,KAAM,SACN,MAAO,SAGP,KAAM,oBACN,MAAO,UAAU,kBACjB,KAAM,SACN,MAAO,SAGP,KAAM,8BACN,MAAO,UAAU,6BACjB,KAAM,SACN,MAAO,SAGP,KAAM,2BACN,MAAO,UAAU,0BACjB,KAAM,SACN,MAAO,SAGP,KAAM,YACN,MAAO,UAAU,UACjB,KAAM,SACN,MAAO,MACP,OAAQ,WACR,YAAa,OACb,eAAgB,0CAGhB,KAAM,cACN,MAAO,UAAU,YACjB,KAAM,SACN,MAAO,MACP,OAAQ,WACR,YAAa,OACb,eAAgB,4CAGhB,KAAM,UAAW,MAAO,UAAU,WAAY,KAAM,SAAU,MAAO,MACrE,SAAU,yDAGlB,YACA,QAAS,aAAa,KAAK,cAAc,aACzC,YAAY,GAGT,QAxbX,GAAA,MAAA,QAAA,oDACA,KAAA,QAAA,oDA0bA,OAAA,QACK,WAAW,kCAAmC,iCAC9C,QAAQ,yCAA0C;;;+FC3bvD,QAAS,iBAAgB,OAAQ,OAAQ,QAAS,QAAS,UAAW,cAElE,GAAI,YAAa,OAAO,YACpB,UACK,KAAM,QAAS,MAAO,UAAU,SAAU,KAAM,SAC7C,SAAA,ydAQR,WAEQ,MAAO,UAAU,QACjB,KAAM,aACN,QAAS,SAAA,SAAA,OAAY,QAAQ,WAC7B,OAAQ,SAAA,SACJ,QAAQ,cAAgB,QAAQ,MAChC,QAAQ,WAAY,KAIxB,MAAO,UAAU,UACjB,KAAM,cACN,QAAS,SAAA,SAAA,OAAY,QAAQ,WAC7B,OAAQ,SAAU,SACd,QACI,UAAU,eACV,UAAU,mBACT,KAAK,WACF,QAAQ,OAAO,QAAQ,IAClB,KAAK,WACF,OAAO,WAAW,UAClB,OAAO,iBAM3B,MAAO,UAAU,QACjB,KAAM,iBACN,QAAS,SAAA,SAAA,MAAW,SAAQ,WAC5B,OAAQ,SAAA,SACJ,MAAG,SAAQ,MACA,QAAQ,OAAO,SACjB,KAAK,SAAA,QACH,QAAQ,GAAK,OAAO,GACpB,QAAQ,OAAO,EACf,QAAQ,WAAY,QAE/B,SAAQ,OAAO,QAAQ,GAAI,SACtB,KAAK,WAAA,MAAK,SAAQ,WAAY,OAIvC,MAAO,UAAU,UACjB,KAAM,cACN,QAAS,SAAA,SAAA,MAAY,SAAQ,WAC7B,OAAQ,SAAA,SACJ,MAAG,SAAQ,MACA,WAAW,WAAW,UAEjC,QAAQ,WAAY,OACpB,QAAQ,MAAQ,QAAQ,mBAIpC,QAAS,aAAa,KAAK,KAAK,MAGpC,QAAO,OAAS,WACZ,WAAW,SAAS,MAAO,GAAI,WAAW,EAAM,OAAO,KA3E/D,GAAA,MAAA,QAAA,mDAiFA,OAAA,QAAU,WAAW,kBAAmB;;;+FC/ExC,QAAS,4BAA2B,OAAQ,OAAQ,kBAAmB,QAAS,aAAc,UAAW,SACrE,iCACA,kCAChC,OAAO,YACH,UACK,KAAM,SAAU,MAAO,UAAU,QAAS,MAAO,MAAO,KAAM,OAAQ,SAAU,kBAChF,KAAM,aAAc,MAAO,UAAU,eAAgB,KAAM,SAAU,MAAO,UAEzE,KAAM,kBACN,MAAO,UAAU,kBACjB,KAAM,gBACN,SAAU,2BAGV,KAAM,SACN,MAAO,UAAU,UACjB,KAAM,uBACN,SAAU,yBACV,MAAO,QAGf,WAEQ,MAAO,UAAU,QACjB,KAAM,aACN,OAAQ,SAAU,SACd,iCAAiC,MAAM,GAAI,QAAQ,KAC9C,KAAK,WACF,OAAO,UACP,OAAO,WAAW,eAK9B,MAAO,UAAU,UACjB,KAAM,cACN,OAAQ,SAAU,SACd,QACI,UAAU,0BACV,UAAU,mBACT,KAAK,WACF,kBAAkB,OAAO,QAAQ,IAC5B,KAAK,WACF,OAAO,UACP,OAAO,WAAW,YAErB,MAAM,SAAA,QAAA,MAAU,QAAO,MAAM,OAAO,KAAK,iBAMlE,QAAS,aAAa,KAAK,eAAe,MAC1C,YAAY,EACZ,SAAU,SAGd,OAAO,kBACH,UACK,KAAM,SAAU,MAAO,UAAU,UAAW,MAAO,MAAO,KAAM,WAChE,KAAM,OAAQ,MAAO,UAAU,QAAS,KAAM,OAAQ,MAAO,QAC7D,KAAM,cAAe,MAAO,UAAU,eAAgB,KAAM,SAAU,MAAO,QAE1E,KAAM,SACN,MAAO,UAAU,UACjB,KAAM,SACN,MAAO,MACP,OAAQ,WACR,SAAU,2BAGlB,WACI,MAAO,UAAU,SACjB,KAAM,cACN,OAAQ,SAAA,SAAA,MAAW,UAAS,eAAgB,GAAI,QAAQ,QAE5D,SAAU,QACV,QAAS,IAGb,OAAO,iBAAmB,SAAA,SACtB,OAAO,iBAAiB,QAAU,aAAa,KAAK,OAAO,IAAI,QAAQ,KAG3E,OAAO,OAAS,WACZ,iCAAiC,OAC5B,KAAK,WACF,OAAO,UACP,OAAO,WAAW,aA1FlC,GAAA,MAAA,QAAA,mDA+FA,OAAA,QAAU,WAAW,6BAA8B;;;AC/FnD,oFAEe,SAAU,OAAQ,UAAW,cACxC,OAAO,UACP,OAAO,SAAU,EAEjB,UAAU,QAAQ,aAAa,IAAI,KAAK,SAAA,QACpC,OAAO,OAAS,OAChB,OAAO,SAAU;;;ACRzB,ksBAEqB,wCACjB,QAAA,8BAAY,OAAQ,YAAa,gBAAiB,UAAU,gBAAA,KAAA,8BACxD,KAAK,OAAS,OACd,KAAK,YAAc,YACnB,KAAK,gBAAkB,gBACvB,KAAK,SAAW,SAEhB,OAAO,cACH,QAAS,GACT,QAAS,IAGb,OAAO,UAAW,EAClB,OAAO,KAAO,KAAK,KAAK,KAAK,MAE7B,OAAO,uFAIN,MAAM,GAAA,OAAA,IACP,OAAI,MAAK,SACE,KAAK,YAAY,SAAS,OACrC,KAAK,OAAO,UAAW,MAEvB,MAAK,gBAAgB,OAAO,KAAK,OAAO,cACnC,KAAK,SAAA,QACF,MAAK,OAAO,MAAM,wBAAyB,QAC3C,MAAK,SAAS,UAEjB,MAAM,SAAA,KAAA,MAAO,OAAK,OAAO,OAAS,MAClC,QAAQ,WAAA,MAAK,OAAK,OAAO,UAAW,yDA9B5B;;;+FCArB,QAAS,0BAAyB,OAAQ,OAAQ,UAAW,QAAS,SACpC,iBACA,gCACA,iCAG9B,OAAO,YACH,UACK,KAAM,OAAQ,MAAO,UAAU,QAAS,MAAO,QAAS,KAAM,WAC9D,KAAM,QAAS,MAAO,UAAU,SAAU,KAAM,WAE7C,KAAM,WACN,MAAO,UAAU,eACjB,KAAM,aACN,MAAO,QACP,SAAA,8MAMR,WAEQ,MAAO,UAAU,QACjB,KAAM,sBACN,KAAM,aACN,OAAQ,SAAU,SACd,gCAAgC,MAAM,GAAI,QAAQ,KAC7C,KAAK,WAAA,MAAM,QAAO,WAAW,eAItC,MAAO,UAAU,UACjB,KAAM,cACN,OAAQ,SAAU,SACd,QACI,UAAU,yBACV,UAAU,mBACT,KAAK,WACF,iBAAiB,OAAO,QAAQ,IAC3B,KAAK,WACF,OAAO,UACP,OAAO,WAAW,YAErB,MAAM,SAAC,QAAD,MAAY,QAAO,OAAS,SAClC,QAAQ,WAAA,MAAM,QAAO,UAAW,SAMzD,QAAS,iBAAiB,IAAI,QAGlC,OAAO,OAAS,WAAA,MAAM,iCAAgC,OACjD,KAAK,WAAA,MAAM,QAAO,WAAW,aAzDtC,GAAA,MAAA,QAAA,mDA4DA,OAAA,QAAU,WAAW,2BAA4B;;;+FC1DjD,QAAS,sBAAqB,OAAQ,OAAQ,UAAW,QAAS,aAAc,SAClD,qBAAsB,aACtB,4BACA,6BAC1B,OAAO,UACP,OAAO,uBAEP,OAAO,YACH,UAEQ,KAAM,QACN,MAAO,UAAU,SACjB,KAAM,SACN,SAAA,ydASR,WAEQ,MAAO,UAAU,QACjB,KAAM,aACN,QAAS,SAAA,SAAA,OAAY,QAAQ,WAC7B,OAAQ,SAAA,SACJ,QAAQ,cAAgB,QAAQ,MAChC,QAAQ,WAAY,KAIxB,MAAO,UAAU,QACjB,KAAM,iBACN,QAAS,SAAA,SAAA,MAAW,SAAQ,WAC5B,OAAQ,SAAA,SACC,QAAQ,OAEb,qBAAqB,OAAO,QAAQ,GAAI,SACnC,KAAK,WAAA,MAAM,SAAQ,WAAY,OAIxC,MAAO,UAAU,UACjB,KAAM,cACN,QAAS,SAAA,SAAA,MAAW,SAAQ,WAC5B,OAAQ,SAAA,SACJ,QAAQ,MAAQ,QAAQ,cACxB,QAAQ,WAAY,KAIhC,YAAY,EACZ,YAAY,EACZ,UAAU,EACV,SAAU,QACV,QAAS,qBAAqB,IAAI,OAClC,OAAQ,SAAA,MAAA,MAAQ,MAAK,UAAW,IAGpC,OAAO,SAAU,EACjB,OAAO,gBAAiB,EAExB,OAAO,iBAAmB,SAAC,SACvB,OAAO,QAAqB,MAAX,SAA0B,QAC3C,OAAO,oBAAoB,QAAU,aAAa,IAAI,OAAO,QAAQ,KAGzE,OAAO,gBAAkB,WACrB,4BAA4B,MAAM,WAAY,OAAO,QAAQ,KACxD,KAAK,WACF,OAAO,oBAAoB,UAC3B,OAAO,aAInB,OAAO,qBACH,UACK,KAAM,OAAQ,MAAO,UAAU,QAAS,MAAO,QAAS,KAAM,WAC9D,KAAM,QAAS,MAAO,UAAU,SAAU,KAAM,WAErD,WAEQ,MAAO,UAAU,QACjB,KAAM,aACN,OAAQ,SAAU,SACd,4BAA4B,MAAM,GAAI,QAAQ,KACzC,KAAK,WACF,OAAO,oBAAoB,UAC3B,OAAO,eAKnB,MAAO,UAAU,UACjB,KAAM,cACN,OAAQ,SAAU,SACd,QACI,UAAU,oBACV,UAAU,mBACT,KAAK,WACF,aAAa,OAAO,QAAQ,IACvB,KAAK,WACF,OAAO,oBAAoB,UAC3B,OAAO,YAEV,MAAM,SAAC,KAAD,MAAS,QAAO,OAAS,WAMxD,QAAS,GACT,SAAU,SApHlB,GAAA,MAAA,QAAA,mDAwHA,OAAA,QAAU,WAAW,uBAAwB;;;+FCtH7C,QAAS,iCAAgC,OAAQ,OAAQ,UAAW,QAC3B,wBACA,2BACA,yCACA,uCACA,wCAGrC,GAAI,WACC,KAAM,OAAQ,MAAO,UAAU,QAAS,MAAO,QAAS,KAAM,WAC9D,KAAM,QAAS,MAAO,UAAU,SAAU,KAAM,WAE7C,KAAM,cACN,MAAO,UAAU,gBACjB,KAAM,cACN,MAAO,QACP,SAAU,gCAGV,KAAM,cACN,MAAO,UAAU,gBACjB,KAAM,cACN,MAAO,QACP,SAAU,gCAGV,KAAM,WACN,MAAO,UAAU,eACjB,KAAM,aACN,MAAO,QACP,SAAA,8MAOJ,WAEI,MAAO,UAAU,QACjB,KAAM,8BACN,KAAM,aACN,OAAQ,SAAU,SACd,uCAAuC,MAAM,GAAI,QAAQ,KACpD,KAAK,WACF,OAAO,WAAW,eAK9B,MAAO,UAAU,UACjB,KAAM,cACN,OAAQ,SAAU,SACd,QACI,UAAU,iCACV,UAAU,mBACT,KAAK,WACF,wBAAwB,OAAO,QAAQ,IAClC,KAAK,WACF,OAAO,UACP,OAAO,WAAW,YAErB,MAAM,SAAC,QAAD,MAAY,QAAO,OAAS,SAClC,QAAQ,WAAA,MAAM,QAAO,UAAW,QAOzD,QAAO,SAAU,EAEjB,OAAO,YACH,QAAS,QACT,SAAU,SACV,QAAS,wBAAwB,IAAI,OACrC,YAAY,EACZ,SAAU,SAGd,OAAO,2BAA6B,SAAA,SAChC,OAAO,kCAAkC,QACrC,2BAA2B,IAAI,OAAO,QAAQ,IAClD,OAAO,QAAU,SAGrB,OAAO,2BAA6B,WAChC,uCAAuC,OAClC,KAAK,WACF,OAAO,WAAW,aAI9B,OAAO,mCACH,UACK,KAAM,OAAQ,MAAO,UAAU,QAAS,KAAM,WAC9C,KAAM,QAAS,MAAO,UAAU,SAAU,KAAM,SAAU,MAAO,QAE9D,KAAM,WACN,MAAO,UAAU,eACjB,KAAM,aACN,SAAA,8MAMR,WAEQ,MAAO,UAAU,QACjB,KAAM,8BACN,KAAM,aACN,OAAQ,SAAA,SACJ,yCAAyC,MACrC,qBAAsB,OAAO,QAC7B,0BAA2B,QAAQ,GACnC,SAAU,SAET,KAAK,WAAA,MAAM,QAAO,kCAAkC,eAI7D,MAAO,UAAU,UACjB,KAAM,cACN,OAAQ,SAAC,SACL,QACI,UAAU,oCACV,UAAU,mBACT,KAAK,WACF,2BAA2B,OAAO,QAAQ,IACrC,KAAK,WACF,OAAO,UACP,OAAO,kCAAkC,YAE5C,MAAM,SAAC,QAAD,MAAY,QAAO,OAAS,cAM3D,QAAS,GACT,SAAU,SAGd,OAAO,8BAAgC,WACnC,yCAAyC,MACrC,qBAAsB,OAAO,QAC7B,SAAU,WAET,KAAK,WAAA,MAAM,QAAO,kCAAkC,aAvJjE,GAAA,MAAA,QAAA,mDA2JA,OAAA,QACK,WAAW,kCAAmC;;;+FCzJnD,QAAS,gBAAe,OAAQ,eAAgB,SAAU,WAAY,UAC9C,oCACA,mCAEpB,GAAI,SAAU,eAAe,KAE7B,OAAK,SAAQ,cAGb,OAAO,OAAS,SAAA,GAEZ,QAAQ,IAAI,IAGhB,OAAO,KAAO,WAAA,MAAM,QAAO,WAAa,OAAO,WAE/C,WAAW,oBACN,KAAK,SAAA,QACF,GAAI,OAAQ,GAAA,OAAA,QAAe,OAAO,MAAM,eAEpC,QAAU,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAChF,QAAO,OAAS,MAAM,OAAO,SAAA,MAAA,MAAQ,MAAK,YAAW,UAErD,OAAO,gBAAkB,GAAA,OAAA,QAAe,QAAQ,eAC3C,KAAK,OAAO,OAAO,QACnB,OAAO,SAAA,GAAA,OAAO,MAAO,EAAG,MAAO,OAAO,OAAO,OAAO,QAAQ,OAC5D,UAEL,OAAO,KAAO,MAAM,OAAO,SAAA,MAAA,MAAQ,UAAS,KAAK,SAAQ,YAGjE,WAAW,qBACN,KAAK,SAAA,QACF,GAAI,OAAQ,GAAA,OAAA,QAAe,QAAQ,eAE/B,QAAU,MACT,MAAM,SAAA,MAAA,MAA2B,UAAnB,KAAK,aACnB,OAAO,SAAA,MAAA,MAAQ,MAAK,SACpB,UAED,SAAW,MACV,MAAM,SAAA,MAAA,MAA2B,WAAnB,KAAK,aACnB,OAAO,SAAA,MAAA,MAAQ,MAAK,SACpB,SAEL,QAAO,mBACH,QAAS,UAGb,OAAO,OAAS,MACX,SAAS,SAAA,MAAA,MAAQ,MAAK,YACtB,OAAO,SAAA,MAAA,MAAQ,MAAK,YACpB,SAEL,IAAI,QAAS,GAAA,OAAA,QAAe,SAAS,eAAe,MAChD,QAAU,GAAA,OAAA,QAAe,UAAU,eAAe,MAClD,MAAQ,OAAS,QACjB,cAA0B,IAAT,OAAgB,MACjC,eAA4B,IAAV,QAAiB,KAEvC,QAAO,uBAAyB,OAAA,OAAQ,QAAA,QAAS,cAAA,cAAe,eAAA,kBAGxE,OAAO,qBACP,OAAO,UAEP,OAAO,QAAU,UAAU,UAAW,UAAU,YAEhD,OAAO,kBAAoB,QAAS,aAAc,QAAS,aAE3D,OAAO,SACH,QACI,QAEQ,GAAI,WACJ,KAAM,SACN,SAAS,EACT,SAAU,SAGV,GAAI,WACJ,KAAM,SACN,SAAS,EACT,SAAU,YAM1B,OAAO,QACP,OAAO,UAEP,WAAW,eAAe,KAAK,SAAA,QAAA,MAAU,QAAO,UAAY,SAE5D,OAAO,cAAgB,WACnB,oCAAoC,OAC/B,KAAK,SAAC,QACH,OAAO,UACP,SAAS,iBACL,GAAI,OAAO,QAK3B,OAAO,cAAgB,WACnB,kCAAkC,OAC7B,KAAK,SAAC,QACH,SAAS,WAAY,KAAM,gBAIvC,OAAO,YAAc,WACZ,OAAO,eAEZ,WAAW,YAAY,OAAO,eACzB,KAAK,SAAA,QAAA,MAAU,UAAS,iBAAkB,GAAI,OAAO,UA5GnD,SAAS,sBAVxB,GAAA,MAAA,QAAA,oDACA,KAAA,QAAA,oDAsOA,OAAA,QAAU,WAAW,iBAAkB;;;+FCrOvC,QAAS,uBAAsB,OAAQ,UAAW,WAAY,SAAU,aAAc,SAClF,OAAO,UAEP,OAAO,kBACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,OAAO,QAGtC,QACI,KAAM,SAId,OAAO,eAAiB,SAAC,SACrB,OAAO,WAAW,QAAU,aAAa,KAAK,QAAQ,eAAe,QAAQ,KAGjF,OAAO,SAAS,EAChB,OAAO,iBAAmB,SAAA,SAAA,MAAW,QAAO,QAAU,SAEtD,OAAO,YACH,UACK,KAAM,kBAAmB,MAAO,UAAU,oBAAqB,MAAO,MAAO,KAAM,WACnF,KAAM,gBAAiB,MAAO,UAAU,kBAAmB,KAAM,OAAQ,MAAO,QAE7E,KAAM,cAAe,MAAO,UAAU,eAAgB,KAAM,SAAU,MAAO,MAC7E,SAAU,mEAGlB,YACA,YAAY,GAGhB,OAAO,UAAW,EAElB,OAAO,OAAS,SAAC,SAEb,QACI,UAAU,kBACV,UAAU,iBACZ,KAAK,WACH,OAAO,UAAW,EAElB,WAAW,KAAK,QAAQ,IACnB,KAAK,SAAC,QACH,QACI,UAAU,yCACV,UAAU,cACV,WACF,KAAK,WACH,SAAS,iBAAkB,GAAI,OAAO,SAG7C,QAAQ,WAAA,MAAK,QAAO,UAAW,OAI5C,OAAO,mBAAqB,WACxB,SAAS,iBAAkB,GAAI,OAAO,MAAM,oBA/DpD,GAAA,MAAA,QAAA,mDAmEA,OAAA,QACK,WAAW,wBAAyB;;;+FClEzC,QAAS,6BAA4B,OAAQ,OAAQ,QAAS,aAAc,UAAW,SAClD,8BACA,2BACjC,OAAO,YACH,UACK,KAAM,YAAa,MAAO,UAAU,SAAU,KAAM,WACpD,KAAM,QAAS,MAAO,UAAU,SAAU,KAAM,WAChD,KAAM,YAAa,MAAO,UAAU,eAAgB,KAAM,WAC1D,KAAM,YAAa,MAAO,UAAU,aAAc,KAAM,WACxD,KAAM,UAAW,MAAO,UAAU,aAAc,KAAM,WACtD,KAAM,UAAW,MAAO,UAAU,WAAY,KAAM,WAEzD,YACA,QAAS,aAAa,KAAK,QAAQ,oBACnC,QAAS,KACT,YAAY,EACZ,YAAY,EACZ,UAAU,EACV,UAAU,EACV,SAAU,SAGd,OAAO,iBAAkB,EAEzB,OAAO,mBACH,UACK,KAAM,kBAAmB,MAAO,UAAU,oBAAqB,KAAM,SAAU,MAAO,QACtF,KAAM,gBAAiB,MAAO,UAAU,kBAAmB,KAAM,OAAQ,MAAO,QAI7E,KAAM,UAAW,MAAO,UAAU,WAAY,KAAM,UAAW,MAAO,MACtE,SAAU,oDAEb,KAAM,YAAa,MAAO,UAAU,UAAW,KAAM,SAAU,MAAO,MAAO,SAAU,8BAEpF,KAAM,gBAAiB,MAAO,UAAU,gBAAiB,KAAM,UAAW,MAAO,MACjF,SAAU,+DAEb,KAAM,cAAe,MAAO,UAAU,QAAS,KAAM,SAAU,MAAO,QAEnE,KAAM,cAAe,MAAO,UAAU,eAAgB,KAAM,SAAU,MAAO,MAC7E,SAAU,oEAGlB,YACA,YAAY,EACZ,QAAS,GACT,SAAU,SAGd,OAAO,SAAU,EAEjB,OAAO,cAAgB,SAAA,SACnB,OAAO,QAAU,QACjB,OAAO,kBAAkB,QAAU,aAAa,KAAK,QAAQ,WAAW,QAAQ,QAGpF,OAAO,gBAAgB,EAEvB,OAAO,gBAAkB,SAAA,SACrB,OAAO,eAAiB,SAG5B,OAAO,YAAc,WACjB,GAAI,SAAU,OAAO,cAErB,OAAI,SAAQ,OACD,OAAO,MAAM,UAAU,wCAElC,2BAA0B,MAAM,GAAI,QAAQ,KACvC,KAAK,WACF,OAAO,UACP,OAAO,kBAAkB,aAIrC,OAAO,YAAc,WACjB,GAAI,SAAU,OAAO,cAErB,+BACK,MACG,GAAI,QAAQ,MApF5B,GAAA,MAAA,QAAA,mDAyFA,OAAA,QAAU,WAAW,8BAA+B;;;+FCtFpD,QAAS,wBAAuB,OAAQ,aAAc,YAElD,GAAI,IAAK,aAAa,EACtB,QAAO,QACP,OAAO,eAAgB,EAEvB,WAAW,qBAAqB,IAC3B,KAAK,SAAC,QACH,OAAO,KAAO,OACd,OAAO,eAAgB,IAZnC,GAAA,MAAA,QAAA,oDACA,QAAA,QAAA,kDAgBA,OAAA,QAAU,WAAW,yBAA0B;;;+FCf/C,QAAS,4BAA2B,OAAQ,UAAW,QAAS,SAAU,mBAAoB,aAAc,OAAQ,OAAQ,UACxH,OAAO,UACP,OAAO,oBAAqB,EAE5B,OAAO,kBACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,OAAO,QAGtC,QACI,KAAM,SAId,OAAO,eAAiB,SAAC,SACrB,OAAO,kBAAkB,QAAU,aAAa,KAAK,QAAQ,eAAe,QAAQ,KAGxF,OAAO,YACH,UAEQ,KAAM,QAAS,MAAO,UAAU,SAAU,MAAO,MAAO,KAAM,SAC9D,SAAU,uDAGlB,WAEQ,MAAO,UAAU,eACjB,OAAQ,SAAC,SACL,QACI,UAAU,kBACV,UAAU,gBACZ,KAAK,WACH,mBAAmB,cAAc,QAAQ,IACpC,KAAK,SAAC,QACH,QACI,UAAU,yCACV,UAAU,cACV,WACF,KAAK,WACH,SAAS,iBAAkB,GAAI,OAAO,SAG7C,MAAM,SAAC,QAAD,MAAW,QAAO,OAAS,cAKtD,QAAS,aAAa,KAAK,gBAAgB,SAC3C,SAAU,SAGd,OAAO,mBACH,UACK,KAAM,kBAAmB,MAAO,UAAU,UAAW,MAAO,MAAO,KAAM,WACzE,KAAM,gBAAiB,MAAO,UAAU,QAAS,KAAM,OAAQ,MAAO,QAEnE,KAAM,cAAe,MAAO,UAAU,eAAgB,KAAM,SAAU,MAAO,MAC7E,SAAU,mEAGlB,WAEQ,MAAO,UAAU,4BACjB,KAAM,aACN,OAAQ,SAAC,SACL,QACI,MAAO,UAAU,4BACjB,KAAM,UAAU,qCACjB,KAAK,SAAC,YACL,mBAAmB,OAAO,QAAQ,IAAK,MAAO,aACzC,KAAK,WACF,OAAO,UACP,OAAO,WAAW,iBAM1C,QAAS,GACT,SAAU,SArFlB,GAAA,MAAA,QAAA,mDAyFA,OAAA,QAAU,WAAW,6BAA8B;;;+FCtFnD,QAAS,yBAAwB,OAAQ,OAAQ,QAAS,UAAW,SAAU,aAAc,WAAY,aACxE,WAAY,eAAgB,2BAA4B,qBACxD,wCACA,wCACA,0BACA,0BACA,qCACA,OACA,aA0B7B,QAAS,SACL,WAAW,QAAQ,IACd,KAAK,SAAA,QACF,OAAO,QAAU,OAEjB,OAAO,qBAA+C,aAAxB,OAAO,aAErC,IAAI,QAAS,OAAO,qBAEhB,QAAO,QAAQ,cACf,OAAO,KAAO,UACd,OAAO,MAAQ,MACf,OAAO,MAAQ,UAAU,uBAGW,SAAhC,OAAO,QAAQ,eACf,OAAO,KAAO,OACd,OAAO,MAAQ,OACf,OAAO,MAAQ,OAAO,QAAQ,uBAE9B,OAAO,KAAO,QACd,OAAO,MAAQ,QACf,OAAO,MAAQ,OAAO,QAAQ,wBA9ClD,GAAI,IAAK,aAAa,EAEtB,QAAO,UAEP,OAAO,uBACH,KAAM,GACN,MAAO,GACP,MAAO,IAGX,OAAO,SACH,gBAAiB,KACjB,cAAe,KACf,OAAQ,KACR,KAAM,KACN,YAAa,GACb,UACA,YAAa,MAGjB,OAAO,gBAAkB,aAAa,MAAM,cAAc,KAE1D,OAAO,sBAAuB,EA8B9B,QAEA,OAAO,YACH,UAEQ,KAAM,MAAO,MAAO,IAAK,MAAO,OAAQ,KAAM,SAC9C,YAAY,IAGZ,KAAM,kBACN,MAAO,UAAU,kBACjB,KAAM,gBACN,SAAU,6BACV,MAAO,UAGP,KAAM,4BACN,MAAO,UAAU,6BACjB,KAAM,0BACN,SAAU,uCACV,MAAO,UAGP,KAAM,yBACN,MAAO,UAAU,0BACjB,KAAM,uBACN,SAAU,oCACV,MAAO,UAGP,KAAM,UAAW,MAAO,UAAU,WAAY,KAAM,SACpD,MAAO,MACP,SAAU,2DAGV,KAAM,SAAU,MAAO,UAAU,UAAW,MAAO,QAAS,KAAM,SAClE,SAAU,2BACV,YAAa,OACb,eAAgB,uCAGhB,KAAM,WAAY,MAAO,UAAU,YAAa,MAAO,QAAS,KAAM,SACtE,SAAU,6BACV,YAAa,OACb,eAAgB,yCAGxB,WAEQ,MAAO,UAAU,QACjB,KAAM,aACN,OAAQ,SAAU,SACd,wCACK,MACG,UAAW,GACX,GAAI,QAAQ,KAEf,KAAK,WAAA,MAAM,QAAO,WAAW,eAItC,MAAO,UAAU,UACjB,KAAM,cACN,OAAQ,SAAU,SACd,QACI,UAAU,iCACV,UAAU,mBACT,KAAK,WACF,eAAe,OAAO,QAAQ,IACzB,KAAK,WACF,OAAO,UACP,OAAO,WAAW,YAErB,MAAM,SAAC,QAAD,MACH,QAAO,MAAM,OAAO,KAAK,gBAMrD,YAAY,EACZ,YAAY,EACZ,QAAS,eAAe,IAAI,OAAO,IACnC,SAAU,SAGd,OAAO,UAAW,EAElB,OAAO,KAAO,SAAC,MACX,MAAI,MAAK,SACE,YAAY,SAAS,OAEhC,MAAA,QAAW,UAAU,OAAO,QAE5B,OAAO,UAAW,MAElB,YAAW,OAAO,GAAI,OAAO,SACxB,KAAK,WACF,OAAO,YAEV,MAAM,SAAC,QAAD,MAAY,QAAO,OAAS,SAClC,QAAQ,WAAA,MAAM,QAAO,UAAW,MAGzC,OAAO,kBAAoB,WACvB,wCACK,MAAM,UAAW,KACjB,KAAK,SAAA,cACF,OAAO,WAAW,UAClB,OAAO,QAAQ,aAAe,gBAI1C,OAAO,YAAc,WACjB,0BAA0B,MAAM,GAAI,KAC/B,KAAK,WACF,OAAO,UACP,WAIZ,OAAO,YAAc,WACjB,0BAA0B,MAAM,GAAI,KAC/B,KAAK,SAAA,UACF,OAAO,QAAQ,mBAAqB,SACpC,OAAO,aAInB,OAAO,MAAQ,WAAA,MAAM,UAAS,gBAAiB,GAAI,MAEnD,OAAO,YAAc,WACjB,WAAW,QAAQ,OAEnB,IAAI,SAAU,OAAO,kBACrB,4BAA2B,QAAQ,QAAQ,2BACtC,KAAK,SAAC,QACH,WAAW,QAAQ,UAEf,OAAO,cACP,qCAAqC,MACjC,cAAe,QAAQ,GACvB,gBAAiB,QAAQ,gBACzB,qBAAsB,QAAQ,qBAC9B,OAAQ,QAAQ,SAChB,YAAa,QAAQ,QACrB,KAAM,OAAO,QAAQ,OACtB,KAAK,WACJ,OAAO,WAAW,UAClB,OAAO,YAIX,OAAO,MAAM,UAAU,+DAMvC,OAAO,oBAAqB,EAC5B,OAAO,0BAA4B,SAAC,SAChC,OAAO,mBAAqB,SAGhC,OAAO,uBAEP,qBAAqB,eAChB,KAAK,SAAC,QACH,GAAI,MAAO,OAAO,IAClB,QAAO,oBAAsB,OAGrC,OAAO,eAAiB,GAAI,OAAM,KAAK,YACnC,OAAO,EACP,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,IAAI,WAGnC,QACI,KAAM,UAId,OAAO,UAAY,SAAA,OACjB,MAAO,QAAO,QAAQ,MAAO,SA5PnC,GAAA,MAAA,QAAA,oDACA,KAAA,QAAA,oDA+PA,OAAA,QAAU,WAAW,0BAA2B;;;+FC7PhD,QAAS,oBAAmB,OAAQ,UAAW,WAAY,SAAU,OACzC,oCACA,kCACA,4BAExB,OAAO,kBAAmB,EAG1B,OAAO,YACH,KAAM,WACN,UAEQ,KAAM,gBACN,MAAO,UAAU,UACjB,KAAM,gBACN,MAAO,QACP,SAAA,2KAIH,KAAM,kBAAmB,MAAO,UAAU,UAAW,MAAO,QAAS,KAAM,WAC3E,KAAM,gBAAiB,MAAO,UAAU,QAAS,KAAM,OAAQ,MAAO,UAInE,KAAM,cAAe,MAAO,UAAU,eAAgB,KAAM,SAAU,MAAO,MAC7E,SAAU,mEAEb,KAAM,YAAa,MAAO,UAAU,QAAS,MAAO,QAAS,KAAM,WAExE,WAEQ,MAAO,UAAU,QACjB,KAAM,aACN,OAAQ,SAAU,SACd,SAAS,iBACL,GAAI,QAAQ,QAK5B,QAAS,WAAW,IAAI,OACxB,OAAQ,SAAC,GACL,EAAE,YAAc,EAAE,qBACd,EAAE,cACF,EAAE,WAAa,UACf,EAAE,YAAc,MAChB,EAAE,YAAc,UAAU,uBAGH,SAAnB,EAAE,eACF,EAAE,WAAa,OACf,EAAE,YAAc,SAEhB,EAAE,WAAa,QACf,EAAE,YAAc,UAI5B,mBAAoB,2BACpB,eAAgB,SAAC,OACb,OAAO,iBAAmB,QAIlC,OAAO,OAAS,WACZ,oCAAoC,OAC/B,KAAK,SAAC,QACH,OAAO,UACP,SAAS,iBACL,GAAI,OAAO,QAK3B,OAAO,eAAiB,WACpB,kCAAkC,OAC7B,KAAK,SAAC,QACH,OAAO,iBAAmB,OAE1B,OAAO,WAAW,8BAA8B,OAAO,OAAO,WAAW,MACrE,OAAO,QAAQ,OAAO,UAItC,OAAO,iBAAmB,WACtB,OAAO,kBAAmB,EAC1B,OAAO,WAAW,8BACb,OAAO,OAAO,WAAW,MAAO,OAGzC,OAAO,IAAI,oBAAqB,SAAC,KAAM,SACnC,OAAO,WAAW,UAAU,OAAO,oBA/F3C,GAAA,MAAA,QAAA,oDACA,KAAA,QAAA,oDAkGA,OAAA,QACK,WAAW,qBAAsB,oBACjC,QAAQ,6BAA8B,WACnC,MAAO,UAAU,YACb,IAAK,WAAY,MAAO,KAExB,IAAI,UAAW,QAAQ,UAAW,WA2ClC,OAzCA,UAAS,sBAAwB,GAAA,OAAA,QAAe,WAAW,uBACtD,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,yBAA2B,GAAA,OAAA,QAAe,WAAW,0BACzD,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,eAAiB,GAAA,OAAA,QAAe,WAAW,gBAC/C,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,YAAc,GAAA,OAAA,QAAe,WAAW,aAC5C,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,YAAc,GAAA,OAAA,QAAe,WAAW,aAC5C,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,YAAc,GAAA,OAAA,QAAe,WAAW,aAC5C,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,YAAc,GAAA,OAAA,QAAe,WAAW,aAC5C,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,cAAgB,GAAA,OAAA,QAAe,WAAW,eAC9C,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAGE;;;sKClJJ,SAAU,OAAQ,aAAc,qBAAsB,UAAW,WAkD5E,QAAS,oBACL,OAAO,kBAAmB,EAC1B,OAAO,WAAW,QAAQ,SAAA,GAAA,MAAK,GAAE,UAAW,IA+EhD,QAAS,4BAA2B,YAChC,OACI,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,UAAU,cAAc,cAGvD,QACI,KAAM,SAkBlB,QAAS,eAAc,YAEnB,GAAI,UAAW,QAAQ,UAAW,WA2ClC,OAzCA,UAAS,sBAAwB,GAAA,OAAA,QAAe,WAAW,uBACtD,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,yBAA2B,GAAA,OAAA,QAAe,WAAW,0BACzD,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,eAAiB,GAAA,OAAA,QAAe,WAAW,gBAC/C,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,YAAc,GAAA,OAAA,QAAe,WAAW,aAC5C,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,YAAc,GAAA,OAAA,QAAe,WAAW,aAC5C,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,YAAc,GAAA,OAAA,QAAe,WAAW,aAC5C,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,YAAc,GAAA,OAAA,QAAe,WAAW,aAC5C,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,cAAgB,GAAA,OAAA,QAAe,WAAW,eAC9C,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAGE,SA1MX,OAAO,QAAU,aAAa,QAC9B,OAAO,KAAO,OACd,OAAO,QACP,OAAO,gBAAiB,EACxB,OAAO,UAAW,EAClB,OAAO,YAAc,GAErB,OAAO,OAAS,SAAA,QAAA,MAAU,QAAO,eAAiB,QAClD,OAAO,kBAAmB,EAE1B,OAAO,cAEP,OAAO,aAAe,WAClB,kBAEA,IAAI,QAAS,OAAO,eAChB,OAAS,cAAc,OAAO,cAElC,WAAU,OAAO,MAAM,QAClB,KAAK,SAAA,QACF,OAAO,KAAO,OAAO,KACrB,OAAO,WAAW,MAAM,MAAO,OAAO,KAAM,UAAU,EAAM,SAAU,OAAO,cAIzF,OAAO,eAAiB,SAAA,KAAA,MAAO,OAAA,QAAW,OAAO,OAAO,WAAY,MAEpE,OAAO,OAAS,SAAA,QACZ,GAAI,QAAS,cAAc,OAAO,cAIlC,OAHA,QAAO,SAAW,OAAO,SACzB,OAAO,YAAc,OAAO,KAEvB,OAAO,SAKZ,WAAU,OAAO,MAAM,QAClB,KAAK,SAAA,QACF,OAAO,KAAO,OAAO,KACrB,OAAO,KAAO,gBAPlB,OAAO,KAAO,WAWtB,OAAO,aAAe,WAAA,MAAM,QAAO,KAAO,QAE1C,OAAO,iBAAmB,SAAA,KAAA,MAAO,OAAA,QAAW,OAAO,OAAO,aAAc,MAOxE,OAAO,QAAU,WAAA,MAAM,eAAc,OAAO,gBAG5C,OAAO,eACH,MAAO,GACP,UAAW,KACX,UAAW,KACX,QAAS,KACT,QAAS,KACT,yBACA,4BACA,kBACA,eACA,eACA,eACA,eACA,iBACA,cAAe,KACf,cAAe,KACf,kBAAmB,GACnB,qBAAqB,GAGzB,OAAO,gCACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,qBAAqB,QAGpD,QACI,KAAM,SAId,OAAO,mCACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,wBAAwB,QAGvD,QACI,KAAM,SAId,OAAO,wBACP,OAAO,wBACP,OAAO,wBAEP,OAAO,yBACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,cAAc,QAG7C,QACI,KAAM,SAId,qBAAqB,SAChB,KAAK,SAAC,QACH,GAAI,MAAO,OAAO,IAClB,QAAO,oBAAsB,KAE7B,OAAO,qBAAuB,2BAA2B,KAAK,GAAG,IACjE,OAAO,qBAAuB,2BAA2B,KAAK,GAAG,IACjE,OAAO,qBAAuB,2BAA2B,KAAK,GAAG,MAkBzE,OAAO,kBACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,OAAO,aAGtC,QACI,KAAM,SA7JlB,IAAA,MAAA,QAAA;;;oFCAe,SAAU,OAAO,cAC5B,OAAO,SAAW,aAAa;;;+FCCnC,QAAS,yCAAwC,OAAQ,OAAQ,SAAU,aAC1B,aAAc,YACd,2BACA,sBAE7C,GAAI,wBAAyB,aAAa,sBAE1C,QAAO,UACP,OAAO,iBAAmB,aAAa,MAAM,mBAAmB,KAEhE,OAAO,yBACH,uBAAwB,uBACxB,KAAM,GACN,MAAO,GACP,8BAA+B,KAC/B,eAAe,EACf,2BAA4B,KAC5B,2BAA4B,KAC5B,2BAA4B,MAGhC,OAAO,uBAEP,qBAAqB,SAChB,KAAK,SAAC,QACH,OAAO,oBAAsB,OAAO,OAG5C,OAAO,UAAW,EAElB,OAAO,KAAO,SAAC,MACX,MAAI,MAAK,aACL,aAAY,SAAS,OAIzB,OAAO,UAAW,MAElB,4BAA2B,OACvB,uBACA,OAAO,yBACN,KAAK,WACF,OAAO,UACP,SACI,4BACC,uBAAwB,2BAC9B,MAAM,SAAC,QAAD,MAAW,QAAO,OAAS,SACnC,QAAQ,WAAA,MAAK,QAAO,UAAW,MAjD5C,GAAA,MAAA,QAAA,mDAqDA,OAAA,QACK,WAAW,0CAA2C;;;+FCpD3D,QAAS,yCAAwC,OAAQ,OAAQ,SAAU,aAC1B,aAAc,YACd,2BACA,sBAC7C,GAAI,IAAK,aAAa,EAEtB,QAAO,UACP,OAAO,kBAAmB,GAAI,cAAa,MAAM,kBAAmB,KACpE,OAAO,uBAEP,OAAO,yBACH,KAAM,GACN,MAAO,GACP,8BAA+B,KAC/B,eAAe,EACf,2BAA4B,KAC5B,2BAA4B,KAC5B,2BAA4B,KAC5B,UAAU,GAGd,qBAAqB,SAChB,KAAK,SAAC,QACH,OAAO,oBAAsB,OAAO,OAG5C,2BAA2B,QAAQ,IAC9B,KAAK,SAAC,QAAD,MACF,QAAO,wBAA0B,SAEzC,OAAO,UAAW,EAElB,OAAO,KAAO,SAAC,MAEX,MAAI,MAAK,aACL,aAAY,SAAS,OAIzB,OAAO,UAAW,MAElB,4BACK,OAAO,GAAI,OAAO,yBAClB,KAAK,WACF,OAAO,UACP,SAAS,4BACL,uBAAwB,OAAO,wBAAwB,2BAG9D,MAAM,SAAC,QAAD,MAAW,QAAO,OAAS,SACjC,QAAQ,WAAA,MAAK,QAAO,UAAW,MAGxC,OAAO,cAAe,EAEtB,OAAO,SAAW,WACd,OAAO,cAAe,EAEtB,2BAA2B,SAAS,IAC/B,KAAK,WACF,OAAO,UACP,OAAO,wBAAwB,UAAW,IAE7C,MAAM,SAAC,QAAD,MAAW,QAAO,OAAS,SACjC,QAAQ,WAAA,MAAK,QAAO,cAAe,KAI5C,OAAO,gBAAiB,EAExB,OAAO,WAAa,WAChB,OAAO,gBAAiB,EAExB,2BAA2B,WAAW,IACjC,KAAK,WACF,OAAO,UACP,OAAO,wBAAwB,UAAW,IAE7C,MAAM,SAAC,QAAD,MAAW,QAAO,OAAS,SACjC,QAAQ,WAAA,MAAK,QAAO,gBAAiB,KAjFlD,GAAA,MAAA,QAAA,mDAqFA,OAAA,QAAU,WACN,0CACA;;;+FCrFJ,QAAS,oCAAmC,OAAQ,OAAQ,QAAS,SAAU,aAAc,UACjD,4BAExC,GAAI,wBAAyB,aAAa,sBAE1C,QAAO,YACH,UACK,KAAM,OAAQ,MAAO,UAAU,QAAS,MAAO,QAAS,KAAM,WAC9D,KAAM,QAAS,MAAO,UAAU,SAAU,KAAM,WAE7C,KAAM,WACN,MAAO,UAAU,eACjB,KAAM,aACN,MAAO,QACP,SAAU,yJAKlB,WAEQ,MAAO,UAAU,QACjB,KAAM,8BACN,OAAQ,SAAC,SACL,SAAS,iCACL,GAAI,QAAQ,QAKpB,MAAO,UAAU,UACjB,OAAQ,SAAC,SACL,QACI,UAAU,oCACV,UAAU,mBACT,KAAK,WACF,2BAA2B,OAAO,QAAQ,IACrC,KAAK,WACF,OAAO,UACP,OAAO,WAAW,YAErB,MAAM,SAAC,QAAD,MAAW,QAAO,OAAS,cAM1D,QAAS,2BAA2B,IAAI,OAAO,yBAGnD,OAAO,OAAS,WACZ,SAAS,iCACL,uBAAwB,0BAtDpC,GAAA,MAAA,QAAA,mDA2DA,OAAA,QACK,WAAW,qCAAsC;;;+FC1DtD,QAAS,YACL,GAAI,YACA,SAAU,KAAM,gBAChB,SAAU,KAAM,WAChB,QAAS,KAAM,eACf,MAAO,KAAM,aAEjB,QACI,SAAU,IACV,SAAU,sKAKV,OACI,KAAM,KAEV,KAAM,SAAU,MAAO,QAAS,OAC5B,MAAM,KAAO,MAAM,KACnB,MAAM,KAAO,MAAM,KACnB,MAAM,KAAO,UAAU,MAAM,MAAM,OAtB/C,GAAA,MAAA,QAAA,mDA2BA,OAAA,QAAU,UAAU,cAAe;;;+FCzBnC,QAAS,WACL,OACI,SAAU,IACV,YAAa,kCACb,YAAY,EACZ,KAAM,SAAU,MAAO,QAAS,UAPxC,GAAA,MAAA,QAAA,mDAaA,OAAA,QAAU,UAAU,gBAAiB;;;+FCXrC,QAAS,UACL,OACI,SAAU,IACV,YAAa,0CACb,SAAS,EACT,OACI,UAAW,IACX,KAAM,IACN,UAAW,IACX,MAAO,KAEX,KAAM,SAAU,MAAO,QAAS,UAbxC,GAAA,MAAA,QAAA,mDAoBA,OAAA,QAAU,UAAU,eAAgB;;;sKCjBrB,WACX,OACI,SAAU,IACV,SAAU,6CACV,SAAS,EACT,KAAM,QAAA,MAAC,MAAO,QAAS,OACnB,GAAI,KAAM,QACN,QACI,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJ,OAAS,KAAA,SAAc,MAAM,SAC7B,aAAe,GAAA,OAAA,QAAe,QACzB,eACA,KAAK,OAAO,QACZ,UACL,MACI,OAAQ,OACR,WAEQ,KAAM,KAAA,SAAc,MAAM,aAC1B,gBAAiB,aACjB,qBAAsB,gBAIlC,MAAQ,GAAA,SAAA,QAAU,KACd,KAAM,WACN,KAAM,SAzC1B,IAAA,QAAA,QAAA,mDACA,KAAA,QAAA;;;+FCCA,QAAS,YAEL,OACI,YAAY,EACZ,SAAU,IACV,QAAS,UACT,YAAa,4CACb,KAAM,SAAC,MAAO,QAAS,MAAO,SAC1B,GAAI,UAAW,EAAE,SACb,UAAY,SAAS,KAAK,0BAE9B,UAAS,MAAM,WACX,MAAM,OAAO,WACN,QAAQ,YACP,UAAU,YAAY,WACtB,QAAQ,eAAc,KAGtB,UAAU,SAAS,WACnB,QAAQ,eAAc,QAKlC,QAAQ,QAAU,WACV,QAAQ,WACR,UAAU,SAAS,WAEnB,UAAU,YAAY,cA9B1C,GAAA,MAAA,QAAA,mDAqCA,OAAA,QAAU,UAAU,iBAAkB;;;+FC9BtC,QAAS,YACL,OACI,QAAS,UACT,SAAU,IACV,SAAS,EACT,SAAU,kCACV,KAAM,QAAA,MAAU,MAAO,QAAS,MAAO,SACnC,GAAI,UACA,YAAa,MAAM,aACnB,cAAe,MAAM,eACrB,eAAgB,MAAM,gBACtB,gBAAgB,EAChB,OAAQ,WACR,UAAU,EACV,UAAW,EACX,WAAY,KAAA,SAAc,MAAM,aAChC,OAAQ,SAAU,GACd,GAAI,UAAW,KAAK,SAAS,EAAE,KAAK,QACpC,SAAQ,cAAc,SAAS,MAAM,iBACjC,MAAM,MAAM,aACZ,MAAM,MAAM,YAAY,UAE5B,MAAM,UAEV,UAAW,SAAU,GACb,MAAM,MAAM,eACZ,MAAM,MAAM,cAAc,IAIlC,OAAM,eACN,QAAQ,YAAc,MAAM,aAC5B,QAAQ,iBAAmB,MAAM,aAGrC,IAAI,OAAQ,EAAE,SAAS,cAAc,SAAS,KAAK,gBAEnD,OAAM,OAAO,MAAM,QAAS,SAAA,UACxB,MAAM,MAAM,cA7C5B,GAAA,MAAA,QAAA,mDACA,SAAA,cACA,QAAA,cACA,QAAA,cACA,QAAA,eACA,QAAA,kBA8CA,MAAA,QAAU,UAAU,iBAAkB;;;+FCjDtC,QAAS,WACL,OACI,SAAU,IACV,YAAa,2CACb,YAAY,EACZ,SAAS,EACT,SACA,KAAM,SAAU,MAAO,QAAS,OAC5B,GAAI,UAAW,EAAE,SACb,eAAA,mFAC0B,MAAM,aADhC,sDAGA,QAAU,SAAS,UAEoB,IAAvC,SAAS,KAAK,eAAe,QAC7B,SAAS,QAAQ,gBAEwB,GAAzC,SAAS,KAAK,iBAAiB,SAC/B,QAAU,EAAE,oCAAoC,OAAO,SACvD,SAAS,OAAO,YArBhC,GAAA,MAAA,QAAA,mDA4BA,OAAA,QACK,UAAU,gBAAiB,SAC3B,UAAU,uBAAwB,WAC/B,OACI,SAAU,IACV,SAAA,6DACA,YAAY,EACZ,SAAS,KAGhB,UAAU,oBAAqB,WAC5B,OACI,SAAU,IACV,SAAA,iDACA,YAAY,EACZ,SAAS,KAGhB,UAAU,sBAAuB,WAC9B,OACI,SAAU,IACV,SAAA,gDACA,YAAY,EACZ,SAAS;;;ACnDrB,YAEO,SAAS,gBACZ,OACI,SAAU,IACV,YAAa,wCACb,OAAO,EACP,YAAY,EACZ,SAAS,EACT,KAAO,SAAC,MAAO,QAAS,UAMzB,QAAS,oBACZ,OACI,SAAU,IACV,YAAa,6CACb,OAAO,EACP,YAAY,EACZ,SAAS,EACT,KAAO,SAAC,MAAO,QAAS,yEApBhB,aAAA,qBAaA,iBAAA;;;+FCZhB,QAAS,mBACL,OACI,SAAU,IACV,QAAS,UACT,KAAM,SAAU,MAAO,QAAS,KAAM,MAElC,QAAS,iBAAgB,cAMrB,MALoB,IAAhB,aACA,KAAK,aAAa,WAAW,GAE7B,KAAK,aAAa,WAAW,GAE1B,aAGX,KAAK,SAAS,KAAK,mBAlB/B,GAAA,MAAA,QAAA,mDAuBA,OAAA,QAAU,UAAU,UAAW;;;+FCrB/B,QAAS,cACL,OACI,QAAS,UACT,SAAU,IACV,SAAU,yCACV,OAAQ,QAAS,MAPzB,GAAA,MAAA,QAAA,mDAWA,OAAA,QAAU,UAAU,mBAAoB;;;+FCHxC,QAAS,cAAa,UAClB,OACI,SAAU,IACV,QAAS,UACT,SAAU,oBACV,SAAS,EACT,KAAM,SAAU,MAAO,QAAS,MAAO,SACnC,SAAS,WACL,GAAI,SACA,WAAY,MAAM,MAAM,aACxB,OAFS,SAEF,GACH,GAAI,MAAO,EAAE,OAAO,WACpB,MAAS,MAAM,iBAA4C,IAAzB,MAAM,gBAClC,KAAK,MAAM,iBACX,IAEN,OAAM,OAAO,WACT,QAAQ,cAAc,OAElB,MAAM,MAAM,aACZ,MAAM,MAAM,YAAY,SAKpC,OAAM,cAAsC,IAAtB,MAAM,eAC5B,OAAO,YAAc,MAAM,cAE3B,MAAM,gBAA0C,IAAxB,MAAM,iBAC9B,OAAO,cAAgB,MAAM,gBAE7B,MAAM,iBAA4C,IAAzB,MAAM,kBAC/B,OAAO,eAAiB,MAAM,gBAElC,IAAI,WAAW,EAAA,SAAA,SAAE,SAAS,kBAAkB,QACvC,KAAK,oBAEV,OAAM,OAAO,MAAM,QAAS,SAAA,UAAA,MAAY,UAAS,MAAM,gBA7CvE,GAAA,SAAA,QAAA,mDACA,KAAA,QAAA,mDACA,SAAA,cACA,QAAA,cACA,QAAA,cACA,QAAA,eACA,QAAA,sBA+CA,MAAA,QAAU,UAAU,qBAAsB;;;+FCrD1C,GAAA,MAAA,QAAA,mDAEA,OAAA,QAAU,UAAU,UAAW,SAAU,SAAU,QAC/C,OACI,KAAM,SAAU,MAAO,QAAS,OAC5B,GAAI,OAAQ,OAAO,MAAM,QACzB,OAAM,OAAO,MAAO,SAAU,OAC1B,QAAQ,IAAI,SAAU,OAClB,SAAU,GACV,SAAS,WACL,QAAQ,GAAG,SACZ,OAGX,QAAQ,KAAK,OAAQ,WACjB,QAAQ,IAAI,QACZ,MAAM,OAAO,OAAO;;;sKCZrB,SAAU,WAAY,UACjC,OACI,SAAU,IACV,YAAY,EACZ,YAAa,wCACb,OACI,OAAQ,IACR,aAAc,IACd,iBAAkB,KAEtB,KAAM,SAAC,MAAO,QAAS,OAqCnB,QAAS,OAAM,MACN,OAAO,UAEZ,WAAa,QAAQ,UAAW,WAAY,MAE5C,MAAM,WAAY,EAElB,WAAW,IAAI,OAAO,QAAS,YAC1B,KAAK,SAAA,QACF,GAAI,MAAO,OAAO,IAEd,QAAO,QACP,KAAK,QAAQ,MAAM,OAAO,QAE1B,MAAM,gBACN,KAAK,QAAQ,SAAA,MAAA,MAAQ,MAAK,UAAW,IAEzC,MAAM,KAAO,KACb,MAAM,MAAQ,OAAO,MACrB,MAAM,WAAa,OAAO,UAE1B,IAAI,UAAA,IAAe,MAAM,OACrB,MAAA,MAGA,OADA,EAAE,GAAG,UAAU,YAAY,UACnB,EAAE,UAAU,YAGZ,EAAE,UAAU,WAChB,YAAY,EACZ,QAAW,MAAM,OAAO,UAAY,QACpC,QAAQ,EACR,WAAW,EACX,UAAU,EACV,OAAS,IAIjB,SAAS,WAcL,MAAQ,EAAE,UAAU,cAGxB,MAAM,WAAY,KAe9B,QAAS,WAAU,aACf,GAAI,SAAU,OAAO,QAEjB,iBAAmB,GAAA,OAAA,QAAe,SAAS,eAC1C,MAAM,SAAA,GAAA,MAAK,GAAE,OAAS,YAAY,QAClC,SAEL,kBAAiB,QAAQ,SAAA,GAAA,MAAK,OAAA,QAAW,OAAO,QAAS,KAEzD,QAAQ,KAAK,aAEb,MAAM,WAAW,QAGrB,QAAS,cAAa,OAClB,GAAI,SAAU,OAAO,QAEjB,iBAAmB,GAAA,OAAA,QAAe,SAAS,eAC1C,MAAM,SAAA,GAAA,MAAK,GAAE,OAAS,QACtB,SAEL,kBAAiB,QAAQ,SAAA,GAAA,MAAK,OAAA,QAAW,OAAO,QAAS,KAEzD,MAAM,WAAW,QAGrB,QAAS,SAAQ,WACb,KAAK,KAAK,WACV,MAAM,WAAW,QAGrB,QAAS,cACL,MAAA,QAAW,UAAU,MACrB,MAAM,QAAQ,QAAQ,SAAA,GAAA,MAAK,GAAE,YAAc,EAAE,eAGjD,QAAS,kBACL,GAAI,gBAAiB,EAAE,SAAS,KAAK,uBAAuB,MACvD,kBAEL,MAAM,eAAiB,eACvB,MAAM,OAAS,SAAA,MAAA,MAAQ,MAAK,UAAY,KAAK,UAE7C,EAAE,SAAS,KAAK,uBAAuB,UArJ3C,GAAI,OAAQ,MAAM,OAAO,OAAS,KAE9B,OAAS,MAAM,MACnB,OAAM,OAAS,MAAA,QAAK,MAGpB,MAAM,QAAU,MAAM,OAAO,QAC7B,MAAM,MACF,SAA8B,QAAnB,OAAO,UAAgC,OAAO,SACzD,WAAkC,QAArB,OAAO,YAAkC,OAAO,WAC7D,WAAY,OAAO,YAEvB,MAAM,QACN,MAAM,MAAQ,EACd,MAAM,cACN,MAAM,WAAY,EAClB,MAAM,SAA+B,QAAnB,OAAO,UAEnB,OAAO,QAEb,IAAI,UAAW,MAAM,OAAO,QAExB,WAAY,SAAS,OAAS,GAC9B,MAAM,QAAQ,MAAM,SAAA,WAExB,MAAM,SAAU,EAChB,MAAM,OAAS,SAAA,SACN,OAAO,aAEZ,MAAM,QAAU,QAChB,MAAM,kBAAkB,QAAA,YAE5B,MAAM,OAAO,QAAU,WAAA,MAAM,OAAM,WAAW,WAC9C,MAAM,OAAO,QAAU,SAAA,SAAA,MAAW,OAAM,KAAK,QAAQ,UACrD,MAAM,OAAO,WAAa,SAAA,MAAA,MAAQ,OAAA,QAAW,OAAO,MAAM,KAAM,OA6DhE,MAAM,MAAQ,MAEd,MAAM,UAAY,UAClB,MAAM,aAAe,aACrB,MAAM,QAAU,QAChB,MAAM,WAAa,UAEnB,IAAI,SAAU,MAAO,MAAO,YACxB,QACA,YAAc,OAAA,OAAQ,KAAA,KAAM,MAAA,MAgDhC,kBAEA,MAAM,OAAO,iBAAkB,WAAA,MAC/B,OAAM,WAAW,OAAS,MAAM,WAAW,YA1KvD,IAAA,MAAA,QAAA,qDACA,MAAA,QAAA,+CACA,SAAA;;;oFCDe,WACX,OACI,SAAU,IACV,YAAY,EACZ,YAAa,iDACb,OACI,KAAM,eACN,QAAS,kBACT,YAAa,uBAEjB,KAAK,SAAC,MAAO,QAAS,OAClB,GAAI,aAAc,QAAQ,UAAW,MAAM,YAE3C,OAAM,YAAc,SAAC,MACjB,MAAM,KAAK,KAAK,MAChB,MAAM,YAAc,QAAQ,UAAW;;;oFCfxC,WACX,OACI,SAAU,IACV,YAAY,EACZ,SAAS,EACT,YAAa,qDACb,OACI,QAAS,kBACT,KAAM,eACN,YAAa,uBAEjB,KAAK,SAAC,MAAO,QAAS;;;oFCZf,SAAU,oBACrB,OACI,YAAa,+CACb,SAAU,IACV,OACI,UAAW,oBACX,aAAc,uBACd,OAAQ,kBAEZ,KAAM,SAAC,MAAO,QAAS,OACnB,GAAI,cAAA,umBAaJ,OAAM,eACN,MAAM,iBACN,MAAM,WAAwC,MAA3B,MAAM,OAAO,YAA4B,MAAM,OAAO,WAEzE,MAAM,QACF,MAAO,MAAM,OAAO,KACpB,SAAU,KACV,MAAO,MAGX,MAAM,QACF,QAAQ,EAGZ,IAAI,UAAW,mBAAmB,MAAM,OAAO,KAC/C,OAAM,SAAW,SAAS,SAAW,aACrC,MAAM,MAAQ,SAAS,KACvB,MAAM,WAAa,SAAS,WAC5B,MAAM,cAAgB,SAAS,MAEN,UAArB,MAAM,OAAO,OACb,MAAM,OAAO,SAAW,YAE5B,MAAM,cAAgB,SAAC,GACnB,EAAE,iBACF,EAAE,kBACF,MAAM,OAAO,QAAU,MAAM,OAAO,OAEpC,MAAM,WAAW,OAAQ,MAAM,SAC/B,MAAM,aAAe,MAAO,YAGhC,MAAM,OAAS,SAAA,GACX,EAAE,iBACF,EAAE,kBACF,MAAM,OAAO,QAAU,MAAM,OAAO,OAE/B,MAAM,OAAO,QAElB,MAAM,OAAO,MAAQ,KACrB,MAAM,cAAc,MAAO,MAAM,OAAO,QACxC,MAAM;;;oFChEP,WACX,OACI,SAAA,iYAOA,SAAU,IACV,OACI,QAAS,kBACT,WAAY,qBACZ,OAAQ,kBAEZ,KAAM,SAAC,MAAO,QAAS,OACnB,GAAI,OAAQ,MAAM,OAAO,IAEzB,OAAM,MAAQ,MAAO,GAAI,IAAK,IAC9B,MAAM,SAAoC,MAAzB,MAAM,OAAO,UAA0B,MAAM,OAAO,SAErE,MAAM,OAAS,WACX,GAAI,QAAS,EAGT,QADkB,IAAlB,MAAM,KAAK,IACF,MACmB,OAAlB,MAAM,KAAK,IAAe,OAAS,MAGjD,MAAM,aAEN,MAAM,KAAK,MAAQ,MACnB,MAAM,KAAK,IAAM,OAEjB,MAAM,WAAa,MAAO,WAE1B,MAAM,SAAS,KAAM,MAAM,QAG/B,MAAM,OAAO,WAAa,WACtB,MAAM,MAAQ,MAAO,GAAI,IAAK,IAC9B,MAAM;;;+FCvCtB,QAAS,yBAAwB,sBAC7B,OACI,SAAU,IACV,YAAa,oDACb,OACI,iBAAkB,IAClB,iBAAkB,KAEtB,KAAM,SAAU,MAAO,QAAS,OAC5B,MAAM,sBAEN,qBAAqB,eAChB,KAAK,SAAC,QAAD,MAAW,OAAM,oBAAsB,OAAO,OAExD,MAAM,OAAS,SAAC,GACZ,EAAE,iBACF,MAAM,sBAlBtB,GAAA,MAAA,QAAA,mDAwBA,OAAA,QAAU,UAAU,gCAAiC;;;+FCrBrD,QAAS,QAAO,eAAgB,cAC5B,OACI,SAAU,IACV,YAAa,0CACb,SAAS,EACT,OAAO,EACP,KAAM,SAAU,MAAO,QAAS,OAC5B,MAAM,YAAc,aAAa,QAAQ,cAEzC,IAAI,SAAU,eAAe,KAE7B,OAAM,SACF,OAAQ,QAAQ,OAChB,KAAM,aAAa,MAAM,UAAU,WAAW,QAAQ,MACtD,aAAc,QAAQ,eAG1B,EAAA,SAAA,SAAE,SAAS,KAAK,cAChB,EAAA,SAAA,SAAE,SAAS,MAAM,YACb,EAAA,SAAA,SAAE,aAAa,SAAS,SACxB,EAAA,SAAA,SAAE,aAAa,SAAS,gBAG5B,MAAM,IAAI,eAAgB,SAAC,EAAG,MAC1B,eAAe,QAAQ,KAAK,KAC5B,MAAM,QAAQ,KAAO,KAAK,UAG9B,MAAM,IAAI,wBAAyB,SAAC,EAAG,cACnC,eAAe,gBAAgB,aAAa,IAC5C,MAAM,QAAQ,OAAS,aAAa,YAMpD,QAAS,cACL,OACI,SAAU,IACV,YAAa,8CACb,SAAS,EACT,OACI,UAAW,IACX,iBAAkB,KAEtB,YAAY,EACZ,KAAM,SAAU,MAAO,QAAS,QAC5B,EAAA,SAAA,SAAE,gBAAgB,MAAM,SAAU,GAC9B,EAAE,kBACF,EAAA,SAAA,SAAE,YAAY,YAAY,aAG9B,WAAW,MAAM,UAAW,WAKxC,QAAS,YAAW,UAAW,SAC3B,UAAU,QAAQ,SAAU,MACxB,GAAI,MAAM,EAAA,SAAA,SAAE,SAAS,KAAK,WACtB,KAAO,KAAK,MAAQ,OAEpB,IAAK,EAAA,SAAA,SAAE,oCACX,IAAG,OAAO,qBAAqB,OAAO,KAAK,MAC3C,GAAG,KAAK,KAAK,OAAO,iDAChB,gDAAgD,OAAO,MACvD,UAAU,OAAO,OAErB,GAAG,KAAK,KAAK,OAAO,wCAAwC,OAAO,KAAK,QAEpE,KAAK,SAAS,OAAS,IACvB,GAAG,KAAK,KAAK,OAAO,2CACpB,GAAG,OAAO,gCAEV,KAAK,SAAS,QAAQ,SAAU,OAC5B,GAAI,UAAU,EAAA,SAAA,SAAE,YACL,OAAM,MAAQ,MAEzB,SAAQ,OAAO,qBAAqB,OAAO,MAAM,MAKjD,QAAQ,KAAK,KAAK,OAAO,MAAM,OAE/B,GAAG,KAAK,MAAM,OAAO,YAK7B,IAAI,OAAO,MAGf,mCAAkC,EAAA,SAAA,SAAE,UAGxC,QAAS,mCAAkC,UACvC,GAAI,MAAO,SAAU,UACjB,MAAO,UAAS,KAAK,UAGzB,MAAK,oBAAoB,MAAM,SAAU,GACrC,GAAI,WAAW,EAAA,SAAA,SAAE,MAAM,KAAK,OACZ,SAAZ,UAAqC,MAAZ,UAAgC,IAAZ,UAC7C,EAAE,gBAEN,IAAI,QAAS,KAAK,UAClB,QAAO,KAAK,MAAM,YAAY,UAC9B,KAAK,0BAA0B,YAAY,SAE3C,IAAI,eAAe,EAAA,SAAA,SAAE,MAAM,SACvB,MAAQ,aAAa,KAAK,eAAe,EAE7C,OAAa,SAAT,OACA,aAAa,SAAS,cACtB,MAAK,WAAW,KAAK,MAAM,KAAK,cAAc,gBAGvB,SAAvB,MAAM,MAAM,SACZ,OAAO,KAAK,MAAM,KAAK,cAAc,UACrC,OAAO,KAAK,oBAAoB,YAAY,iBAAiB,SAAS,cACtE,OAAO,KAAK,eAAe,YAAY,YAAY,SAAS,cAC5D,aAAa,YAAY,mBACzB,aAAa,YAAY,cACzB,aAAa,SAAS,YACtB,aAAa,SAAS,UACtB,aAAa,KAAK,MAAM,UAAU,OAElC,aAAa,YAAY,iBACzB,aAAa,YAAY,YACzB,aAAa,YAAY,UACzB,aAAa,SAAS,cACtB,aAAa,KAAK,MAAM,QAAQ,UAIxC,EAAA,SAAA,SAAE,8BAA8B,MAAM,WAClC,KAAK,MAAM,SAAS,SAAS,YAAY,UACzC,KAAK,0BAA0B,YAAY,WAC3C,EAAA,SAAA,SAAE,MAAM,SAAS,SAAS,YA9IlC,GAAA,SAAA,QAAA,mDACA,KAAA,QAAA,mDAiJA,OAAA,QACK,UAAU,eAAgB,QAC1B,UAAU,mBAAoB;;;+FCxInC,QAAS,aAAY,SACjB,OACI,QAAS,UACT,SAAU,IACV,SAAS,EACT,SAAU,wCACV,KAAM,SAAU,MAAO,QAAS,MAAO,SAEnC,GAAI,mBAAoB,MAAM,eAAe,qBAE7C,SAAQ,SAAW,SAAU,SAAU,OACnC,GAAI,YAAa,MAAM,MAAM,YAC7B,YAAW,KAAK,MAAO,QACvB,MAAM,MAAM,WAAW,OAClB,KAAK,SAAA,QACF,YAAY,MAAM,YAAY,QAAQ,QAAQ,OAAO,MACrD,QAAQ,cAAc,YAAY,WAI9C,IAAI,UAAA,qOAIM,OAJN,kFAQA,SACI,YAAa,MAAM,aACnB,cAAe,MAAM,eACrB,eAAgB,MAAM,gBACtB,gBAAgB,EAChB,OAAQ,WACR,UAAU,EACV,UAAW,EACX,WAAY,MAAM,MAAM,aACxB,eAAgB,kBAAoB,SAAW,KAC/C,OAAQ,SAAU,GACd,GAAI,UAAW,EAAE,SACb,MAAQ,QAAQ,cAEpB,OAAM,KAAK,SAAS,MAAM,kBAC1B,QAAQ,cAAc,OAElB,MAAM,MAAM,aACZ,MAAM,MAAM,YAAY,UAE5B,MAAM,UAEV,SAAU,SAAU,GAChB,GAAI,UAAW,EAAE,SACb,MAAQ,QAAQ,cAEpB,OAAA,QAAW,OAAO,MAAO,SAAS,MAAM,kBACxC,QAAQ,cAAc,OAElB,MAAM,MAAM,aACZ,MAAM,MAAM,YAAY,UAE5B,MAAM,WAGd,YAAc,EAAE,SAAS,iBAAiB,SAAS,KAAK,mBAE5D,OAAM,OAAO,MAAM,QAAS,SAAA,UACxB,YAAY,MAAM,cA9ElC,GAAA,MAAA,QAAA,oDACA,KAAA,QAAA,oDACA,SAAA,cACA,QAAA,cACA,QAAA,cACA,QAAA,eACA,QAAA,oBAEA,IAAI,WAAY,KAAK,MAAM,aAAa,QAAQ,cAC5C,OAAS,UAAA,OACT,IAAM,UAAA,GA0EV,OAAA,QAAU,UAAU,oBAAqB;;;oFCnFxB,SAAS,UACtB,OACI,SAAU,IACV,KAAM,SAAS,MAAO,QAAS,OAC3B,MAAM,OAAO,MAAM,cAAe,SAAS,SAAU,UACjD,QAAQ,KAAK,UACb,SAAS,QAAQ,YAAY;;;+FCL7C,QAAS,aAAY,UACjB,OACI,SAAU,IACV,YAAY,EACZ,SAAU,8DACV,OACI,SAAU,KAEd,KAAM,SAAC,MAAO,QAAS,OACnB,MAAM,aAAe,MAAM,UAE/B,QAAS,SAAC,MAAO,QAGb,OACI,IAAK,SAAC,MAAO,QAAS,OAGlB,GAAI,UAAW,EAAE,SAAS,KAAK,QAAQ,MAC1B,UAAS,UAAU,MAChC,OAAM,aAAe,MAAM,UAG/B,KAAM,SAAC,MAAO,QAAS,OAER,EAAE,SAAS,KAAK,OAAO,KAAK,iBA3B3D,GAAA,MAAA,QAAA,mDAoCA,OAAA,QAAU,UAAU,oBAAqB;;;+FClCzC,QAAS,WACL,OACI,SAAU,IACV,SAAU,gDACV,SAAS,GANjB,GAAA,MAAA,QAAA,mDAUA,OAAA,QAAU,UAAU,gBAAiB;;;oFCTtB,WACX,OACI,SAAU,IACV,YAAa,0CACb,SAAS,EACT,OACI,QAAW,kBACX,MAAS,gBACT,OAAU,kBAEd,KAAM,SAAC,MAAO,QAAS,OACnB,MAAM,YAAc,EACpB,MAAM,WAAa,GAAI,GAAI,GAAI,KAC/B,MAAM,SAAW,GAEjB,MAAM,OAAS,WACX,GAAI,OACA,MAAO,MAAM,YAAc,GAAM,MAAM,SACvC,KAAM,MAAM,SAEhB,OAAM,SAAS,KAAA,QAGnB,MAAM,OAAO,MAAQ,WACjB,MAAM,YAAc,EACpB,MAAM,UAGV,MAAM,OAAO,QAAU,MAAM,OAE7B,MAAM,OAAO,WAAY,WAAA,MAAK,OAAM,OAAO,UAE3C,MAAM;;;sKC/BH,SAAU,cACrB,OACI,SAAU,IACV,SAAU,cACV,SAAS,EACT,OACI,YAAa,KAEjB,KAAM,SAAC,MAAO,QAAS,QACnB,EAAA,SAAA,SAAE,SAAS,eACP,WAAY,GAAI,OAAM,KAAK,wBACvB,KAAM,aAAa,cAbvC,IAAA,SAAA,QAAA;;;+FCEA,QAAS,SAEL,OACI,YAAY,EACZ,SAAU,IACV,QAAS,UACT,SAAS,EACT,SAAA,iGACA,KAAM,SAAC,MAAO,QAAS,MAAO,SAC1B,GAAI,UAAW,EAAE,QACJ,UAAS,KAAK,uBAE3B,UAAS,KAAK,UAAW,MAAM,QAE/B,SAAS,MAAM,WACX,GAAI,OAAQ,SAAS,KAAK,UAC1B,OAAM,OAAO,WAAA,MAAM,SAAQ,cAAc,aAlBzD,GAAA,MAAA,QAAA,mDA+EA,OAAA,QAAU,UAAU,cAAe;;;+FC3EnC,QAAS,gBAAe,eAAgB,WACpC,OACI,SAAU,IACV,SAAU,0DACV,OACI,WAAY,IACZ,eAAgB,IAChB,qBAAsB,IACtB,YAAa,KAEjB,KAAM,SAAC,MAAO,QAAS,OACnB,GAAI,QAAS,GAAI,YAAW,OAAO,UAC/B,SAAW,GAAI,YAAW,SAAS,YAAY,KAAM,eAAe,GACpE,QAAU,eAAe,MACzB,OAEA,OAAM,gBACN,OAAO,SAAP,4BAA4C,MAAM,gBAEtD,SAAS,WAAW,mBAEpB,SAAS,aAAe,SAAA,GACpB,EAAE,gBAAiB,CAEnB,IAAI,YAAa,EAAE,OAAO,kBAC1B,WAAU,MAAM,SAAU,EAAE,SAAU,KAAM,cAGhD,OAAO,WAAW,UAAU,KAAI,EAAA,YAAA,cAC5B,KAAM,QACN,MAAO,QACP,SAAU,UACV,MAAO,gBAIX,OAAO,WAAW,UAAU,KAAI,EAAA,YAAA,cAC5B,KAAM,OACN,MAAO,OACP,SAAU,UACV,MAAO,QAAQ,KAAK,QAGxB,OAAO,WAAW,UAAU,KAAI,EAAA,YAAA,cAC5B,KAAM,aACN,MAAO,cACP,SAAU,UACV,MAAO,QAAQ,OAAO,QAG1B,OAAO,WAAW,UAAU,KAAI,EAAA,YAAA,cAC5B,KAAM,cACN,MAAO,eACP,SAAU,UACV,MAAO,QAAQ,OAAO,SAG1B,OAAO,WAAW,UAAU,KAAI,EAAA,YAAA,cAC5B,KAAM,cACN,MAAO,eACP,SAAU,UACV,MAAO,MAAM,eAGjB,OAAO,WAAW,UAAU,KAAI,EAAA,YAAA,cAC5B,KAAM,mBACN,MAAO,oBACP,SAAU,UACV,MAAO,MAAM,oBAGjB,KAAK,MAAM,sBAAwB,MAAM,WAEzC,OAAO,QAAQ,OAAQ,OAAQ,MAC/B,OAAO,WAAW,cAClB,SAAS,OAAS,SA/E9B,GAAA,MAAA,QAAA,oDACA,YAAA,QAAA,0BAmFA,OAAA,QAAU,UAAU,uBAAwB;;;+FC7E5C,QAAS,cAAa,gBAClB,OACI,SAAU,IACV,SAAU,wDACV,OACI,WAAY,IACZ,eAAgB,IAChB,YAAa,IACb,iBAAkB,IAClB,qBAAsB,KAE1B,KAAM,SAAU,MAAO,QAAS,OAC5B,GAAI,IAAK,MAAA,QAAK,MACV,QACA,QAAU,eAAe,MACzB,OAAS,GAAI,YAAW,OAAO,UAC/B,OAAS,GAAI,YAAW,OAAO,UAAU,OAAQ,YAAc,IAAI,EAEvE,GAAE,SAAS,KAAK,OAAO,KAAK,KAAM,IAElC,OAAO,SAAP,0BAA0C,MAAM,gBAChD,OAAO,WAAW,IAElB,OAAO,WAAW,UAAU,KAAI,EAAA,YAAA,cAC5B,KAAM,QACN,MAAO,QACP,SAAU,UACV,MAAO,QAAQ,SAGnB,OAAO,WAAW,UAAU,KAAI,EAAA,YAAA,cAC5B,KAAM,OACN,MAAO,OACP,SAAU,UACV,MAAO,QAAQ,KAAK,QAGxB,OAAO,WAAW,UAAU,KAAI,EAAA,YAAA,cAC5B,KAAM,aACN,MAAO,cACP,SAAU,UACV,MAAO,QAAQ,OAAO,QAG1B,OAAO,WAAW,UAAU,KAAI,EAAA,YAAA,cAC5B,KAAM,cACN,MAAO,eACP,SAAU,UACV,MAAO,QAAQ,OAAO,QAG1B,OAAO,WAAW,UAAU,KAAI,EAAA,YAAA,cAC5B,KAAM,cACN,MAAO,eACP,SAAU,UACV,MAAO,MAAM,eAGjB,OAAO,WAAW,UAAU,KAAI,EAAA,YAAA,cAC5B,KAAM,mBACN,MAAO,oBACP,SAAU,UACV,MAAO,MAAM,qBAGjB,EAAA,YAAA,eAAc,QAEd,KAAK,MAAM,sBAAwB,MAAM,WAEzC,OAAO,QAAQ,OAAQ,OAAQ,MAC/B,OAAO,OAAS,SA7E5B,GAAA,MAAA,QAAA,oDACA,KAAA,QAAA,+CACA,YAAA,QAAA,2BAEI,QAAS,EAAA,YAAA,eA8Eb,OAAA,QAAU,UAAU,qBAAsB;;;oFClF3B,WACX,OACI,SAAU,IACV,YAAa,gDACb,SAAS,EACT,KAAM,SAAC,MAAO,QAAS,OACnB,MAAM,cAAgB,WAAA,MAAO,OAAM,MAAM;;;ACNrD,YAEe,SAAS,OAAM,WAAY,UAAW,UAAW,eAAgB,SAAU,aAAc,UACpG,OACI,SAAU,IACV,YAAa,gCAEb,KAAM,SAAU,MAAO,QAAS,OAE5B,GAAI,SAAU,eAAe,KAE7B,OAAM,KAAO,QAAQ,KACrB,MAAM,OAAS,QAAQ,OACvB,MAAM,QAAU,QAEhB,MAAM,wBACF,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,OAAO,QAGtC,QACI,KAAM,SAGd,MAAM,MAAQ,aAAa,MAAM,UAAU,KAE3C,MAAM,OAAO,uBAAwB,SAAA,UAAA,MAAY,gBAAe,gBAAgB,YAChF,MAAM,OAAO,eAAgB,SAAA,UAAA,MAAY,gBAAe,QAAQ,YAEhE,SAAS,WAAA,MAAM,YAAW,sBAAuB,IAEjD,EAAE,kBAAkB,MAAM,WACtB,GAAI,MAAO,EAAE,MAAM,QAAQ,YACvB,OAAS,EAAE,MAAM,KAAK,KACtB,QAAU,KAAK,KAAK,mBACxB,SAAQ,YAAY,KACpB,OAAO,YAAY,iBAAiB,YAAY,mBAChD,KAAK,YAAY,IAAI,YAAY,iBACjC,WAAW,WACP,KAAK,SACL,KAAK,KAAK,cAAc,UACzB,MAIP,EAAE,eAAe,MAAM,WACnB,GAAI,SAAU,EAAE,MAAM,QAAQ,WAC9B,SAAQ,WAIZ,WAAW,SACP,YAAY,EACZ,QAAS,UAAU,mBACnB,MAAO,SAAC,SACJ,WAAW,QAAQ,QAAU,QACvB,QACA,UAAU,mBAEhB,WAAW,QAAQ,YAAa,GAEpC,QAAS,WACL,WAAW,QAAQ,YAAa,6EA/D5B;;;YCsBjB,SAAS,oBACZ,OACI,SAAU,IACV,SAAA,GACA,SAAS,EACT,YAAY,EACZ,OACI,QAAS,IACT,QAAS,IACT,SAAU,KAEd,KAAM,SAAC,MAAO,QAAS,MAAO,KAAM,YAGhC,QAAQ,IAAI,oFAtCT,WACX,OACI,SAAU,IACV,SAAA,gMAMA,SAAS,EACT,YAAY,EACZ,OACI,QAAS,IACT,QAAS,IACT,SAAU,KAEd,KAAM,SAAC,MAAO,QAAS,MAAO,KAAM,YAGhC,QAAQ,IAAI,sBAKR,iBAAA;;;oFCtBD,SAAU,UAAW,UAChC,OACI,SAAU,IACV,YAAa,iDACb,SAAS,EACT,KAAM,SAAC,MAAO,QAAS,OAYnB,QAAS,iBACA,EAAE,QAAQ,SAAS,gBAAkB,EAAE,QAAQ,SAAS,eAEzD,SAAS,OAET,WACI,WACI,SAAS,OAAO,MACjB,MACA,EAAE,QAAQ,SAAS,kBAC1B,SAAS,OACT,WACI,WACI,SAAS,OAAO,MACjB,MAGP,SAAS,WAAW,SA5B5B,MAAM,MAAQ,SAEd,IAAI,UAAW,EAAE,SAAS,KAAK,aAE/B,UAAS,WAAA,MAAK,UAAS,cAEvB,MAAM,IAAI,iBAAkB,WACxB,EAAE,QAAQ,YAAY,eACtB,oBAhBhB,QAAA;;;+FCEA,QAAS,cACL,OACI,SAAU,IACV,YAAa,qCACb,YAAY,EACZ,SAAS,EACT,SACA,KAAM,SAAU,MAAO,QAAS,OAC5B,MAAM,MAAQ,MAAM,QAVhC,GAAA,MAAA,QAAA,mDAeA,OAAA,QAAU,UAAU,mBAAoB;;;+FCbxC,QAAS,cACL,OACI,QAAS,UACT,SAAU,IACV,SAAS,EACT,SAAU,8CAIlB,QAAS,WACL,OACI,QAAS,UACT,SAAU,IACV,SAAS,EACT,SAAU,6CAhBlB,GAAA,MAAA,QAAA,mDAoBA,OAAA,QACK,UAAU,eAAgB,YAC1B,UAAU,gBAAiB;;;+FChBhC,QAAS,YACL,OACI,SAAU,IACV,YAAa,mCACb,SAAS,EACT,OACI,OAAQ,IACR,SAAU,KAEd,KAAM,SAAC,MAAO,QAAS,OACnB,GAAI,SACI,IAAK,UACL,OAAQ,OACR,YAAa,EACb,UAAW,WAGf,SAAW,GAAA,YAAA,QAAa,QAAQ,GAAI,OAExC,UAAS,GAAG,UAAW,SAAU,KAAM,UACnC,MAAM,UAAU,SAAU,SAAS,WACnC,MAAM,WAGV,SAAS,GAAG,QAAS,SAAU,OAC3B,QAAQ,IAAI,WA/B5B,GAAA,MAAA,QAAA,oDAIA,UAAA,QAAA,wDAyFA,OAAA,QAAU,UAAU,iBAAkB;;;+FC3FtC,QAAS,qBACL,OACI,SAAU,IACV,YAAa,4CACb,SAAS,EACT,OACI,OAAQ,MARpB,GAAA,MAAA,QAAA,mDAaA,OAAA,QAAU,UAAU,0BAA2B;;;+FCX/C,QAAS,UACL,MAAO,UAAC,OACJ,MAAK,OAGE,MAAM,SAAS,MAAO,MAFlB,IAMnB,QAAS,cACL,MAAO,QAAO,YAZlB,GAAA,MAAA,QAAA,mDAcA,OAAA,QAAU,OAAO,SAAU,QAE3B,MAAA,QAAU,OAAO,cAAe;;;mEChBhC,IAAI,cAAe,QAAA,gBACf,GAAI,cAAe,aAAa,QAAQ,eAExC,OAAuB,OAAhB,cAIP,gBAAkB,WAClB,MAAO,gBAAiB,YAAc,IAGtC,QACA,aAAc,aACd,gBAAiB,iCAGN;;;qJChBf,IAAA,QAAA,QAAA,kDACA,MAAA,QAAA,+CACA,QAAA,QAAA,qDACA,KAAA,QAAA,oDAEI,QAAU,KAAK,MAAM,aAAa,QAAQ,YAE1C,cACA,MAAA,QAAA,QACA,KAAA,OAAA,QACA,OAAA,SAAA,QACA,QAAS,QAGb,OAAA,QAAU,SAAS,eAAgB,8BAEpB;;;oxBChBf,KAAA,QAAA,qDAEM,gBAEF,QAAA,MAAY,OAAO,gBAAA,KAAA,MACf,KAAK,KAAO,iEAGL,KACP,MAAO,IAAA,OAAA,QAAe,KAAK,MACtB,eACA,OAAO,SAAA,GAAA,MAAG,GAAE,KAAO,MACnB,uCAGF,MACH,MAAO,IAAA,OAAA,QAAe,KAAK,MACtB,eACA,OAAO,SAAA,GAAA,MAAG,GAAE,MAAQ,OACpB,sCAGC,GAAA,OAAA,KACF,MAAQ,MAAM,KAAK,UAEvB,OAAO,IAAA,OAAA,QAAe,OACjB,eACA,OAAO,SAAA,MAAA,MAAO,OAAK,OAAO,QAC1B,wCAIL,MAAO,MAAK,iCAIL;;;qJCpCd,IAAA,WAAA,QAAA,2DACG,QAEJ,OAAM,mBAAqB,WACvB,MAAO,IAAA,YAAA,UACF,IAAK,eAAgB,QAAS,iBAC9B,IAAK,iBAAkB,QAAS,gBAChC,IAAK,WAAY,QAAS,cAInC,MAAM,mBAAqB,WACvB,MAAO,IAAA,YAAA,UACF,IAAK,QAAS,QAAS,WACvB,IAAK,SAAU,QAAS,eAIjC,MAAM,iBAAmB,WACrB,MAAO,IAAA,YAAA,UACF,IAAK,WAAY,QAAS,eAC1B,IAAK,cAAe,QAAS,gBAC7B,IAAK,cAAe,QAAS,YAItC,MAAM,YAAc,WAChB,MAAO,IAAA,YAAA,UACF,IAAK,UAAW,QAAS,aACzB,IAAK,UAAW,QAAS,aACzB,IAAK,aAAc,QAAS,UAC5B,IAAK,UAAW,QAAS,SACzB,IAAK,UAAW,QAAS,WAIlC,MAAM,cAAgB,WAClB,MAAO,IAAA,YAAA,UACF,IAAK,YAAa,QAAS,SAC3B,IAAK,aAAc,QAAS,iBAC5B,IAAK,QAAS,QAAS,eAIhC,MAAM,OAAS,WACX,MAAO,IAAA,YAAA,UACF,KAAK,EAAM,KAAM,kBAAmB,QAAS,kBAC7C,KAAK,EAAO,KAAM,oBAAqB,QAAS,wBAIzD,MAAM,qBAAuB,WACzB,MAAO,IAAA,YAAA,UACF,IAAK,OAAQ,QAAS,QACtB,IAAK,SAAU,QAAS,WAIjC,MAAM,QAAU,WACZ,MAAO,IAAA,YAAA,UACF,IAAK,SAAU,QAAS,gBACxB,IAAK,QAAS,QAAS,mBAIhC,MAAM,SAAW,WACb,MAAO,IAAA,YAAA,UACF,IAAK,EAAG,QAAS,YACjB,IAAK,EAAG,QAAS,aACjB,IAAK,EAAG,QAAS,UACjB,IAAK,EAAG,QAAS,QACjB,IAAK,EAAG,QAAS,UACjB,IAAK,EAAG,QAAS,WACjB,IAAK,EAAG,QAAS,QACjB,IAAK,EAAG,QAAS,SACjB,IAAK,EAAG,QAAS,QACjB,IAAK,GAAI,QAAS,OAClB,IAAK,GAAI,QAAS,SAClB,IAAK,GAAI,QAAS,4BAIZ;;;mEClFf,IAAI,SAAU,WAAA,MAAK,aAEf,sBACA,IAAK,WAAA,MAAK,8BAA8B,OAAO,aAG/C,yBACA,IAAK,WAAA,MAAK,iCAAiC,OAAO,YAClD,0BAA2B,SAAC,wBAAD,MACvB,4DACK,OAAO,UAAW,0BAG3B,eACA,IAAK,WAAA,MAAK,sBAAsB,OAAO,aAGvC,mBACA,IAAK,WAAA,MAAQ,WAAR,0BAGL,WACA,cAAe,SAAC,YAAD,MAAe,8BAA8B,OAAO,UAAW,cAG9E,QACA,IAAK,WAAA,MAAK,qBAAqB,OAAO,aAGtC,gBACA,IAAK,WAAA,MAAK,wBAAwB,OAAO,YACzC,SAAU,SAAC,iBAAD,MAAoB,iDAAiD,OAAO,UAAW,mBAGjG,MACA,IAAK,WAAA,MAAK,YAAY,OAAO,aAG7B,QACA,IAAK,SAAC,YAAD,MAAe,2BAA2B,OAAO,UAAW,aACjE,UAAW,SAAC,YAAD,MAAe,kCAAkC,OAAO,UAAW,aAC9E,SAAU,WAAA,MAAK,oBAAoB,OAAO,aAG1C,SACA,kBAAmB,WAAA,MAAK,wCAAwC,OAAO,YACvE,WAAY,SAAC,OAAD,MAAU,yBAAyB,OAAO,UAAW,QACjE,eAAgB,SAAC,UAAD,MAAa,0BAA0B,OAAO,UAAW,YAGzE,iBACA,OAAQ,WAAA,MAAK,wBAAwB,OAAO,aAG5C,eACA,2BAA4B,WAAA,MAAQ,WAAR,0CAC5B,8BAA+B,WAAA,MAAQ,WAAR,6CAC/B,oBAAqB,WAAA,MAAQ,WAAR,kCACrB,iBAAkB,WAAA,MAAQ,WAAR,+BAClB,iBAAkB,WAAA,MAAQ,WAAR,+BAClB,iBAAkB,WAAA,MAAQ,WAAR,+BAClB,WAAY,WAAA,MAAQ,WAAR,yBAGZ,KACA,OAAQ,WAAA,MAAQ,WAAR,UAGR,SACA,qBAAsB,qBACtB,wBAAyB,wBACzB,cAAe,cACf,kBAAmB,kBACnB,UAAW,UACX,OAAQ,OACR,eAAgB,eAChB,KAAM,KACN,OAAQ,OACR,QAAS,QACT,gBAAiB,gBACjB,cAAe,cACf,IAAK,qBAGM;;;+FCjFf,QAAS,qCAAoC,OAAQ,eAAgB,YAAa,kBAAmB,OAAQ,cAGzG,OAAO,UACP,OAAO,gBACH,OAAQ,GACR,gBAAiB,KACjB,WAAY,KACZ,gBAAiB,MAGrB,OAAO,UAAW,EAElB,OAAO,KAAO,SAAU,MACpB,MAAI,MAAK,SACE,YAAY,SAAS,OAEhC,MAAA,QAAW,UAAU,OAAO,QAC5B,OAAO,UAAW,MAElB,mBAAkB,OAAO,OAAO,gBAC3B,KAAK,SAAU,QACZ,OAAO,UACP,eAAe,MAAM,UAExB,MAAM,SAAC,QAAD,MAAW,QAAO,OAAS,SACjC,QAAQ,WAAA,MAAK,QAAO,UAAW,MAGxC,OAAO,eAAiB,WACpB,GAAI,OAAQ,OAAO,cAEnB,OAAQ,OAAM,iBAAmB,MAAM,WACjC,MAAM,gBAAkB,MAAM,WAAa,EAC3C,MAGV,OAAO,MAAQ,WAAA,MAAK,gBAAe,WAEnC,OAAO,yBACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,cAAc,QAG7C,QACI,KAAM,SAId,OAAO,gBACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,KAAK,QAGpC,QACI,KAAM,SAKlB,QAAS,kCAAiC,WACtC,MAAO,YACH,WAAY,oCACZ,YAAa,8CAxErB,GAAA,MAAA,QAAA,oDACA,KAAA,QAAA,oDA2EA,OAAA,QACK,WAAW,sCAAuC,qCAClD,QAAQ,mCAAoC;;;+FC3EjD,QAAS,qCAAoC,OAAQ,eAAgB,YAAa,kBAAmB,OAAQ,KAAM,cAG/G,GAAI,IAAK,KAAK,EACd,QAAO,UACP,OAAO,gBACH,OAAQ,GACR,gBAAiB,KACjB,WAAY,KACZ,gBAAiB,MAGrB,kBAAkB,QAAQ,IACrB,KAAK,SAAC,QAAD,MAAW,QAAO,eAAiB,SAE7C,OAAO,UAAW,EAElB,OAAO,KAAO,SAAU,MACpB,MAAI,MAAK,SACE,YAAY,SAAS,OAEhC,MAAA,QAAW,UAAU,OAAO,QAE5B,OAAO,UAAW,MAElB,mBAAkB,OAAO,OAAO,gBAC3B,KAAK,SAAU,QACZ,OAAO,UACP,eAAe,MAAM,UAExB,MAAM,SAAC,QAAD,MAAW,QAAO,OAAS,SACjC,QAAQ,WAAA,MAAK,QAAO,UAAW,MAGxC,OAAO,eAAiB,WACpB,GAAI,OAAQ,OAAO,cAEnB,OAAQ,OAAM,iBAAmB,MAAM,WACjC,MAAM,gBAAkB,MAAM,WAAa,EAC3C,MAGV,OAAO,MAAQ,WAAA,MAAK,gBAAe,WAEnC,OAAO,yBACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,cAAc,QAG7C,QACI,KAAM,SAId,OAAO,gBACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,KAAK,QAGpC,QACI,KAAM,SAKlB,QAAS,kCAAiC,WACtC,MAAO,YACH,WAAY,oCACZ,YAAa,8CA7ErB,GAAA,MAAA,QAAA,oDACA,KAAA,QAAA,oDAgFA,OAAA,QACK,WAAW,sCAAuC,qCAClD,QAAQ,mCAAoC;;;+FChFjD,QAAS,oCAAmC,OAAQ,eAAgB,YAAa,iBAAkB,QAG/F,OAAO,UACP,OAAO,eACH,MAAO,GACP,KAAM,GACN,YAAa,IAGjB,OAAO,UAAW,EAElB,OAAO,KAAO,SAAU,MACpB,MAAI,MAAK,SACE,YAAY,SAAS,OAEhC,MAAA,QAAW,UAAU,OAAO,QAE5B,OAAO,UAAW,MAElB,kBAAiB,OAAO,OAAO,eAC1B,KAAK,SAAC,QACH,OAAO,UACP,eAAe,MAAM,UAExB,MAAM,SAAC,QAAD,MAAW,QAAO,OAAS,SACjC,QAAQ,WAAA,MAAK,QAAO,UAAW,MAGxC,OAAO,MAAQ,WAAA,MAAK,gBAAe,WAGvC,QAAS,iCAAgC,WACrC,MAAO,YACH,WAAY,mCACZ,YAAa,6CAtCrB,GAAA,MAAA,QAAA,oDACA,KAAA,QAAA,oDAyCA,OAAA,QACK,WAAW,qCAAsC,oCACjD,QAAQ,kCAAmC;;;+FCzChD,QAAS,oCAAmC,OAAQ,eAAgB,YAAa,iBAAkB,OAAQ,MAGvG,GAAI,IAAK,KAAK,EAEd,QAAO,UACP,iBAAiB,QAAQ,IACpB,KAAK,SAAA,QAAA,MAAU,QAAO,cAAgB,SAE3C,OAAO,UAAW,EAElB,OAAO,KAAO,SAAU,MACpB,MAAI,MAAK,SACE,YAAY,SAAS,OAEhC,MAAA,QAAW,UAAU,OAAO,QAE5B,OAAO,UAAW,MAElB,kBAAiB,OAAO,GAAI,OAAO,eAC9B,KAAK,SAAC,QACH,OAAO,UACP,eAAe,MAAM,UAExB,MAAM,SAAC,QAAD,MAAY,QAAO,OAAS,SAClC,QAAQ,WAAA,MAAM,QAAO,UAAW,MAGzC,OAAO,MAAQ,WAAA,MAAM,gBAAe,WAGxC,QAAS,iCAAgC,WACrC,MAAO,YACH,WAAY,mCACZ,YAAa,6CArCrB,GAAA,MAAA,QAAA,oDACA,KAAA,QAAA,oDAwCA,OAAA,QACK,WAAW,qCAAsC,oCACjD,QAAQ,kCAAmC;;;+FCvChD,QAAS,gCAA+B,KACA,OAAQ,eAAgB,aAAc,aAG1E,OAAO,UACP,OAAO,WACH,MAAO,GACP,KAAM,GACN,YAAa,IAGjB,OAAO,UAAW,EAElB,OAAO,KAAO,SAAU,MACpB,MAAI,MAAK,SACE,YAAY,SAAS,OAEhC,MAAA,QAAW,UAAU,OAAO,QAE5B,OAAO,UAAW,MAElB,cAAa,OAAO,KAAK,WAAY,OAAO,WACvC,KAAK,SAAU,QACZ,eAAe,MAAM,UAExB,MAAM,SAAU,QACb,OAAO,OAAS,SACjB,QAAQ,WAAA,MAAK,QAAO,UAAW,MAG1C,OAAO,MAAQ,WACX,eAAe,WAIvB,QAAS,6BAA4B,WACjC,MAAO,YACH,WAAY,+BACZ,YAAa,yCA1CrB,GAAA,MAAA,QAAA,oDACA,QAAA,QAAA,gEACA,KAAA,QAAA,oDA4CA,OAAA,QACK,WAAW,iCAAkC,gCAC7C,QAAQ,8BAA+B;;;+FC7C5C,QAAS,gCAA+B,KAAM,OAAQ,eAAgB,aAAc,aAGhF,OAAO,UACP,OAAO,WACH,MAAO,GACP,KAAM,GACN,YAAa,IAIjB,aAAa,QAAQ,KAAK,IACrB,KAAK,SAAC,QAAD,MAAW,QAAO,UAAY,SAExC,OAAO,UAAW,EAElB,OAAO,KAAO,SAAU,MACpB,MAAI,MAAK,SACE,YAAY,SAAS,OAEhC,MAAA,QAAW,UAAU,OAAO,QAE5B,OAAO,UAAW,MAGlB,cAAa,OAAO,KAAK,GAAI,OAAO,WAC/B,KAAK,SAAU,QACZ,eAAe,MAAM,UAExB,MAAM,SAAC,QAAD,MAAW,QAAO,OAAS,SACjC,QAAQ,WAAA,MAAK,QAAO,UAAW,MAGxC,OAAO,MAAQ,WAAA,MAAK,gBAAe,WAGvC,QAAS,6BAA4B,WACjC,MAAO,YACH,WAAY,+BACZ,YAAa,yCA1CrB,GAAA,MAAA,QAAA,oDACA,KAAA,QAAA,oDA6CA,OAAA,QACK,WAAW,iCAAkC,gCAC7C,QAAQ,8BAA+B;;;+FC5C5C,QAAS,2CAA0C,OAAQ,eAAgB,wBAAyB,OAAQ,aAExG,OAAO,UACP,OAAO,sBACH,MAAO,GACP,KAAM,GACN,YAAa,KACb,YAAa,KACb,YAAa,IAGjB,OAAO,UAAW,EAClB,OAAO,KAAO,SAAU,MACpB,MAAI,MAAK,aACL,aAAY,SAAS,OAIzB,MAAA,QAAW,UAAU,OAAO,QAE5B,OAAO,UAAW,MAElB,yBAAwB,OAAO,OAAO,sBACjC,KAAK,SAAU,QACZ,OAAO,UACP,eAAe,MAAM,UAExB,MAAM,SAAC,QAAD,MAAW,QAAO,OAAS,SACjC,QAAQ,WAAA,MAAK,QAAO,UAAW,MAGxC,OAAO,MAAQ,WACX,eAAe,WAGnB,OAAO,mBAAqB,eAAA,QAAa,MAAM,qBAC/C,OAAO,mBAAqB,eAAA,QAAa,MAAM,qBAGnD,QAAS,wCAAuC,WAC5C,MAAO,YACH,WAAY,0CACZ,YAAa,oDA9CrB,GAAA,MAAA,QAAA,oDACA,cAAA,QAAA,kFACA,KAAA,QAAA,oDAgDA,OAAA,QACK,WAAW,4CAA6C,2CACxD,QAAQ,yCAA0C;;;+FC/CvD,QAAS,2CAA0C,OACA,eACA,KACA,wBACA,OAAQ,aAEvD,OAAO,UACP,OAAO,sBACH,MAAO,GACP,KAAM,GACN,YAAa,KACb,YAAa,KACb,YAAa,IAGjB,wBAAwB,QAAQ,KAAK,IAChC,KAAK,SAAU,QACZ,OAAO,qBAAuB,SAGtC,OAAO,UAAW,EAClB,OAAO,KAAO,SAAU,MAEpB,MAAI,MAAK,aACL,aAAY,SAAS,OAIzB,MAAA,QAAW,UAAU,OAAO,QAE5B,OAAO,UAAW,MAElB,yBAAwB,OAAO,KAAK,GAAI,OAAO,sBAC1C,KAAK,SAAU,QACZ,OAAO,UACP,eAAe,MAAM,UAExB,MAAM,SAAU,QACb,OAAO,OAAS,SAEnB,QAAQ,WAAA,MAAK,QAAO,UAAW,MAGxC,OAAO,SAAW,WACV,OAAO,qBAAqB,UAGhC,wBAAwB,SAAS,OAAO,qBAAqB,IACxD,KAAK,WACF,OAAO,qBAAqB,UAAW,EACvC,OAAO,YAEV,MAAM,WACH,OAAO,OAAS,IAAI,UAIhC,OAAO,WAAa,WACX,OAAO,qBAAqB,UAGjC,wBAAwB,WAAW,OAAO,qBAAqB,IAC1D,KAAK,WACF,OAAO,qBAAqB,UAAW,EACvC,OAAO,YAEV,MAAM,WACH,OAAO,OAAS,IAAI,UAIhC,OAAO,MAAQ,WAAA,MAAK,gBAAe,WAEnC,OAAO,mBAAqB,eAAA,QAAa,MAAM,qBAC/C,OAAO,mBAAqB,eAAA,QAAa,MAAM,qBAGnD,QAAS,wCAAuC,WAC5C,MAAO,YACH,WAAY,0CACZ,YAAa,oDArFrB,GAAA,MAAA,QAAA,oDACA,cAAA,QAAA,kFACA,QAAA,QAAA,gEACA,KAAA,QAAA,oDAsFA,OAAA,QACK,WACG,4CACA,2CACH,QACG,yCACA;;;+FC5FR,QAAS,sCAAqC,OAAQ,eAAgB,UAAW,aACnC,sBAiG1C,QAAS,wBAAuB,YAC5B,OACI,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,UAAU,cAAc,cAGvD,QACI,KAAM,SAkBlB,QAAS,eAAc,YAEnB,GAAI,UAAW,QAAQ,UAAW,WA2ClC,OAzCA,UAAS,sBAAwB,GAAA,OAAA,QAAe,WAAW,uBACtD,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,yBAA2B,GAAA,OAAA,QAAe,WAAW,0BACzD,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,eAAiB,GAAA,OAAA,QAAe,WAAW,gBAC/C,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,YAAc,GAAA,OAAA,QAAe,WAAW,aAC5C,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,YAAc,GAAA,OAAA,QAAe,WAAW,aAC5C,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,YAAc,GAAA,OAAA,QAAe,WAAW,aAC5C,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,YAAc,GAAA,OAAA,QAAe,WAAW,aAC5C,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAEL,SAAS,cAAgB,GAAA,OAAA,QAAe,WAAW,eAC9C,eACA,OAAO,SAAC,GAAD,MAAO,GAAE,KAChB,UAGE,SAzKX,OAAO,eACH,MAAO,GACP,UAAW,KACX,UAAW,KACX,QAAS,KACT,QAAS,KACT,yBACA,4BACA,kBACA,eACA,eACA,eACA,eACA,iBACA,cAAe,KACf,cAAe,KACf,kBAAmB,GACnB,QACI,MAAO,KACP,SAAU,MAEd,qBAAqB,GAGzB,OAAO,kBACF,IAAK,MAAO,QAAS,UAAU,cAC/B,IAAK,MAAO,QAAS,UAAU,8BAC/B,IAAK,MAAO,QAAS,UAAU,kBAC/B,IAAK,MAAO,QAAS,UAAU,2BAC/B,IAAK,MAAO,QAAS,UAAU,eAGpC,OAAO,QAAU,WACb,GAAI,SACA,QAAS,cACT,KAAM,OAAO,cAGjB,gBAAe,MAAM,SAGzB,OAAO,MAAQ,WAAA,MAAM,gBAAe,WAEpC,OAAO,gCACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,qBAAqB,QAGpD,QACI,KAAM,SAId,OAAO,mCACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,wBAAwB,QAGvD,QACI,KAAM,SAId,OAAO,wBACP,OAAO,wBACP,OAAO,wBAEP,OAAO,yBACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,cAAc,QAG7C,QACI,KAAM,SAId,qBAAqB,SAChB,KAAK,SAAC,QACH,GAAI,MAAO,OAAO,IAClB,QAAO,oBAAsB,KAE7B,OAAO,qBAAuB,uBAAuB,KAAK,GAAG,IAC7D,OAAO,qBAAuB,uBAAuB,KAAK,GAAG,IAC7D,OAAO,qBAAuB,uBAAuB,KAAK,GAAG,MAkBrE,OAAO,kBACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,OAAO,aAGtC,QACI,KAAM,SAqDlB,QAAS,mCAAkC,WACvC,MAAO,YACH,WAAY,qCACZ,YAAa,+CArLrB,GAAA,MAAA,QAAA,oDACA,KAAA,QAAA,oDAwLA,OAAA,QACK,WAAW,uCAAwC,sCACnD,QAAQ,oCAAqC;;;+FCzLlD,QAAS,8BAA6B,OAAQ,eAAgB,KAAM,YAEhE,GAAI,WAAY,KAAK,GACjB,OAAS,OAAO,SAEpB,QAAO,SAAW,SAAC,UACf,WAAW,YAAY,WAAY,SAAU,WACxC,KAAK,WAAA,MAAK,gBAAe,MAAM,YAC/B,MAAM,SAAC,KAAD,MAAQ,QAAS,OAGhC,OAAO,MAAQ,WAAA,MAAK,gBAAe,WAGvC,QAAS,2BAA0B,WAC/B,MAAO,YACH,WAAY,6BACZ,YAAa,4CAnBrB,GAAA,MAAA,QAAA,mDAuBA,OAAA,QACK,WAAW,+BAAgC,8BAC3C,QAAQ,4BAA6B;;;+FCvB1C,QAAS,8BAA6B,OAAQ,eAAgB,YACxB,KAAM,YAExC,GAAI,WAAY,KAAK,EAErB,QAAO,UACP,OAAO,aACH,OAAQ,KACR,KAAM,IAGV,OAAO,UAAW,EAElB,OAAO,KAAO,SAAC,MACX,MAAI,MAAK,SACE,YAAY,SAAS,OAEhC,OAAO,UAAW,MAElB,YAAW,YAAY,UAAW,OAAO,aACpC,KAAK,SAAC,QAAD,MAAW,gBAAe,UAC/B,MAAM,SAAC,QAAD,MAAW,QAAO,OAAS,SACjC,QAAQ,WAAA,MAAK,QAAO,UAAW,MAGxC,OAAO,MAAQ,WAAA,MAAK,gBAAe,WAGvC,QAAS,2BAA0B,WAC/B,MAAO,YACH,WAAY,6BACZ,YAAa,4CAjCrB,GAAA,MAAA,QAAA,mDAqCA,OAAA,QACK,WAAW,+BAAgC,8BAC3C,QAAQ,4BAA6B;;;+FCpC1C,QAAS,8BAA6B,OAAQ,eAAgB,WAAY,OAAQ,aAE9E,OAAO,UACP,OAAO,SACH,gBAAiB,KACjB,cAAe,KACf,YAAa,IAGjB,OAAO,wBAAyB,EAEhC,OAAO,UAAW,EAElB,OAAO,KAAO,SAAU,MACpB,MAAI,MAAK,SACE,YAAY,SAAS,OAEhC,MAAA,QAAW,UAAU,OAAO,QAE5B,OAAO,UAAW,EAEd,OAAO,yBACP,OAAO,QAAQ,gBAAkB,KACjC,OAAO,QAAQ,cAAgB,UAGnC,YAAW,OAAO,OAAO,SACpB,KAAK,SAAC,QACH,OAAO,UACP,eAAe,MAAM,UAExB,MAAM,SAAC,QACJ,OAAO,OAAS,SAEnB,QAAQ,WAAA,MAAM,QAAO,UAAW,MAGzC,OAAO,MAAQ,WAAA,MAAM,gBAAe,WAGxC,QAAS,qCAAoC,WACzC,MAAO,YACH,WAAY,6BACZ,YAAa,uCA9CrB,GAAA,MAAA,QAAA,oDACA,KAAA,QAAA,oDAiDA,OAAA,QACK,WAAW,+BAAgC,8BAC3C,QAAQ,sCAAuC;;;+FCjDpD,QAAS,qCAAoC,OAAQ,eAAgB,SAAU,YAAa,GAC/C,eAAgB,qBAAsB,OAAQ,aAAc,MAErG,GAAI,WAAY,KAAK,UACjB,GAAK,KAAK,GACV,SAAW,OAAO,SAAiB,QAAN,GAAkB,SAAW,QAE9D,QAAO,mCAAoC,EAE3C,OAAO,UACP,OAAO,uBACP,OAAO,aACH,uBAAwB,KACxB,0BAA2B,KAC3B,gBAAiB,KACjB,aAAc,KACd,aAAc,KACd,aAAc,KACd,QAAS,GACT,OAAQ,KACR,YAAa,IAGjB,OAAO,yBACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,cAAc,QAG7C,QACI,KAAM,SAId,OAAO,qBAAuB,KAC9B,OAAO,qBAAuB,KAC9B,OAAO,qBAAuB,KAE9B,qBAAqB,SAChB,KAAK,SAAC,QACH,GAAI,MAAO,OAAO,IAClB,QAAO,oBAAsB,KAE7B,OAAO,qBAAuB,2BAA2B,KAAK,GAAG,IACjE,OAAO,qBAAuB,2BAA2B,KAAK,GAAG,IACjE,OAAO,qBAAuB,2BAA2B,KAAK,GAAG,MAGzD,UAAZ,UACA,eAAe,QAAQ,IAClB,KAAK,SAAC,QACH,OAAO,OAAS,EAChB,OAAO,YAAc,GAEjB,OAAO,SAAW,IAClB,OAAO,OAAS,OAAO,SACvB,OAAO,YAAc,YAGrB,OAAO,OAAS,IAChB,OAAO,OAAS,OAAO,OACvB,OAAO,YAAc,UAGzB,OAAO,YAAc,QAGjC,IAAI,WAAY,SAAC,MAEb,OAAO,aACH,uBAAwB,KACxB,wBAAyB,KACzB,gBAAiB,KACjB,YAAa,GACb,OAAQ,KACR,YAAa,IAGjB,SAAS,WAAA,MAAM,aAAY,SAAS,OAAO,KAE3C,OAAO,mCAAoC,EAG/C,QAAO,UAAW,CAElB,IAAI,MAAO,SAAC,MAGR,QAAS,WACL,MAAI,MAAK,UACL,YAAY,SAAS,UACrB,UAAS,WAIb,OAAO,UAAW,EAEF,UAAZ,UACA,eAAe,OAAO,UAAW,OAAO,aACnC,KAAK,SAAA,QACF,SAAS,QAAQ,QACjB,OAAO,YAEV,MAAM,SAAC,QACJ,OAAO,OAAS,OAChB,SAAS,WAEZ,QAAQ,WACL,OAAO,UAAW,EAClB,SAAS,iBAGL,UAAZ,UACA,eAAe,OAAO,GAAI,OAAO,aAC5B,KAAK,SAAA,QACF,SAAS,QAAQ,QACjB,OAAO,YAEV,MAAM,SAAC,QACJ,OAAO,OAAS,OAChB,SAAS,WAEZ,QAAQ,WAAA,MAAM,QAAO,UAAW,MApC7C,GAAI,UAAW,GAAG,OAyClB,OAFA,UAAS,QAAS,GAEX,SAAS,QAGpB,QAAO,WAAa,SAAC,MACjB,KAAK,MACA,KAAK,WAAA,MAAM,WAAU,SAG9B,OAAO,cAAgB,SAAC,MACpB,KAAK,MACA,KAAK,SAAC,QAAD,MAAY,gBAAe,MAAM,WAG/C,OAAO,gCACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,qBAAqB,QAGpD,QACI,KAAM,SAId,OAAO,6BAA+B,SAAC,SACnC,OAAO,YAAY,0BAA4B,KAE/C,OAAO,YAAY,eACf,SAAS,EACT,YAAY,GAEhB,OAAO,YAAY,YACf,SAAS,EACT,YAAY,GAEhB,OAAO,YAAY,YACf,SAAS,EACT,YAAY,GAEhB,OAAO,YAAY,YACf,SAAS,EACT,YAAY,GAEhB,OAAO,YAAY,eACf,SAAS,EACT,YAAY,IAIpB,OAAO,mCACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,SAAC,QACF,GAAI,uBAAwB,GAAA,OAAA,QAAe,OAAO,OAAO,SACpD,eACA,MAAM,SAAA,GAAA,MAAgB,0BAAX,EAAE,QACb,KAEL,OAAO,cAAa,KACf,wBACA,0BAA0B,0BAI3C,QACI,KAAM,SAId,OAAO,8BAAgC,SAAC,SACpC,GAAI,MAAO,OAEX,OAAK,OAqBL,OAAO,YAAY,eACf,QAAS,GAAA,OAAA,SAAgB,WAAY,gBAAgB,eAAe,SAAS,KAAK,+BAClF,WAAkD,YAAtC,KAAK,+BAGrB,OAAO,YAAY,YACf,QAAS,GAAA,OAAA,SAAgB,WAAY,gBAAgB,eAAe,SAAS,KAAK,4BAClF,WAA+C,YAAnC,KAAK,4BAGrB,OAAO,YAAY,YACf,QAAS,GAAA,OAAA,SAAgB,WAAY,gBAAgB,eAAe,SAAS,KAAK,4BAClF,WAA+C,YAAnC,KAAK,iCAGrB,OAAO,YAAY,YACf,QAAS,GAAA,OAAA,SAAgB,WAAY,gBAAgB,eAAe,SAAS,KAAK,4BAClF,WAA+C,YAAnC,KAAK,+BArCjB,OAAO,YAAY,eACf,SAAS,EACT,YAAY,GAEhB,OAAO,YAAY,YACf,SAAS,EACT,YAAY,GAEhB,OAAO,YAAY,YACf,SAAS,EACT,YAAY,QAEhB,OAAO,YAAY,YACf,SAAS,EACT,YAAY,MA2BxB,OAAO,iCAAmC,SAAC,GAAD,MAAO,GAAE,OAAO,QAAQ,WAElE,OAAO,yBACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,cAAc,QAG7C,QACI,KAAM,QAId,IAAI,4BAA6B,SAAC,YAC9B,OACI,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,aAAa,KAAK,UAAU,cAAc,cAGvD,QACI,KAAM,SAKlB,QAAO,oBAAsB,WAAA,MACzB,QAAO,YAAY,YAAgD,UAAlC,OAAO,YAAY,YAC9C,WACA,UAEV,OAAO,MAAQ,WAAA,MAAM,gBAAe,WAGxC,QAAS,iDAAgD,WACrD,MAAO,YACH,WAAY,oCACZ,YAAa,mDAnSrB,GAAA,MAAA,QAAA,oDACA,KAAA,QAAA,oDAsSA,OAAA,QACK,WAAW,8BAA+B,qCAC1C,QAAQ,0CAA2C,iDAExD,MAAA,QACK,WAAW,8BAA+B,qCAC1C,QAAQ,0CAA2C;;;+FC3SxD,QAAS,6BAA4B,OAAQ,UAAW,eAAgB,WAAY,eAAgB,MAMhG,QAAS,SACL,WAAW,QAAQ,IACd,KAAK,SAAC,QAAD,MAAW,QAAO,QAAU,SAL1C,GAAI,IAAK,KAAK,EACd,QAAO,WAOP,QAEA,OAAO,YACH,UACK,KAAM,MAAO,MAAO,IAAK,MAAO,OAAQ,KAAM,SAAU,YAAY,EAAO,UAAU,IAElF,KAAM,yBACN,MAAO,UAAU,0BACjB,KAAM,uBACN,SAAU,oCACV,MAAO,UAGP,KAAM,4BACN,MAAO,UAAU,6BACjB,KAAM,0BACN,SAAU,uCACV,MAAO,UAGP,KAAM,kBACN,MAAO,UAAU,kBACjB,KAAM,gBACN,SAAU,6BACV,MAAO,UAGP,KAAM,UAAW,MAAO,UAAU,WAAY,MAAO,QAAS,KAAM,SACpE,SAAU,2DAGV,KAAM,SAAU,MAAO,UAAU,UAAW,MAAO,QAAS,KAAM,SAAU,SAAU,yBACtF,YAAa,OACb,eAAgB,uCAGhB,KAAM,WAAY,MAAO,UAAU,YAAa,MAAO,QAAS,KAAM,SAAU,SAAU,2BAC1F,YAAa,OACb,eAAgB,yCAGxB,YACA,SAAU,QACV,QAAS,eAAe,IAAI,OAAO,KAGvC,OAAO,MAAQ,WAAA,MAAK,gBAAe,WAGvC,QAAS,+BAA8B,WACnC,MAAO,YACH,WAAY,4BACZ,YAAa,yCACb,KAAM,OAlEd,GAAA,MAAA,QAAA,mDAsEA,OAAA,QACK,WAAW,8BAA+B,6BAC1C,QAAQ,gCAAiC;;;+FCrE9C,QAAS,6CAA4C,OAAQ,eACR,qBAAsB,2BACtB,OAAQ,YAAa,KAAM,cAE5E,OAAO,UACP,OAAO,SAAW,KAAK,SACvB,OAAO,qBAAuB,KAAK,qBACnC,OAAO,iBAAmB,aAAa,MAAM,mBAAmB,KAEhE,OAAO,yBACH,KAAM,GACN,MAAO,GACP,8BAA+B,KAC/B,eAAe,EACf,2BAA4B,KAC5B,2BAA4B,KAC5B,2BAA4B,MAGX,QAAjB,KAAK,UACL,2BAA2B,QAAQ,KAAK,2BACnC,KAAK,SAAA,QAAA,MAAU,QAAO,wBAA0B,SAEzD,OAAO,uBAEP,qBAAqB,SAChB,KAAK,SAAA,QAAA,MAAU,QAAO,oBAAsB,OAAO,OAExD,OAAO,UAAW,EAElB,OAAO,KAAO,SAAA,MACV,MAAI,MAAK,SACE,YAAY,SAAS,OAEhC,MAAA,QAAW,UAAU,OAAO,QAC5B,OAAO,UAAW,EAEG,QAAjB,KAAK,UACL,2BAA2B,OACvB,OAAO,wBAAwB,GAC/B,OAAO,yBACN,KAAK,WACF,OAAO,UACP,eAAe,UAElB,MAAM,SAAA,QAAA,MAAU,QAAO,OAAS,SAChC,QAAQ,WAAA,MAAM,QAAO,UAAW,QAEzC,4BAA2B,OACvB,KAAK,qBAAqB,GAC1B,OAAO,yBACN,KAAK,SAAA,QACF,OAAO,UACP,eAAe,MAAM,UAExB,MAAM,SAAA,QAAA,MAAU,QAAO,OAAS,SAChC,QAAQ,WAAA,MAAM,QAAO,UAAW,MAGzC,OAAO,MAAQ,WAAA,MAAM,gBAAe,WAIxC,QAAS,0CAAyC,WAC9C,MAAO,YACH,WAAY,4CACZ,YAAa,sDArErB,GAAA,MAAA,QAAA,oDACA,KAAA,QAAA,oDAwEA,OAAA,QACK,WAAW,8CAA+C,6CAC1D,QAAQ,2CAA4C;;;+FCzEzD,QAAS,yCAAwC,OACA,UAAW,kBAAmB,KAAM,SACpC,YAAa,eAAgB,cAC1E,OAAO,UACP,OAAO,QACH,cAAe,KAAK,cACpB,qBAAsB,KAAK,qBAC3B,SAAU,KACV,OAAQ,KAAK,OACb,KAAM,KAAK,KACX,YAAa,KAAK,aAGtB,OAAO,wBACP,OAAO,wBAAyB,EAChC,OAAO,yBAA0B,EAEjC,kBAAkB,SAAS,KAAK,iBAC3B,KAAK,SAAC,QACH,OAAO,qBAAuB,OACT,GAAjB,OAAO,SACP,OAAO,yBAA0B,KAG7C,OAAO,qBAAuB,SAAC,KAC3B,OAAO,wBAAyB,EAChC,OAAO,uBAAuB,UAAU,KAAK,IAAM,aAAa,KAAK,OAAO,UAAU,IAAI,IAE1F,SAAS,WAAA,MAAK,QAAO,uBAAyB,KAAK,IAGvD,OAAO,UAAW,EAElB,OAAO,KAAO,SAAC,MACX,GAAK,OAAO,wBAAZ,CAEA,GAAI,KAAK,SACL,MAAO,aAAY,SAAS,KAEhC,QAAO,UAAW,EAClB,UAAU,MAAM,OAAO,OAAO,SAAU,OAAO,QAC1C,KAAK,SAAC,QAAD,MAAW,gBAAe,MAAM,UACrC,MAAM,SAAC,QAAD,MAAW,QAAO,OAAS,SACjC,QAAQ,WAAA,MAAK,QAAO,UAAW,MAGxC,OAAO,MAAQ,WAAA,MAAK,gBAAe,WAEnC,OAAO,wBACH,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,OAGb,QACI,KAAM,SAKlB,QAAS,sCAAqC,WAC1C,MAAO,YACH,WAAY,wCACZ,YAAa,uDAnErB,GAAA,MAAA,QAAA,mDAuEA,OAAA,QACK,WAAW,0CAA2C,yCACtD,QAAQ,uCAAwC;;;+FCvErD,QAAS,YAAW,MAAO,IAEvB,QAAS,SAAQ,cACb,GAAI,UAAW,GAAG,OAgBlB,OAdA,cACK,QAAQ,SAAU,QACX,OAAO,QACP,SAAS,QAAQ,OAAO,aAGxB,SAAS,OAAO,OAAO,UAG9B,MAAM,SAAU,OACb,QAAQ,MAAM,OACd,SAAS,QAAQ,qBAGlB,SAAS,QAGpB,OACI,IAAK,SAAU,IAAK,MAChB,GAAI,UAAW,GAAG,OAWlB,OATA,OAAM,IAAI,KAAM,OAAQ,KAAM,gBAAiB,+BAC1C,QAAQ,SAAU,QACf,SAAS,QAAQ,UAEpB,MAAM,SAAU,OACb,QAAQ,MAAM,OACd,SAAS,QAAQ,qBAGlB,SAAS,SAEpB,KAAM,SAAU,IAAK,MACjB,MAAO,SAAQ,MAAM,KAAK,IAAK,QAEnC,IAAK,SAAU,IAAK,MAChB,MAAO,SAAQ,MAAM,IAAI,IAAK,QAElC,OAAQ,SAAU,IAAK,MACnB,MAAO,SAAQ,MAAM,OAAO,IAAK,SA9C7C,GAAA,MAAA,QAAA,mDAmDA,OAAA,QAAU,QAAQ,aAAc;;;+FChDhC,QAAS,SAAQ,UAAW,IAExB,MAAO,UAAC,QAAS,MAAO,MACpB,GAAI,UAAW,GAAG,OAalB,QAXA,EAAA,sBAAA,UACI,MAAO,MACP,KAAM,QACN,KAAM,MAAQ,UACd,kBAAkB,EAClB,iBAAkB,UAAU,MAC5B,kBAAmB,UAAU,QAC9B,SAAC,WACI,WAAW,SAAS,YAGrB,SAAS,SAnBxB,GAAA,sBAAA,QAAA,2FACA,KAAA,QAAA,mDAuBA,OAAA,QAAU,QAAQ,UAAW;;;ACxB7B,ksBAEqB,0BACjB,QAAA,gBAAY,UAAU,gBAAA,KAAA,gBAClB,KAAK,SACD,MAAO,KACP,aAAc,KACd,KAAM,KACN,OAAQ,KACR,KAAM,KAAK,MAAM,aAAa,QAAQ,iBAG1C,KAAK,SAAW,4EAGX,OACL,KAAK,QAAQ,MAAQ,8CAGT,gBACZ,KAAK,SAAS,IAAI,iBAAkB,gBACpC,KAAK,QAAQ,aAAiC,GAAlB,eAAsB,KAAO,+CAGrD,MACJ,KAAK,SAAS,IAAI,eAAgB,MAClC,KAAK,QAAQ,KAAO,uCAGd,QACN,KAAK,QAAQ,OAAS,qCAItB,MAAO,MAAK,8CAhCC;;;+FCArB,QAAS,eAEL,QAAS,UAAS,MAMd,MALA,SAAQ,QAAQ,KAAK,OAAQ,SAAU,MACnC,QAAQ,QAAQ,KAAM,SAAU,OAC5B,MAAM,gBAGP,KAGX,QAAS,UAAS,MACd,QAAQ,QAAQ,KAAK,OAAQ,SAAU,MACnC,QAAQ,QAAQ,KAAM,SAAU,OAC5B,MAAM,mBAKlB,OACI,SAAU,SACV,SAAU,UAvBlB,GAAA,MAAA,QAAA,mDA2BA,OAAA,QAAU,QAAQ,cAAe;;;+FCxBjC,QAAS,8BAsCL,QAAS,OAAM,QACX,OACI,eAAe,EACf,SAAU,KACV,SAAU,SAAU,MAChB,KAAK,QAAQ,eACT,YAAa,MACb,cAAe,OAAO,KACtB,eAAgB,OAAO,MACvB,gBAAgB,EAChB,OAAQ,WACR,UAAU,EACV,UAAW,EACX,YACI,KAAM,OACN,iBAAiB,EACjB,WACI,MACI,IAAK,OAAO,KAEhB,aAAc,SAAU,SACpB,MAAO,OAAM,UAAU,WAG/B,QACI,MAAO,SAAU,UACb,MAAO,UAAS,YAS5C,QAAS,UAAS,QACd,OACI,eAAe,EACf,SAAU,KACV,SAAU,SAAU,MAChB,KAAK,QAAQ,mBACT,cAAe,OAAO,KACtB,eAAgB,OAAO,MACvB,OAAQ,WACR,UAAU,EACV,UAAW,EACX,WAAY,OAAO,KACnB,gBAAgB,MApFhC,GAAI,OACA,QACI,SAAU,WACV,SAAA,qEAEJ,QACI,SAAU,KACV,OACK,IAAK,KAAM,QAAS,YAAY,cAChC,IAAK,MAAO,QAAS,YAAY,8BACjC,IAAK,KAAM,QAAS,YAAY,kBAChC,IAAK,MAAO,QAAS,YAAY,2BACjC,IAAK,KAAM,QAAS,YAAY,eAErC,SAAA,sYAWJ,MACI,SAAA,8GAIJ,SACI,SAAA,4GA4DR,MAAK,SACD,MAAO,MACP,SAAU,UAGd,KAAK,KAAO,WACR,MAAO,OAGX,KAAK,IAAM,SAAU,gBACjB,KAAO,QAAQ,OAAO,KAAM,iBAzGpC,GAAA,MAAA,QAAA,oDACI,YAAc,KAAK,MAAM,aAAa,QAAQ,aA4GlD,OAAA,QAAU,SAAS,qBAAsB;;;+FC1GzC,QAAS,QAAO,WACZ,OACI,QAAS,SAAU,UACf,EAAA,sBAAA,UACI,MAAO,UAAU,cACjB,KAAM,SAAW,UAAU,qBAC3B,KAAM,UACN,MAAO,IACP,kBAAmB,UAAU,SAGrC,KAAM,SAAU,UACZ,EAAA,sBAAA,UACI,MAAO,UAAU,QACjB,KAAM,QACN,KAAM,OACN,MAAO,IACP,kBAAmB,UAAU,SAGrC,QAAS,SAAU,UACf,EAAA,sBAAA,UACI,MAAO,UAAU,WACjB,KAAM,QACN,KAAM,UACN,MAAO,IACP,kBAAmB,UAAU,SAGrC,MAAO,SAAU,UACb,EAAA,sBAAA,UACI,MAAO,UAAU,SACjB,KAAM,QACN,KAAM,QACN,MAAO,IACP,kBAAmB,UAAU,UAtC7C,GAAA,sBAAA,QAAA,2FACA,KAAA,QAAA,mDA2CA,OAAA,QAAU,QAAQ,SAAU;;;6tBC5C5B,KAAA,QAAA,oDAEM,6BAEF,QAAA,qBAAc,gBAAA,KAAA,mBACV,KAAK,iFAIL,MAAO,MAAK,sCAGZ,MAWA,MAVK,MAAK,IAAI,SAAS,UACnB,KAAK,IAAL,QAAmB,KAAK,KAE5B,KAAK,UAAY,KAAK,SAAS,QAAQ,SAAA,OAC/B,MAAM,IAAI,SAAS,UACnB,MAAM,IAAN,QAAoB,MAAM,OAGlC,KAAK,UAAU,KAAK,MAEb,6BAIf,OAAA,QAAU,SAAS,YAAa;;;+FCzBhC,QAAS,WAAU,OAAQ,IAIvB,GAAI,eAAgB,SAAU,QAC1B,GAAI,eAAgB,OAAO,MACvB,WAAW,EACX,YAAa,OAAO,YACpB,WAAY,OAAO,WACnB,UAAU,EACV,UAAU,EACV,KAAM,OAAO,KACb,SACI,KAAM,WACF,MAAO,QAAO,SAKtB,SAAW,GAAG,OAMlB,OAJA,eAAc,OAAO,KAAK,SAAU,QAChC,SAAS,QAAQ,UAGd,SAAS,QAGpB,OAAO,UAAU,QACb,OACI,KAAM,SAAU,MAEZ,MADA,QAAO,KAAO,KACP,cAAc,WAlCrC,GAAA,MAAA,QAAA,mDAwCA,OAAA,QAAU,QAAQ,YAAa;;;+FCrC/B,QAAS,QAAO,UAAW,IACvB,MAAO,UAAC,QACJ,GAAI,UAAW,GAAG,OAsBlB,QApBA,EAAA,sBAAA,UACI,MAAO,OAAO,MACd,KAAM,OAAO,KACb,KAAM,QACN,kBAAkB,EAClB,gBAAgB,EAChB,iBAAkB,UAAU,UAC5B,kBAAmB,UAAU,WAC7B,qBAAqB,EACrB,UAAW,iBACX,iBAAkB,UAAU,mBAC7B,SAAC,YACA,MAAK,gBAKL,UAAS,QAAQ,aAJb,sBAAA,QAAK,eAAe,UAAU,+BACvB,KAMR,SAAS,SA3BxB,GAAA,MAAA,QAAA,oDACA,qBAAA,QAAA,0FA8BA,OAAA,QAAU,QAAQ,SAAU;;;+FC5B5B,QAAS,uBAAsB,OAAQ,WAEnC,QAAS,UAAS,MACd,MAAO,IAAA,OAAA,QAAe,QAAQ,OAAO,SAChC,eACA,OAAO,SAAC,GAAD,MAAM,QAAO,OAAO,KAC3B,MAAM,SAAC,GAAD,MAAM,GAAE,YAAc,gBAAgB,OAAO,QAG5D,GAAI,UAAW,SAAC,KAAM,WAAY,aAC9B,GAAI,OAAQ,SAAS,MACjB,KAAO,MAAM,YAEjB,OAAM,KAAK,QAAQ,SAAC,KAChB,GAAI,gBAAiB,WAAW,IAAI,OAAS,EAC7C,IAAsB,IAAlB,gBAAwC,GAAhB,IAAI,SAC5B,KAAM,IAAI,OAAM,kCAAkC,OAAO,IAAI,MAEjE,MAAO,KAAK,QAAQ,GAAI,QAAO,OAAO,OAAO,IAAI,OAAQ,kBAGzD,aACA,UAAU,OAAO,aAErB,UAAU,KAAK,MAInB,OAAO,UA/BX,GAAA,MAAA,QAAA,oDACA,KAAA,QAAA,oDAiCA,OAAA,QAAU,QAAQ,WAAY;;;+FChC9B,QAAS,cACL,MAAO,UAAC,KACJ,OAAO,KAAK,IAAK,WAJzB,GAAA,MAAA,QAAA,mDAQA,OAAA,QAAU,QAAQ,aAAc;;;+FCNhC,QAAS,WAAU,SACf,MAAO,UAAC,KAAD,MAAS,SAAQ,aAAa,MAHzC,GAAA,MAAA,QAAA,mDAMA,OAAA,QAAU,QAAQ,YAAa;;;+FCH/B,QAAS,2BAEL,OACI,IAAK,SAAC,KAAM,OACR,aAAa,QAAQ,gBAAgB,OAAO,MAAO,QAEvD,IAAK,SAAC,MACF,MAAO,cAAa,QAAQ,gBAAgB,OAAO,SAV/D,GAAA,MAAA,QAAA,mDAeA,OAAA,QAAU,QAAQ,0BAA2B;;;ACf7C,YAEO,SAAS,aAAY,SACxB,GAAI,UAAW,GAAI,YAAW,OAAO,WAAW,WAOhD,OALA,UAAS,KAAO,QAAQ,KACxB,SAAS,MAAQ,QAAQ,MACzB,SAAS,SAAW,QAAQ,SAC5B,SAAS,MAAQ,QAAQ,MAElB,SAGJ,QAAS,gBACZ,GAAI,QAAS,GAAI,YAAW,OAAO,gBAOnC,OALA,QAAO,QAAQ,WAAa,WAC5B,OAAO,QAAQ,kBAAmB,EAClC,OAAO,QAAQ,iBAAmB,WAAW,OAAO,oBAAoB,IACxE,OAAO,WAAW,eAAiB,WAAW,OAAO,OAAO,kBAAkB,MAEvE,OAGJ,QAAS,eAAc,QAC1B,GAAI,YAAa,KAAK,MAAM,aAAa,QAAQ,aAEjD,QAAO,KAAK,YAAY,QAAQ,SAAA,KAC5B,OAAO,WAAW,UAAU,IAAI,aAC5B,KAAM,IACN,MAAO,IACP,SAAU,YACV,MAAO,WAAW,yEA9Bd,YAAA,oBAWA,aAAA,qBAWA,cAAA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import accModule from './acc.module';\r\n\r\n// load config\r\nimport  './config/route.config';\r\nimport  './config/menu.config.js';\r\nimport  './config/translate.config';\r\nimport './config/gridFilterCellTypeConfig';\r\nimport './config/authConfig';\r\nimport ADMdtpConfig from './config/ADMdtp.config';\r\n\r\n\r\n//load controllers\r\nimport './controllers/homeController';\r\nimport './controllers/generalLedgerAccountsController';\r\nimport './controllers/subsidiaryLedgerAccountsController';\r\nimport './controllers/subsidiaryLedgerAccountCreateController';\r\nimport './controllers/subsidiaryLedgerAccountUpdateController';\r\nimport './controllers/detailAccountsController';\r\nimport './controllers/dimensionsController';\r\nimport './controllers/journalsController';\r\nimport './controllers/journalUpdateController';\r\nimport './controllers/chequeCategoriesController';\r\nimport './controllers/banksController';\r\nimport './controllers/journalManagementController';\r\nimport './controllers/journalCopy';\r\nimport './controllers/journalTemplatesController';\r\nimport './controllers/accountReviewController';\r\nimport './controllers/accountReviewTurnoverController';\r\nimport './controllers/journalPrintController';\r\nimport createFiscalPeriodController from  './controllers/createFiscalPeriodController';\r\nimport chequePrintController from './controllers/chequePrintController';\r\nimport reportController from './controllers/reportController';\r\nimport reportDesignerController from './controllers/reportDesignerController';\r\n\r\n// load apis\r\nimport './apis/generalLedgerAccountApi';\r\nimport './apis/subsidiaryLedgerAccountApi';\r\nimport './apis/detailAccountApi';\r\nimport './apis/dimensionCategoryApi';\r\nimport './apis/dimensionApi';\r\nimport './apis/journalApi';\r\nimport './apis/journalLineApi';\r\nimport './apis/chequeCategoryApi';\r\nimport './apis/bankApi';\r\nimport './apis/chequeApi';\r\nimport './apis/journalTemplateApi';\r\nimport FiscalPeriodApi from './apis/fiscalPeriodApi';\r\nimport ReportApi from './apis/reportApi';\r\nimport TagApi from './apis/tagApi';\r\n\r\n// load modals\r\nimport './modals/generalLedgerAccountCreate';\r\nimport './modals/generalLedgerAccountUpdate';\r\nimport './modals/subsidiaryLedgerAccountEntry';\r\nimport './modals/dimensionCreate';\r\nimport './modals/dimensionUpdate';\r\nimport './modals/journalCreate';\r\nimport './modals/journalLineCreateOrUpdate';\r\nimport './modals/journalBookkeeping';\r\nimport './modals/journalAttachImage';\r\nimport './modals/chequeCategroyCreate';\r\nimport './modals/chequeCategroyUpdate';\r\nimport './modals/writeChequeOnJournalLineEntry';\r\nimport './modals/showJournalDetail';\r\nimport './modals/journalAdvnacedSearch';\r\nimport './modals/detailAccountCreate';\r\nimport './modals/detailAccountUpdate';\r\n\r\nimport './localData/devConstants';\r\n\r\n//directives\r\nimport './directives/alert';\r\nimport './directives/subContent';\r\nimport './directives/blockUi';\r\nimport './directives/customValidator';\r\nimport './directives/validationSummary';\r\nimport './directives/focusMe';\r\nimport './directives/uploader';\r\nimport './directives/button';\r\nimport './directives/combobox';\r\nimport './directives/content';\r\nimport './directives/datepicker';\r\nimport './directives/dropdownlist';\r\nimport './directives/multiSelect';\r\n//import './directives/grid';\r\nimport './directives/layout';\r\nimport './directives/numeric';\r\nimport './directives/textEditor';\r\nimport './directives/checkbox';\r\nimport './directives/radio';\r\nimport './directives/ngKendoGrid';\r\nimport './directives/journalSearchParameters';\r\nimport './directives/reportViewer';\r\nimport shell from './directives/shell';\r\nimport {contentCover, contentCoverForm} from './directives/contentCover';\r\nimport './directives/reportDesigner';\r\nimport panelBar from './directives/panelbar';\r\nimport shellHeader from './directives/shell.header';\r\nimport shellSidebar from './directives/shell.sidebar';\r\nimport shellSidebarItem from './directives/shell.sidebar.item';\r\nimport grid from './directives/grid.bootstrap';\r\nimport gridFilter from './directives/grid.filter';\r\nimport gridSort from './directives/grid.sort';\r\nimport EditableGrid from './directives/grid.editable';\r\nimport EditableGridRow from './directives/grid.editable.row';\r\nimport paging from './directives/paging';\r\nimport ngHtmlCompile from './directives/ngHtmlCompile';\r\nimport doughnutChart from './directives/chart.doughnut';\r\n\r\n//filter\r\nimport './filters/amount';\r\n\r\n//service\r\nimport './services/formService';\r\nimport './services/translateStorageService';\r\nimport './services/apiPromise';\r\nimport './services/confirm';\r\nimport './services/gridFilterCellTypeProvider';\r\nimport './services/logger';\r\nimport './services/menuItemsProvider';\r\nimport './services/modalBase';\r\nimport './services/routeNavigatorService';\r\nimport './services/translate';\r\nimport './services/prompt';\r\nimport './services/showReport';\r\nimport  currentService from './services/currentService';\r\n\r\n\r\naccModule\r\n    .config(ADMdtpConfig)\r\n    .directive('shell', shell)\r\n    .directive('shellHeader', shellHeader)\r\n    .directive('shellSidebar', shellSidebar)\r\n    .directive('shellSidebarItem', shellSidebarItem)\r\n    .directive('devTagContentCover', contentCover)\r\n    .directive('devTagContentCoverFrom', contentCoverForm)\r\n    .directive('devTagPanelBar', panelBar)\r\n    .directive('devTagGrid', grid)\r\n    .directive('devTagGridFilter', gridFilter)\r\n    .directive('devTagGridSort', gridSort)\r\n    .directive('devTagPaging', paging)\r\n    .directive('devTagGridEditable', EditableGrid)\r\n    .directive('devTagGridEditableRow', EditableGridRow)\r\n    .directive('ngHtmlCompile', ngHtmlCompile)\r\n    .directive('devTagChartDoughnut', doughnutChart)\r\n    .service(currentService.name, currentService)\r\n    .service('fiscalPeriodApi', FiscalPeriodApi)\r\n    .service('reportApi', ReportApi)\r\n    .service('tagApi', TagApi)\r\n    .controller(createFiscalPeriodController.name, createFiscalPeriodController)\r\n    .controller('chequePrintController', chequePrintController)\r\n    .controller('reportController', reportController)\r\n    .controller('reportDesignerController', reportDesignerController);\r\n\r\naccModule.init();\r\n\r\n",
    "import angular from 'angular';\r\nimport 'angular-animate';\r\nimport 'angular-bootstrap';\r\nimport 'angular-route';\r\nimport 'angular-sanitize';\r\nimport 'angular-translate';\r\nimport 'angular-resource';\r\nimport 'angular-messages';\r\nimport 'angular-cookies';\r\nimport 'angular-cookies';\r\nimport 'ADM-dateTimePicker';\r\n\r\nimport 'chart.js';\r\nimport 'angular-chart';\r\n\r\nimport 'angular-ladda';\r\n\r\nObject.defineProperty(Array.prototype, 'toNumber', { enumerable: false });\r\nObject.defineProperty(Array.prototype, 'dtp_toDate', { enumerable: false });\r\n\r\nlet accModule = angular.module('acc.module', [\r\n    'ngAnimate',\r\n    'ngRoute',\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ui.bootstrap',\r\n    'pascalprecht.translate',\r\n    'ngMessages',\r\n    'ngCookies',\r\n    'ADM-dateTimePicker',\r\n    'chart.js',\r\n    'angular-ladda'\r\n]);\r\n\r\naccModule.init = () => {\r\n    angular.element(document).ready(function () {\r\n        angular.bootstrap(document, ['acc.module']);\r\n    });\r\n};\r\n\r\naccModule.run((currentService, $cookies, $rootScope) => {\r\n    currentService.setToday(localStorage.getItem('today'));\r\n    currentService.setFiscalPeriod(parseInt($cookies.get('current-period')));\r\n    currentService.setMode($cookies.get('current-mode'));\r\n    currentService.setBranch(JSON.parse(localStorage.getItem('currentBranch')));\r\n\r\n    $rootScope.canShowStatusSection = false;\r\n    $rootScope.isDevelopment = false;//localStorage.getItem('env') == 'development';\r\n});\r\n\r\nexport default accModule;",
    "import accModule from '../acc.module';\r\n\r\nfunction bankApi(apiPromise) {\r\n    var urlPrefix = '/luca/api';\r\n\r\n    return {\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/banks/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/banks'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/banks/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/banks/{1}'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('bankApi', bankApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction chequeApi(apiPromise) {\r\n    var urlPrefix = '/luca/api';\r\n\r\n    return {\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/cheques/{1}'.format(urlPrefix, id));\r\n        },\r\n        write: (id, data)=> apiPromise.put('{0}/cheques/{1}/write'.format(urlPrefix, id), data)\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('chequeApi', chequeApi);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction chequeCategoryApi(apiPromise) {\r\n    var urlPrefix = '/luca/api';\r\n\r\n    return {\r\n        getOpens: (detailAccountId)=>\r\n            apiPromise.get('{0}/cheque-categories/detail-account/{1}/opens'\r\n                .format(urlPrefix, detailAccountId)),\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/cheque-categories/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/cheque-categories'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/cheque-categories/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/cheque-categories/{1}'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('chequeCategoryApi', chequeCategoryApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction detailAccountApi(apiPromise) {\r\n    var urlPrefix = '/luca/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: '{0}/detail-accounts'.format(urlPrefix),\r\n            getAllActive: '{0}/detail-accounts/active'.format(urlPrefix)\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/detail-accounts/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/detail-accounts'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/detail-accounts/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/detail-accounts/{1}'.format(urlPrefix, id));\r\n        },\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/detail-accounts/{1}/activate'.format(urlPrefix, id));\r\n        },\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/detail-accounts/{1}/deactivate'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('detailAccountApi', detailAccountApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction dimensionApi(apiPromise, $q, $timeout) {\r\n    var urlPrefix = '/luca/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: function (parentId) {\r\n                return '{0}/dimensions/category/{1}'.format(urlPrefix, parentId);\r\n            }\r\n        },\r\n        getAll: function () {\r\n            return apiPromise.get('{0}/dimensions'.format(urlPrefix));\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/dimensions/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (categoryId, data) {\r\n            return apiPromise.post('{0}/dimensions/category/{1}'.format(urlPrefix, categoryId), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/dimensions/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/dimensions/{1}'.format(urlPrefix, id));\r\n        },\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/dimensions/{1}/activate'.format(urlPrefix, id));\r\n        },\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/dimensions/{1}/deactivate'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('dimensionApi', dimensionApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction dimensionCategoryApi(apiPromise, $q, $timeout) {\r\n    var urlPrefix = '/luca/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: '{0}/dimension-categories'.format(urlPrefix)\r\n        },\r\n        getAll: function () {\r\n            return apiPromise.get('{0}/dimension-categories'.format(urlPrefix));\r\n        },\r\n        getAllLookup: ()=> {\r\n            let deferred = $q.defer();\r\n            let dimensionCategories = JSON.parse(localStorage.getItem('dimensionCategories'));\r\n\r\n            if (dimensionCategories)\r\n                $timeout(()=> deferred.resolve(dimensionCategories), 0);\r\n            else apiPromise.get('{0}/dimension-categories'.format(urlPrefix))\r\n                .then((result)=> {\r\n                    localStorage.setItem('dimensionCategories', JSON.stringify(result));\r\n                    deferred.resolve(result)\r\n                });\r\n\r\n            return deferred.promise;\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/dimension-categories/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/dimension-categories'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/dimension-categories/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/dimension-categories/{1}'.format(urlPrefix, id));\r\n        },\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/dimension-categories/{1}/activate'.format(urlPrefix, id));\r\n        },\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/dimension-categories/{1}/deactivate'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('dimensionCategoryApi', dimensionCategoryApi);\r\n",
    "export  default class FiscalPeriodApi{\r\n    constructor(apiPromise){\r\n        this.urlPrefix = '/luca/api';\r\n        this.apiPromise = apiPromise;\r\n\r\n        this.getAll= '{0}/periods'.format(this.urlPrefix)\r\n    }\r\n\r\n    create(fiscalPeriod){\r\n        return this.apiPromise.post(`${this.urlPrefix}/fiscal-periods`, fiscalPeriod)\r\n    }\r\n\r\n    current(){\r\n        return this.apiPromise.get(`${this.urlPrefix}/fiscal-periods/current`);\r\n    }\r\n}\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction generalLedgerAccountApi(apiPromise) {\r\n    var urlPrefix = '/luca/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: '{0}/general-ledger-accounts'.format(urlPrefix),\r\n            getAllActive: '{0}/general-ledger-accounts/active'\r\n                .format(urlPrefix)\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/general-ledger-accounts/{1}'\r\n                .format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/general-ledger-accounts'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/general-ledger-accounts/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/general-ledger-accounts/{1}'.format(urlPrefix, id));\r\n        },\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/general-ledger-accounts/{1}/activate'.format(urlPrefix, id));\r\n        },\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/general-ledger-accounts/{1}/deactivate'.format(urlPrefix, id));\r\n        }\r\n    };\r\n}\r\n\r\naccModule.factory('generalLedgerAccountApi', generalLedgerAccountApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalApi(apiPromise) {\r\n    var urlPrefix = '/luca/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: '{0}/journals'.format(urlPrefix)\r\n        },\r\n        getGroupedByMouth: () => apiPromise.get('{0}/journals/summary/grouped-by-month'.format(urlPrefix)),\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/journals/{1}'.format(urlPrefix, id));\r\n        },\r\n        getByNumber:(number)=> apiPromise.get(`${urlPrefix}/journals/by-number/${number}`),\r\n        getTotalInfo: () => apiPromise.get(`${urlPrefix}/journals/total-info`),\r\n        getJournalReportJson: id => apiPromise.get(`/report/json/journal/${id}`),\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/journals'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/journals/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/journals/{1}'.format(urlPrefix, id));\r\n        },\r\n        copy: (id) => apiPromise.post('{0}/journals/{1}/copy'.format(urlPrefix, id)),\r\n        bookkeeping: (id, data) => apiPromise.put('{0}/journals/{1}/bookkeeping'.format(urlPrefix, id), data),\r\n        attachImage: (id, data) => apiPromise.put('{0}/journals/{1}/attach-image'.format(urlPrefix, id), data),\r\n        incomesAndOutcomes: () => apiPromise.get(`${urlPrefix}/account-review/incomes-outcomes`)\r\n    };\r\n}\r\n\r\naccModule.factory('journalApi', journalApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalLineApi(apiPromise) {\r\n    var urlPrefix = '/luca/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: (journalId)=> '{0}/journal-lines/journal/{1}'.format(urlPrefix, journalId)\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/journal-lines/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (journalId, data) {\r\n            return apiPromise.post('{0}/journal-lines/journal/{1}'.format(urlPrefix, journalId), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/journal-lines/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/journal-lines/{1}'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('journalLineApi', journalLineApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalTemplateApi(apiPromise) {\r\n    var urlPrefix = '/luca/api';\r\n\r\n    return {\r\n        create: (journalId, data)=>\r\n            apiPromise.post('{0}/journal-templates/journal/{1}'.format(urlPrefix, journalId), data),\r\n        journalCreate: (id)=>\r\n            apiPromise.post('{0}/journal-templates/{1}/journal/create'.format(urlPrefix, id)),\r\n        remove: (id)=>\r\n            apiPromise.delete('{0}/journal-templates/{1}'.format(urlPrefix, id))\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('journalTemplateApi', journalTemplateApi);\r\n\r\n",
    "\r\nexport default class {\r\n    constructor(apiPromise) {\r\n        this.urlPrefix = '/luca/api/reports';\r\n        this.apiPromise = apiPromise;\r\n    }\r\n\r\n    save(data) {\r\n        return this.apiPromise.post(this.urlPrefix, data)\r\n    }\r\n\r\n    generalLedgerAccounts(data){\r\n        return this.apiPromise.get('/luca/api/general-ledger-accounts', data);\r\n    }\r\n}\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction subsidiaryLedgerAccountApi(apiPromise) {\r\n    var urlPrefix = '/luca/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: function (parentId) {\r\n                return '{0}/subsidiary-ledger-accounts/general-ledger-account/{1}'.format(urlPrefix, parentId);\r\n            },\r\n            getAllActive: function (parentId) {\r\n                return '{0}/subsidiary-ledger-accounts/general-ledger-account/{1}/active'.format(urlPrefix, parentId)\r\n            }\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/subsidiary-ledger-accounts/{1}/'\r\n                .format(urlPrefix, id));\r\n        },\r\n        create: function (parentId, data) {\r\n            return apiPromise.post('{0}/subsidiary-ledger-accounts/general-ledger-account/{1}'\r\n                .format(urlPrefix, parentId), data);\r\n        }\r\n        ,\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/subsidiary-ledger-accounts/{1}'\r\n                .format(urlPrefix, id), data);\r\n        }\r\n        ,\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/subsidiary-ledger-accounts/{1}'\r\n                .format(urlPrefix, id))\r\n        }\r\n        ,\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/subsidiary-ledger-accounts/{1}/activate'\r\n                .format(urlPrefix, id));\r\n        }\r\n        ,\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/subsidiary-ledger-accounts/{1}/deactivate'\r\n                .format(urlPrefix, id));\r\n        }\r\n    }\r\n}\r\n\r\naccModule\r\n    .factory('subsidiaryLedgerAccountApi', subsidiaryLedgerAccountApi)\r\n\r\n\r\n",
    "\r\nexport default class {\r\n    constructor(apiPromise) {\r\n        this.urlPrefix = '/luca/api/tags';\r\n        this.apiPromise = apiPromise;\r\n    }\r\n\r\n    create(data){\r\n        return this.apiPromise.post(this.urlPrefix, data);\r\n    }\r\n}\r\n\r\n",
    "\r\nexport default function (ADMdtpProvider, ChartJsProvider) {\r\n    ADMdtpProvider.setOptions({\r\n        calType: 'jalali',\r\n        dtpType: 'date',\r\n        format: 'YYYY/MM/DD',\r\n        //default: 'today',\r\n        autoClose: true\r\n    });\r\n\r\n    ChartJsProvider.setOptions({ defaultFontFamily: \"'IRANSans', 'Segoe UI', 'Helvetica Neue', 'Helvetica', 'Arial, sans-serif'\",\r\n        colors : [ '#803690', '#00ADF9', '#DCDCDC', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360'] });\r\n}\r\n\r\nimport Chart from 'chart.js';\r\nChart.defaults.global.defaultFontFamily=\"'IRANSans'\";\r\nChart.defaults.global.scaleLabel = \"<%=kendo.toString(value, '#,##0;(#,##0)');%>\";\r\nChart.defaults.global.tooltipTemplate = \"<%if (label){%><%=label%>: <%}%><%=kendo.toString(label, '#,##0;(#,##0)')%>\";\r\n",
    "import accModule from '../acc.module';\r\nimport $ from 'jquery';\r\n\r\naccModule.config($httpProvider=> {\r\n    $httpProvider.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\r\n\r\n    $httpProvider.interceptors.push(()=> {\r\n        return {\r\n            'request': (config)=> {\r\n                return config;\r\n            },\r\n            'response': (response)=> {\r\n\r\n\r\n                return response;\r\n            },\r\n            'requestError': (rejection)=> {\r\n                return rejection;\r\n            },\r\n            'responseError': (rejection)=> {\r\n                if (rejection.status == 401 && rejection.data == 'user is not authenticated')\r\n                    return location.reload();\r\n\r\n                return rejection;\r\n            }\r\n        }\r\n    });\r\n});\r\n\r\n$(document).ajaxError((e, response)=> {\r\n    if (response.status == 401 && response.responseText == 'user is not authenticated')\r\n        return location.reload();\r\n});\r\n",
    "import accModule from '../acc.module';\r\nimport devConstants from '../localData/devConstants';\r\n\r\naccModule.config(function (gridFilterCellTypeProvider) {\r\n\r\n    let postingType = {\r\n        data: devConstants.enums.AccountPostingType().data,\r\n        template: `<li ng-repeat=\"item in items\">\r\n                <dev-tag-radio\r\n                        ng-class=\"{'checked': item.key == filter.value}\"\r\n                        ng-model=\"filter.value\"\r\n                        k-value=\"{{item.key}}\"></dev-tag-radio>\r\n                        {{item.display}}\r\n            </li>`\r\n    };\r\n\r\n    let balanceType = {\r\n        data: devConstants.enums.AccountBalanceType().data,\r\n        template: `<li ng-repeat=\"item in items\">\r\n        <dev-tag-radio \r\n            ng-class=\"{'checked': item.key == filter.value}\"\r\n            ng-model=\"filter.value\" \r\n            k-value=\"{{item.key}}\"></dev-tag-radio>\r\n        {{item.display}}\r\n        </li>`\r\n    };\r\n\r\n    let activeType = {\r\n        data: devConstants.enums.Active().data,\r\n        template: `<li ng-repeat=\"item in items\">\r\n        <dev-tag-radio\r\n            ng-class=\"{'checked': item.key == filter.value}\"\r\n            ng-model=\"filter.value\" \r\n            k-value=\"{{item.key}}\"></dev-tag-radio>\r\n        {{item.display}}\r\n        </li>`\r\n    };\r\n\r\n    let journalType = {\r\n        data: devConstants.enums.JournalType().data,\r\n        template: `<li ng-repeat=\"item in items\">\r\n        <dev-tag-radio\r\n            ng-class=\"{'checked': item.key == filter.value}\"\r\n            ng-model=\"filter.value\" \r\n            k-value=\"{{item.key}}\"></dev-tag-radio>\r\n        {{item.display}}\r\n        </li>`\r\n    };\r\n\r\n    let journalStatus = {\r\n        data: devConstants.enums.JournalStatus().data,\r\n        template: `<li ng-repeat=\"item in items\">\r\n        <dev-tag-radio\r\n            ng-class=\"{'checked': item.key == filter.value}\"\r\n            ng-model=\"filter.value\" \r\n            k-value=\"{{item.key}}\"></dev-tag-radio>\r\n        {{item.display}}\r\n        </li>`\r\n    };\r\n\r\n    let chequeCategoryStatus = {\r\n        data: devConstants.enums.ChequeCategoryStatus().data,\r\n        template: `<li ng-repeat=\"item in items\">\r\n        <dev-tag-radio\r\n            ng-class=\"{'checked': item.key == filter.value}\"\r\n            ng-model=\"filter.value\" \r\n            k-value=\"{{item.key}}\"></dev-tag-radio>\r\n        {{item.display}}\r\n        </li>`\r\n    };\r\n\r\n    let generalLedgerAccount = {\r\n        dataSource: {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: devConstants.urls.generalLedgerAccount.all()\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        },\r\n        template: `<li>\r\n               <dev-tag-combo-box\r\n               k-placeholder=\"{{'Select' | translate}}\"\r\n               k-data-text-field=\"display\"\r\n               k-data-value-field=\"id\"\r\n               k-data-source=\"dataSource\"\r\n               ng-model=\"filter.value\"></dev-tag-combo-box>\r\n            </li>`,\r\n        style:{width: '300px'}\r\n    };\r\n\r\n    let subsidiaryLedgerAccount = {\r\n        dataSource: {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: devConstants.urls.subsidiaryLedgerAccount.all()\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        },\r\n        template: `<li>\r\n               <dev-tag-combo-box\r\n               k-placeholder=\"{{'Select' | translate}}\"\r\n               k-data-text-field=\"display\"\r\n               k-data-value-field=\"id\"\r\n               k-data-source=\"dataSource\"\r\n               ng-model=\"filter.value\"></dev-tag-combo-box>\r\n            </li>`,\r\n        style:{width: '300px'}\r\n    };\r\n\r\n    let detailAccount = {\r\n        dataSource: {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: devConstants.urls.detailAccount.all()\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        },\r\n        template: `<li>\r\n               <dev-tag-combo-box\r\n               k-placeholder=\"{{'Select' | translate}}\"\r\n               k-data-text-field=\"display\"\r\n               k-data-value-field=\"id\"\r\n               k-data-source=\"dataSource\"\r\n               ng-model=\"filter.value\"></dev-tag-combo-box>\r\n            </li>`,\r\n        style:{width: '300px'}\r\n    };\r\n\r\n    let bank = {\r\n        dataSource: {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: devConstants.urls.bank.all()\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        },\r\n        template: `<li>\r\n               <dev-tag-combo-box\r\n               k-placeholder=\"{{'Select' | translate}}\"\r\n               k-data-text-field=\"title\"\r\n               k-data-value-field=\"id\"\r\n               k-data-source=\"dataSource\"\r\n               ng-model=\"filter.value\"></dev-tag-combo-box>\r\n            </li>`\r\n\r\n    };\r\n\r\n    gridFilterCellTypeProvider.set({\r\n        postingType: postingType,\r\n        balanceType: balanceType,\r\n        activeType: activeType,\r\n        bank:bank,\r\n        generalLedgerAccount: generalLedgerAccount,\r\n        subsidiaryLedgerAccount: subsidiaryLedgerAccount,\r\n        detailAccount: detailAccount,\r\n        chequeCategoryStatus: chequeCategoryStatus,\r\n        journalType: journalType,\r\n        journalStatus: journalStatus\r\n    });\r\n});",
    "import accModule from '../acc.module';\r\n\r\naccModule.config(menuItemsProvider => {\r\n    \"use strict\";\r\n\r\n    menuItemsProvider\r\n        .add({\r\n            title: 'سرفصل حسابها و سطوح',\r\n            url: '',\r\n            icon: 'fa fa-tasks',\r\n            children: [\r\n                {\r\n                    title: 'حسابهای کل و معین',\r\n                    url: '/general-ledger-accounts'\r\n                },\r\n                {\r\n                    title: 'حساب تفصیل',\r\n                    url: '/detail-accounts'\r\n                },\r\n                {\r\n                    title: 'سطوح',\r\n                    url: '/dimensions'\r\n                }\r\n            ]\r\n        })\r\n        .add({\r\n            title: 'سند حسابداری',\r\n            url: '',\r\n            icon: 'fa fa-book',\r\n            children: [\r\n                {\r\n                    title: 'لیست اسناد حسابداری',\r\n                    url: '/journals',\r\n                    icon: ''\r\n                },\r\n                {\r\n                    title: 'مدیریت اسناد',\r\n                    url: '/journal-management',\r\n                    icon: ''\r\n                },\r\n                {\r\n                    title: 'کپی سند',\r\n                    url: '/journal/copy',\r\n                    icon: 'glyphicon glyphicon-copy'\r\n                },\r\n                {\r\n                    title: 'سند استاندارد',\r\n                    url: '/journal-templates'\r\n                }\r\n            ]\r\n        })\r\n        .add({\r\n            title: 'خزانه داری',\r\n            url: '',\r\n            icon: 'fa fa-money',\r\n            children: [\r\n                {\r\n                    title: 'دسته چک ها',\r\n                    url: '/cheque-categories',\r\n                    icon: ''\r\n                },\r\n                {\r\n                    title: 'بانک ها',\r\n                    url: '/banks',\r\n                    icon: ''\r\n                }\r\n            ]\r\n        })\r\n        .add({\r\n            title: 'گزارشات',\r\n            url: '',\r\n            icon: 'fa fa-pie-chart',\r\n            children: [\r\n                {\r\n                    title: 'مرور حساب',\r\n                    url: '/account-review',\r\n                    icon: ''\r\n                },\r\n                {\r\n                    title: 'گزارشات',\r\n                    url: '/reports',\r\n                    icon: ''\r\n                }\r\n            ]\r\n        });\r\n});",
    "import accModule from '../acc.module';\r\n\r\naccModule.config(($routeProvider, $locationProvider) => {\r\n\r\n    $locationProvider.html5Mode({\r\n        enabled: true,\r\n        requireBase: false\r\n    });\r\n\r\n    $locationProvider.hashPrefix('!');\r\n    $routeProvider\r\n        .when('/luca', {\r\n            controller: 'homeController',\r\n            templateUrl: 'partials/views/home.html'\r\n        })\r\n        .when('/luca/general-ledger-accounts', {\r\n            controller: 'generalLedgerAccountsController',\r\n            templateUrl: 'partials/views/generalLedgerAccounts.html'\r\n        })\r\n        .when('/luca/luca/subsidiary-ledger-accounts/:generalLedgerAccountId', {\r\n            controller: 'subsidiaryLedgerAccountsController',\r\n            templateUrl: 'partials/views/subsidiaryLedgerAccounts.html'\r\n        })\r\n        .when('/luca/subsidiary-ledger-account/:generalLedgerAccountId/create', {\r\n            controller: 'subsidiaryLedgerAccountCreateController',\r\n            templateUrl: 'partials/views/subsidiaryLedgerAccountCreate.html'\r\n        })\r\n        .when('/luca/subsidiary-ledger-account/:id/edit', {\r\n            controller: 'subsidiaryLedgerAccountUpdateController',\r\n            templateUrl: 'partials/views/subsidiaryLedgerAccountUpdate.html'\r\n        })\r\n        .when('/luca/detail-accounts', {\r\n            controller: 'detailAccountsController',\r\n            templateUrl: 'partials/views/detailAccounts.html'\r\n        })\r\n        .when('/luca/detail-account/create', {\r\n            controller: 'detailAccountCreateController',\r\n            templateUrl: 'partials/views/detailAccountCreate.html'\r\n        })\r\n        .when('/luca/detail-account/:id/edit', {\r\n            controller: 'detailAccountUpdateController',\r\n            templateUrl: 'partials/views/detailAccountUpdate.html'\r\n        })\r\n        .when('/luca/dimensions', {\r\n            controller: 'dimensionsController',\r\n            templateUrl: 'partials/views/dimensions.html'\r\n        })\r\n        .when('/luca/journals', {\r\n            controller: 'journalsController',\r\n            templateUrl: 'partials/views/journals.html'\r\n        })\r\n        .when('/luca/journal/copy', {\r\n            controller: 'journalCopyController',\r\n            templateUrl: 'partials/views/journalCopy.html'\r\n        })\r\n        .when('/luca/journal-templates', {\r\n            controller: 'journalTemplatesController',\r\n            templateUrl: 'partials/views/journalTemplates.html'\r\n        })\r\n        .when('/luca/journal/:id/edit', {\r\n            controller: 'journalUpdateController',\r\n            templateUrl: 'partials/views/journalUpdate.html'\r\n        })\r\n        .when('/luca/journal/:id/print', {\r\n            controller: 'journalPrintController',\r\n            templateUrl: 'partials/views/journalPrint.html'\r\n        })\r\n        .when('/luca/journal-management', {\r\n            controller: 'journalManagementController',\r\n            templateUrl: 'partials/views/journalManagement.html'\r\n        })\r\n        .when('/luca/not-found', {\r\n            templateUrl: 'partials/views/notFound.html'\r\n        })\r\n        .when('/luca/cheque-categories', {\r\n            controller: 'chequeCategoriesController',\r\n            templateUrl: 'partials/views/chequeCategories.html'\r\n        })\r\n        .when('/luca/cheque/:id/print', {\r\n            controller: 'chequePrintController',\r\n            templateUrl: 'partials/views/chequePrint.html'\r\n        })\r\n        .when('/luca/banks', {\r\n            controller: 'banksController',\r\n            templateUrl: 'partials/views/banks.html'\r\n        })\r\n        .when('/luca/account-review', {\r\n            controller: 'accountReviewController',\r\n            templateUrl: 'partials/views/accountReview.html'\r\n        })\r\n        .when('/luca/account-review/turnover/:name', {\r\n            controller: 'accountReviewTurnoverController',\r\n            templateUrl: 'partials/views/accountReviewTurnover.html'\r\n        })\r\n        .when('/luca/fiscal-period/new', {\r\n            controller: 'createFiscalPeriodController',\r\n            templateUrl: 'partials/views/createFiscalPeriod.html'\r\n        })\r\n        .when('/luca/reports', {\r\n            controller: 'reportController',\r\n            templateUrl: 'partials/views/report.html'\r\n        })\r\n        .when('/luca/reports/designer/:fileName?', {\r\n            controller: 'reportDesignerController',\r\n            templateUrl: 'partials/views/reportDesigner.html'\r\n        })\r\n        .when('/luca/not-found', {\r\n            templateUrl: 'partials/views/notFound.html'\r\n        })\r\n        .otherwise('/luca/not-found');\r\n});\r\n\r\naccModule.run(\r\n    $route => $route.reload());",
    "import accModule from '../acc.module';\r\nimport 'angular-translate-loader-url';\r\nimport config from '../localData/config';\r\n\r\naccModule.config($translateProvider => {\r\n    if (config.isClientTest()) {\r\n        $translateProvider.useUrlLoader('client/translate.json');\r\n    } else {\r\n        let translate = JSON.parse(localStorage.getItem('translate'));\r\n\r\n        $translateProvider.translations('fa_IR', translate);\r\n        $translateProvider.useStorage('translateStorageService');\r\n    }\r\n\r\n    $translateProvider.preferredLanguage('fa_IR');\r\n    $translateProvider.useSanitizeValueStrategy('escapeParameters');\r\n});",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction accountReviewController($scope, navigate, dimensionCategoryApi, devConstants, formService) {\r\n\r\n    $scope.parameters = localStorage.getItem('account-review-state')\r\n        ? JSON.parse(localStorage.getItem('account-review-state'))\r\n        : {\r\n        minDate: '',\r\n        maxDate: '',\r\n        minNumber: null,\r\n        maxNumber: null,\r\n        notShowZeroRemainder: false,\r\n        isNotPeriodIncluded: false,\r\n        detailAccount: null,\r\n        dimension1: null,\r\n        dimension2: null,\r\n        dimension3: null\r\n    };\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.dimension1DataSource = {};\r\n    $scope.dimension2DataSource = {};\r\n    $scope.dimension3DataSource = {};\r\n    $scope.dimension4DataSource = {};\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result)=> {\r\n            let cats = result.data;\r\n            $scope.dimensionCategories = new Collection(cats).asEnumerable().take(3).toArray();\r\n\r\n            $scope.dimension1DataSource = dimensionDataSourceFactory(cats[0].id);\r\n            $scope.dimension2DataSource = dimensionDataSourceFactory(cats[1].id);\r\n            $scope.dimension3DataSource = dimensionDataSourceFactory(cats[2].id);\r\n        });\r\n\r\n    function dimensionDataSourceFactory(categoryId) {\r\n        return {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: devConstants.urls.dimension.allByCategory(categoryId)\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        };\r\n    }\r\n\r\n    function saveState() {\r\n        let state = JSON.stringify($scope.parameters);\r\n\r\n        localStorage.setItem('account-review-state', state);\r\n    }\r\n\r\n    function getParameters() {\r\n        let parameters = $scope.parameters,\r\n            params = {};\r\n\r\n        if (parameters.minNumber) {\r\n            params.minNumber = parameters.minNumber;\r\n            params.maxNumber = parameters.maxNumber;\r\n        }\r\n\r\n        if (parameters.minDate) {\r\n            params.minDate = parameters.minDate;\r\n            params.maxDate = parameters.maxDate;\r\n        }\r\n\r\n        params.notShowZeroRemainder = parameters.notShowZeroRemainder;\r\n        params.isNotPeriodIncluded = parameters.isNotPeriodIncluded;\r\n\r\n        return params;\r\n    }\r\n\r\n    $scope.executeTurnover = (form,reportName)=> {\r\n        /*if(form.$invalid)\r\n            return formService.setDirty(form);\r\n*/\r\n        saveState();\r\n        let params = getParameters();\r\n\r\n        navigate('accountReviewTurnover', {name: reportName}, params);\r\n    };\r\n\r\n    $scope.detailAccountExecuteTurnovers = (reportName)=> {\r\n        saveState();\r\n\r\n        let params = getParameters();\r\n        params.detailAccountId = $scope.parameters.detailAccount.id;\r\n        params.detailAccountDisplay = $scope.parameters.detailAccount.display;\r\n\r\n        navigate('accountReviewTurnover', {name: reportName}, params);\r\n    };\r\n\r\n    $scope.dimensionExecuteTurnovers = (dimensionName, reportName, index)=> {\r\n        saveState();\r\n\r\n        let params = getParameters();\r\n        params[`${dimensionName}Id`] = $scope.parameters[dimensionName].id;\r\n        params[`${dimensionName}Display`] = $scope.parameters[dimensionName].display;\r\n        params[`${dimensionName}Caption`] = $scope.dimensionCategories[index].title;\r\n\r\n        navigate('accountReviewTurnover', {name: reportName}, params);\r\n    };\r\n}\r\n\r\naccModule.controller('accountReviewController', accountReviewController);\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction accountReviewTurnoverController($scope, navigate, $routeParams, $location, translate,\r\n                                         dimensionCategoryApi,\r\n                                         accountReviewTurnoverGridOptionService,\r\n                                         showJournalDetailModalService) {\r\n    let titles = {\r\n        generalLedgerAccount: translate('Total turnover general ledger account'),\r\n        subsidiaryLedgerAccount: translate('Total turnover subsidiary ledger account'),\r\n        detailAccount: translate('Total turnover detail account'),\r\n        dimension1: `${translate('Total turnover dimension')} ${translate('Dimension1')}`,\r\n        dimension2: `${translate('Total turnover dimension')} ${translate('Dimension2')}`,\r\n        dimension3: `${translate('Total turnover dimension')} ${translate('Dimension2')}`,\r\n        tiny: translate('Tiny turnover journals')\r\n    };\r\n\r\n    let reportName = $scope.reportName = $routeParams.name;\r\n    let parameters = $location.search();\r\n\r\n    $scope.commands = [\r\n        {\r\n            order: 0,\r\n            key: 'tiny',\r\n            display: translate('Tiny turnover journals')\r\n        },\r\n        {\r\n            order: 1,\r\n            key: 'generalLedgerAccount',\r\n            display: translate('General ledger account')\r\n        },\r\n        {\r\n            order: 2,\r\n            key: 'subsidiaryLedgerAccount',\r\n            display: translate('Subsidiary ledger account')\r\n        },\r\n        {\r\n            order: 3,\r\n            key: 'detailAccount',\r\n            display: translate('Detail account')\r\n        },\r\n        {\r\n            order: 4,\r\n            key: 'dimension1',\r\n            display: translate('Dimension1')\r\n        },\r\n        {\r\n            order: 5,\r\n            key: 'dimension2',\r\n            display: translate('Dimension2')\r\n        },\r\n        {\r\n            order: 6,\r\n            key: 'dimension3',\r\n            display: translate('Dimension3')\r\n        }\r\n    ];\r\n\r\n    $scope.title = titles[$routeParams.name];\r\n\r\n    $scope.titleParameters = getTitleParameters();\r\n\r\n    $scope.gridOption = accountReviewTurnoverGridOptionService[$routeParams.name];\r\n    $scope.gridOption.extra = {filter: getParameters()};\r\n    $scope.current = false;\r\n\r\n    $scope.execute = (key) => {\r\n        let params = angular.extend({}, parameters);\r\n        delete params[`${key}Id`];\r\n        delete params[`${key}Display`];\r\n\r\n        params[`${reportName}Id`] = $scope.current[`${reportName}Id`];\r\n        params[`${reportName}Display`] = `${$scope.current[`${reportName}Code`]} ${$scope.current[`${reportName}Title`]}`;\r\n\r\n        navigate('accountReviewTurnover', {name: key}, params);\r\n    };\r\n\r\n    $scope.onCurrentChanged = (current) => {\r\n        if (!current) $scope.current = false;\r\n\r\n        $scope.current = current;\r\n    };\r\n\r\n    $scope.showJournal = () => {\r\n        showJournalDetailModalService\r\n            .show({\r\n                id: $scope.current.id\r\n            });\r\n    };\r\n\r\n    function getTitleParameters() {\r\n        let titleParameters = [];\r\n\r\n        if (parameters.generalLedgerAccountId)\r\n            titleParameters.push({\r\n                name: translate('General ledger account'),\r\n                value: parameters.generalLedgerAccountDisplay\r\n            });\r\n\r\n        if (parameters.subsidiaryLedgerAccountId)\r\n            titleParameters.push({\r\n                name: translate('Subsidiary ledger account'),\r\n                value: parameters.subsidiaryLedgerAccountDisplay\r\n            });\r\n\r\n        if (parameters.detailAccountId)\r\n            titleParameters.push({\r\n                name: translate('Detail account'),\r\n                value: parameters.detailAccountDisplay\r\n            });\r\n\r\n        if (parameters.dimension1Id)\r\n            titleParameters.push({\r\n                name: translate('Dimension1'),\r\n                value: parameters.dimension1Display\r\n            });\r\n\r\n        if (parameters.dimension2Id)\r\n            titleParameters.push({\r\n                name: translate('Dimension2'),\r\n                value: parameters.dimension2Display\r\n            });\r\n\r\n        if (parameters.dimension3Id)\r\n            titleParameters.push({\r\n                name: translate('Dimension3'),\r\n                value: parameters.dimension3Display\r\n            });\r\n\r\n        if (parameters.minNumber)\r\n            titleParameters.push({\r\n                name: translate('Number'),\r\n                value: `[${parameters.minNumber},${parameters.maxNumber}]`\r\n            });\r\n\r\n        if (parameters.minDate)\r\n            titleParameters.push({\r\n                name: translate('Date'),\r\n                value: `[${parameters.minDate},${parameters.maxDate}]`\r\n            });\r\n\r\n        if (eval(parameters.notShowZeroRemainder))\r\n            titleParameters.push({\r\n                name: translate('Not show zero remiander')\r\n            });\r\n\r\n        if (eval(parameters.isNotPeriodIncluded))\r\n            titleParameters.push({\r\n                name: translate('Is not period included')\r\n            });\r\n\r\n        return titleParameters;\r\n    }\r\n\r\n    function getParameters() {\r\n        let params = {};\r\n\r\n        if (parameters.generalLedgerAccountId)\r\n            params.generalLedgerAccountId = parameters.generalLedgerAccountId;\r\n\r\n        if (parameters.subsidiaryLedgerAccountId)\r\n            params.subsidiaryLedgerAccountId = parameters.subsidiaryLedgerAccountId;\r\n\r\n        if (parameters.detailAccountId)\r\n            params.detailAccountId = parameters.detailAccountId;\r\n\r\n        if (parameters.dimension1Id)\r\n            params.dimension1Id = parameters.dimension1Id;\r\n\r\n        if (parameters.dimension2Id)\r\n            params.dimension2Id = parameters.dimension2Id;\r\n\r\n        if (parameters.dimension3Id)\r\n            params.dimension3Id = parameters.dimension3Id;\r\n\r\n        if (parameters.minNumber) {\r\n            params.minNumber = parameters.minNumber;\r\n            params.maxNumber = parameters.maxNumber;\r\n        }\r\n\r\n        if (parameters.minDate) {\r\n            params.minDate = parameters.minDate;\r\n            params.maxDate = parameters.maxDate;\r\n        }\r\n\r\n        params.notShowZeroRemainder = parameters.notShowZeroRemainder;\r\n        params.isNotPeriodInclude = parameters.isNotPeriodInclude;\r\n\r\n        return params;\r\n    }\r\n}\r\n\r\n\r\nfunction accountReviewTurnoverGridOptionService(translate, devConstants) {\r\n    let options = {};\r\n\r\n    let amountColumns = [\r\n        {\r\n            name: 'sumBeforeRemainder',\r\n            title: translate('Before remainder'),\r\n            type: 'number',\r\n            width: '15%',\r\n            template: '{{item.sumBeforeRemainder | number}}',\r\n            aggregates: ['sum'],\r\n            footerTemplate: '{{aggregates.sumBeforeRemainder.sum | number}}'\r\n        },\r\n        {\r\n            name: 'sumDebtor',\r\n            title: translate('Debtor'),\r\n            type: 'number',\r\n            width: '15%',\r\n            template: '{{item.sumDebtor | number}}',\r\n            aggregates: ['sum'],\r\n            footerTemplate: '{{aggregates.sumDebtor.sum | number}}'\r\n        },\r\n        {\r\n            name: 'sumCreditor',\r\n            title: translate('Creditor'),\r\n            type: 'number',\r\n            width: '15%',\r\n            template: '{{item.sumCreditor | number}}',\r\n            aggregates: ['sum'],\r\n            footerTemplate: '{{aggregates.sumCreditor.sum | number}}'\r\n        },\r\n        {\r\n            name: 'sumRemainder',\r\n            title: translate('Remainder'),\r\n            type: 'number',\r\n            width: '15%',\r\n            template: '{{item.sumRemainder | number}}',\r\n            aggregates: ['sum'],\r\n            footerTemplate: '{{aggregates.sumRemainder.sum | number}}'\r\n        }\r\n    ];\r\n\r\n    options.generalLedgerAccount = {\r\n        columns: [\r\n            {\r\n                name: 'generalLedgerAccountCode',\r\n                title: translate('General ledger account'),\r\n                type: 'string',\r\n                width: '10%'\r\n            },\r\n            {\r\n                name: 'generalLedgerAccountTitle',\r\n                title: translate('Title'),\r\n                type: 'string',\r\n                width: '30%'\r\n            },\r\n            ...amountColumns\r\n        ],\r\n        commands: [],\r\n        readUrl: devConstants.urls.accountReview.getAllGeneralLedgerAccount(),\r\n        selectable: true\r\n    };\r\n\r\n    options.subsidiaryLedgerAccount = {\r\n        columns: [\r\n            {\r\n                name: 'subsidiaryLedgerAccountCode',\r\n                title: translate('Subsidiary ledger account'),\r\n                type: 'string',\r\n                width: '7%'\r\n            },\r\n            {\r\n                name: 'generalLedgerAccountCode',\r\n                title: translate('General ledger account'),\r\n                type: 'string',\r\n                width: '5%'\r\n            },\r\n            {name: 'subsidiaryLedgerAccountTitle', title: translate('Title'), type: 'string', width: '28%'},\r\n            ...amountColumns\r\n        ],\r\n        commands: [],\r\n        readUrl: devConstants.urls.accountReview.getAllSubsidiaryLedgerAccount(),\r\n        selectable: true\r\n    };\r\n\r\n    options.detailAccount = {\r\n        columns: [\r\n            {\r\n                name: 'detailAccountCode',\r\n                title: translate('Detail account'),\r\n                type: 'string',\r\n                width: '10%'\r\n            },\r\n            {\r\n                name: 'detailAccountTitle',\r\n                title: translate('Title'),\r\n                type: 'string',\r\n                width: '30%'\r\n            },\r\n            ...amountColumns\r\n        ],\r\n        commands: [],\r\n        readUrl: devConstants.urls.accountReview.getAllDetailAccount(),\r\n        selectable: true\r\n    };\r\n\r\n    options.dimension1 = {\r\n        columns: [\r\n            {\r\n                name: 'dimension1Code',\r\n                title: translate('Dimension1'),\r\n                type: 'string',\r\n                width: '10%'\r\n            },\r\n            {\r\n                name: 'dimension1Title',\r\n                title: translate('Title'),\r\n                type: 'string',\r\n                width: '30%'\r\n            },\r\n            ...amountColumns\r\n        ],\r\n        commands: [],\r\n        readUrl: devConstants.urls.accountReview.getAllDimension1(),\r\n        selectable: true\r\n    };\r\n\r\n    options.dimension2 = {\r\n        columns: [\r\n            {\r\n                name: 'dimension2Code',\r\n                title: translate('Dimension2'),\r\n                type: 'string',\r\n                width: '10%'\r\n            },\r\n            {\r\n                name: 'dimension2Title',\r\n                title: translate('Title'),\r\n                type: 'string',\r\n                width: '30%'\r\n            },\r\n            ...amountColumns\r\n        ],\r\n        commands: [],\r\n        readUrl: devConstants.urls.accountReview.getAllDimension2(),\r\n        selectable: true\r\n    };\r\n\r\n    options.dimension3 = {\r\n        columns: [\r\n            {\r\n                name: 'dimension3Code',\r\n                title: translate('Dimension3'),\r\n                type: 'string',\r\n                width: '10%'\r\n            },\r\n            {\r\n                name: 'dimension3Title',\r\n                title: translate('Title'),\r\n                type: 'string',\r\n                width: '30%'\r\n            },\r\n            ...amountColumns\r\n        ],\r\n        commands: [],\r\n        readUrl: devConstants.urls.accountReview.getAllDimension3(),\r\n        selectable: true\r\n    };\r\n\r\n    options.tiny = {\r\n        columns: [\r\n            {\r\n                name: 'number',\r\n                title: translate('Number'),\r\n                type: 'number',\r\n                width: '50px'\r\n            },\r\n            {\r\n                name: 'date',\r\n                title: translate('Date'),\r\n                type: 'string',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'dimension3Code',\r\n                //headerTemplate: kendo.template('${kendo.dimensionCategories[2].title}'),\r\n                type: 'string',\r\n                width: '70px'\r\n            },\r\n            {\r\n                name: 'dimension2Code',\r\n                //headerTemplate: kendo.template('${kendo.dimensionCategories[1].title}'),\r\n                type: 'string',\r\n                width: '70px'\r\n            },\r\n            {\r\n                name: 'dimension1Code',\r\n                //headerTemplate: kendo.template('${kendo.dimensionCategories[0].title}'),\r\n                type: 'string',\r\n                width: '70px'\r\n            },\r\n            {\r\n                name: 'detailAccountCode',\r\n                title: translate('Detail account'),\r\n                type: 'string',\r\n                width: '70px'\r\n            },\r\n            {\r\n                name: 'subsidiaryLedgerAccountCode',\r\n                title: translate('Subsidiary ledger account'),\r\n                type: 'string',\r\n                width: '50px'\r\n            },\r\n            {\r\n                name: 'generalLedgerAccountCode',\r\n                title: translate('General ledger account'),\r\n                type: 'string',\r\n                width: '50px'\r\n            },\r\n            {\r\n                name: 'sumDebtor',\r\n                title: translate('Debtor'),\r\n                type: 'number',\r\n                width: '15%',\r\n                format: '{0:#,##}',\r\n                aggregates: ['sum'],\r\n                footerTemplate: '{{aggregates.sumDebtor.sum | number}}'\r\n            },\r\n            {\r\n                name: 'sumCreditor',\r\n                title: translate('Creditor'),\r\n                type: 'number',\r\n                width: '15%',\r\n                format: '{0:#,##}',\r\n                aggregates: ['sum'],\r\n                footerTemplate: '{{aggregates.sumCreditor.sum | number}}'\r\n            },\r\n            {\r\n                name: 'article', title: translate('Article'), type: 'string', width: '10%',\r\n                template: '<span title=\"${data.article}\">${data.article}</span>'\r\n            },\r\n        ],\r\n        commands: [],\r\n        readUrl: devConstants.urls.accountReview.getAllTiny(),\r\n        selectable: true\r\n    };\r\n\r\n    return options;\r\n}\r\n\r\naccModule\r\n    .controller('accountReviewTurnoverController', accountReviewTurnoverController)\r\n    .factory('accountReviewTurnoverGridOptionService', accountReviewTurnoverGridOptionService);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction banksController($scope, logger, confirm, bankApi, translate, devConstants) {\r\n\r\n    let gridOption = $scope.gridOption = {\r\n        columns: [\r\n            {name: 'title', title: translate('Title'), type: 'string',\r\n                template: `<span ng-if=\"!item.isEditing\">{{item.title}}</span>\r\n                    <form name=\"form\">\r\n                    <input ng-if=\"item.isEditing\" class=\"form-control\" name=\"title\" ng-model=\"item.title\" required/>\r\n                    <div ng-messages=\"form.title.$error\" ng-if=\"form.title.$dirty\">\r\n                        <label ng-message=\"required\" class=\"error\">{{'This field is required'|translate}}</label>\r\n                    </div>\r\n                    </form>`}\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                icon: 'fa fa-edit',\r\n                canShow: current => !current.isEditing,\r\n                action: current => {\r\n                    current.originalTitle = current.title;\r\n                    current.isEditing = true;\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                icon: 'fa fa-trash',\r\n                canShow: current => !current.isEditing,\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove Bank'),\r\n                        translate('Are you sure ?'))\r\n                        .then(function () {\r\n                            bankApi.remove(current.id)\r\n                                .then(()=> {\r\n                                    $scope.gridOption.refresh();\r\n                                    logger.success();\r\n                                });\r\n                        });\r\n                }\r\n            },\r\n            {\r\n                title: translate('Save'),\r\n                icon: 'fa fa-floppy-o',\r\n                canShow: current => current.isEditing,\r\n                action: current => {\r\n                    if(current.isNew)\r\n                        return bankApi.create(current)\r\n                            .then(result=> {\r\n                               current.id = result.id;\r\n                               current.isNew= false;\r\n                               current.isEditing = false;\r\n                            });\r\n                    bankApi.update(current.id, current)\r\n                        .then(()=> current.isEditing = false);\r\n                }\r\n            },\r\n            {\r\n                title: translate('Cancel'),\r\n                icon: 'fa fa-times',\r\n                canShow: current  => current.isEditing,\r\n                action: current => {\r\n                    if(current.isNew)\r\n                        return gridOption.removeItem(current);\r\n\r\n                    current.isEditing = false;\r\n                    current.title = current.originalTitle;\r\n                }\r\n            }\r\n        ],\r\n        readUrl: devConstants.urls.bank.all()\r\n    };\r\n\r\n    $scope.create = () => {\r\n        gridOption.addItem({title: '', isEditing: true, isNew: true});\r\n    }\r\n\r\n\r\n}\r\n\r\naccModule.controller('banksController', banksController);",
    "import accModule from '../acc.module';\r\n\r\nfunction chequeCategoriesController($scope, logger, chequeCategoryApi, confirm, devConstants, translate, navigate,\r\n                                    chequeCategoryCreateModalService,\r\n                                    chequeCategoryUpdateModalService) {\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'bankId', title: translate('Bank'), width: '20%', type: 'bank', template: '{{item.bank}}'},\r\n            {name: 'totalPages', title: translate('Total pages'), type: 'number', width: '120px'},\r\n            {\r\n                name: 'detailAccountId',\r\n                title: translate('Detail account'),\r\n                type: 'detailAccount',\r\n                template: '{{item.detailAccount}}'\r\n            },\r\n            {\r\n                name: 'status',\r\n                title: translate('Status'),\r\n                type: 'chequeCategoryStatus',\r\n                template: '{{item.statusDisplay}}',\r\n                width: '10%'\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                icon: 'fa fa-edit',\r\n                action: function (current) {\r\n                    chequeCategoryUpdateModalService.show({id: current.id})\r\n                        .then(() => {\r\n                            logger.success();\r\n                            $scope.gridOption.refresh();\r\n                        });\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                icon: 'fa fa-trash',\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove Cheque category'),\r\n                        translate('Are you sure ?'))\r\n                        .then(() => {\r\n                            chequeCategoryApi.remove(current.id)\r\n                                .then(function () {\r\n                                    logger.success();\r\n                                    $scope.gridOption.refresh();\r\n                                })\r\n                                .catch(errors => logger.error(errors.join('<br/>')));\r\n                        })\r\n\r\n                }\r\n            }\r\n        ],\r\n        readUrl: devConstants.urls.chequeCategory.all(),\r\n        selectable: true,\r\n        gridSize: '200px'\r\n    };\r\n\r\n    $scope.chequeGridOption = {\r\n        columns: [\r\n            {name: 'number', title: translate('Number'), width: '10%', type: 'number'},\r\n            {name: 'date', title: translate('Date'), type: 'date', width: '10%'},\r\n            {name: 'description', title: translate('Description'), type: 'string', width: '30%'},\r\n            {\r\n                name: 'amount',\r\n                title: translate('Amount'),\r\n                type: 'number',\r\n                width: '10%',\r\n                format: '{0:#,##}',\r\n                template: '{{item.amount|number}}'\r\n            }\r\n        ],\r\n        commands: [{\r\n            title: translate('Print'),\r\n            icon: 'fa fa-print',\r\n            action: current => navigate('chequePrint', {id: current.id})\r\n        }],\r\n        gridSize: '200px',\r\n        readUrl: ''\r\n    };\r\n\r\n    $scope.onSelectCategory = current => {\r\n        $scope.chequeGridOption.readUrl = devConstants.urls.cheque.all(current.id);\r\n    };\r\n\r\n    $scope.create = () => {\r\n        chequeCategoryCreateModalService.show()\r\n            .then(() => {\r\n                logger.success();\r\n                $scope.gridOption.refresh();\r\n            });\r\n    }\r\n}\r\n\r\naccModule.controller('chequeCategoriesController', chequeCategoriesController);\r\n",
    "\"use strict\"\r\n\r\nexport default function ($scope, chequeApi, $routeParams) {\r\n    $scope.cheque = {}\r\n    $scope.canShow = false;\r\n\r\n    chequeApi.getById($routeParams.id).then(result => {\r\n        $scope.cheque = result;\r\n        $scope.canShow = true;\r\n    });\r\n}",
    "\"use strict\";\r\n\r\nexport default class createFiscalPeriodController {\r\n    constructor($scope, formService, fiscalPeriodApi, navigate) {\r\n        this.$scope = $scope;\r\n        this.formService = formService;\r\n        this.fiscalPeriodApi = fiscalPeriodApi;\r\n        this.navigate = navigate;\r\n\r\n        $scope.fiscalPeriod = {\r\n            minDate: '',\r\n            maxDate: ''\r\n        };\r\n\r\n        $scope.isSaving = false;\r\n        $scope.save = this.save.bind(this);\r\n\r\n        $scope.errors = [];\r\n\r\n    }\r\n\r\n    save(form) {\r\n        if (form.$invalid)\r\n            return this.formService.setDirty(form);\r\n        this.$scope.isSaving = true;\r\n\r\n        this.fiscalPeriodApi.create(this.$scope.fiscalPeriod)\r\n            .then(result => {\r\n                this.$scope.$emit('fiscal-period-changed', result);\r\n                this.navigate('home');\r\n            })\r\n            .catch(err => this.$scope.errors = err)\r\n            .finally(()=> this.$scope.isSaving = false);\r\n    }\r\n}",
    "import accModule from '../acc.module';\r\n\r\nfunction detailAccountsController($scope, logger, translate, confirm, navigate,\r\n                                  detailAccountApi,\r\n                                  detailAccountCreateModalService,\r\n                                  detailAccountUpdateModalService) {\r\n    \"use strict\";\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'code', title: translate('Code'), width: '120px', type: 'string'},\r\n            {name: 'title', title: translate('Title'), type: 'string'},\r\n            {\r\n                name: 'isActive',\r\n                title: translate('Is active ?'),\r\n                type: 'activeType',\r\n                width: '150px',\r\n                template: `<i class=\"fa\"\r\n                          ng-class=\"{'fa-check text-navy': item.isActive,\r\n                                     'fa-times text-danger': !item.isActive}\">\r\n                       </i>`\r\n            },\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                name: 'edit detail account',\r\n                icon: 'fa fa-edit',\r\n                action: function (current) {\r\n                    detailAccountUpdateModalService.show({id: current.id})\r\n                        .then(() => $scope.gridOption.refresh());\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                icon: 'fa fa-trash',\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove Detail account'),\r\n                        translate('Are you sure ?'))\r\n                        .then(function () {\r\n                            detailAccountApi.remove(current.id)\r\n                                .then(function () {\r\n                                    logger.success();\r\n                                    $scope.gridOption.refresh();\r\n                                })\r\n                                .catch((errors) => $scope.errors = errors)\r\n                                .finally(() => $scope.isSaving = false);\r\n                        })\r\n\r\n                }\r\n            }\r\n        ],\r\n        readUrl: detailAccountApi.url.getAll\r\n    };\r\n\r\n    $scope.create = () => detailAccountCreateModalService.show()\r\n        .then(() => $scope.gridOption.refresh());\r\n}\r\n\r\naccModule.controller('detailAccountsController', detailAccountsController);",
    "import accModule from '../acc.module';\r\n\r\nfunction dimensionsController($scope, logger, translate, confirm, devConstants, $timeout,\r\n                              dimensionCategoryApi, dimensionApi,\r\n                              dimensionCreateModalService,\r\n                              dimensionUpdateModalService) {\r\n    $scope.errors = [];\r\n    $scope.dimensionCategories = [];\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {\r\n                name: 'title',\r\n                title: translate('Title'),\r\n                type: 'string',\r\n                template: `<span ng-if=\"!item.isEditing\">{{item.title}}</span>\r\n                    <form name=\"form\">\r\n                    <input ng-if=\"item.isEditing\" class=\"form-control\" name=\"title\" ng-model=\"item.title\" required/>\r\n                    <div ng-messages=\"form.title.$error\" ng-if=\"form.title.$dirty\">\r\n                        <label ng-message=\"required\" class=\"error\">{{'This field is required'|translate}}</label>\r\n                    </div>\r\n                    </form>`\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                icon: 'fa fa-edit',\r\n                canShow: current => !current.isEditing,\r\n                action: current => {\r\n                    current.originalTitle = current.title;\r\n                    current.isEditing = true;\r\n                }\r\n            },\r\n            {\r\n                title: translate('Save'),\r\n                icon: 'fa fa-floppy-o',\r\n                canShow: current => current.isEditing,\r\n                action: current => {\r\n                    if (!current.title) return;\r\n\r\n                    dimensionCategoryApi.update(current.id, current)\r\n                        .then(() => current.isEditing = false);\r\n                }\r\n            },\r\n            {\r\n                title: translate('Cancel'),\r\n                icon: 'fa fa-times',\r\n                canShow: current => current.isEditing,\r\n                action: current => {\r\n                    current.title = current.originalTitle;\r\n                    current.isEditing = false;\r\n                }\r\n            }\r\n        ],\r\n        selectable: true,\r\n        filterable: false,\r\n        sortable: false,\r\n        gridSize: '150px',\r\n        readUrl: dimensionCategoryApi.url.getAll,\r\n        mapper: item => item.isEditig = false\r\n    };\r\n\r\n    $scope.current = false;\r\n    $scope.gridDimensions = false;\r\n\r\n    $scope.onCurrentChanged = (current) => {\r\n        $scope.current = current == null ? false : current;\r\n        $scope.dimensionGridOption.readUrl = dimensionApi.url.getAll(current.id);\r\n    };\r\n\r\n    $scope.createDimension = () => {\r\n        dimensionCreateModalService.show({categoryId: $scope.current.id})\r\n            .then(() => {\r\n                $scope.dimensionGridOption.refresh();\r\n                logger.success();\r\n            });\r\n    };\r\n\r\n    $scope.dimensionGridOption = {\r\n        columns: [\r\n            {name: 'code', title: translate('Code'), width: '120px', type: 'string'},\r\n            {name: 'title', title: translate('Title'), type: 'string'}\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                icon: 'fa fa-edit',\r\n                action: function (current) {\r\n                    dimensionUpdateModalService.show({id: current.id})\r\n                        .then(() => {\r\n                            $scope.dimensionGridOption.refresh();\r\n                            logger.success();\r\n                        });\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                icon: 'fa fa-trash',\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove Dimension'),\r\n                        translate('Are you sure ?'))\r\n                        .then(() => {\r\n                            dimensionApi.remove(current.id)\r\n                                .then(function () {\r\n                                    $scope.dimensionGridOption.refresh();\r\n                                    logger.success();\r\n                                })\r\n                                .catch((err) => $scope.errors = err);\r\n                        })\r\n\r\n                }\r\n            }\r\n        ],\r\n        readUrl: '',\r\n        gridSize: '200px'\r\n    };\r\n}\r\n\r\naccModule.controller('dimensionsController', dimensionsController);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction generalLedgerAccountsController($scope, logger, translate, confirm,\r\n                                         generalLedgerAccountApi,\r\n                                         subsidiaryLedgerAccountApi,\r\n                                         subsidiaryLedgerAccountEntryModalService,\r\n                                         generalLedgerAccountCreateModalService,\r\n                                         generalLedgerAccountUpdateModalService) {\r\n\r\n\r\n    let columns = [\r\n        {name: 'code', title: translate('Code'), width: '120px', type: 'string'},\r\n        {name: 'title', title: translate('Title'), type: 'string'},\r\n        {\r\n            name: 'postingType',\r\n            title: translate('Posting type'),\r\n            type: 'postingType',\r\n            width: '150px',\r\n            template: '{{item.postingTypeDisplay}}'\r\n        },\r\n        {\r\n            name: 'balanceType',\r\n            title: translate('Balance type'),\r\n            type: 'balanceType',\r\n            width: '150px',\r\n            template: '{{item.balanceTypeDisplay}}'\r\n        },\r\n        {\r\n            name: 'isActive',\r\n            title: translate('Is active ?'),\r\n            type: 'activeType',\r\n            width: '150px',\r\n            template: `<i class=\"fa\"\r\n                          ng-class=\"{'fa-check text-navy': item.isActive,\r\n                                     'fa-times text-danger': !item.isActive}\">\r\n                       </i>`\r\n        }\r\n    ];\r\n\r\n    let commands = [\r\n        {\r\n            title: translate('Edit'),\r\n            name: 'edit general ledger account',\r\n            icon: 'fa fa-edit',\r\n            action: function (current) {\r\n                generalLedgerAccountUpdateModalService.show({id: current.id})\r\n                    .then(function () {\r\n                        $scope.gridOption.refresh();\r\n                    });\r\n            }\r\n        },\r\n        {\r\n            title: translate('Remove'),\r\n            icon: 'fa fa-trash',\r\n            action: function (current) {\r\n                confirm(\r\n                    translate('Remove General ledger account'),\r\n                    translate('Are you sure ?'))\r\n                    .then(function () {\r\n                        generalLedgerAccountApi.remove(current.id)\r\n                            .then(function () {\r\n                                logger.success();\r\n                                $scope.gridOption.refresh();\r\n                            })\r\n                            .catch((errors) => $scope.errors = errors)\r\n                            .finally(() => $scope.isSaving = false);\r\n                    })\r\n\r\n            }\r\n        }\r\n    ];\r\n\r\n    $scope.current = false;\r\n\r\n    $scope.gridOption = {\r\n        columns: columns,\r\n        commands: commands,\r\n        readUrl: generalLedgerAccountApi.url.getAll,\r\n        selectable: true,\r\n        gridSize: '200px'\r\n    };\r\n\r\n    $scope.selectGeneralLedgerAccount = current => {\r\n        $scope.gridOptionSubsidiaryLedgerAccount.readUrl =\r\n            subsidiaryLedgerAccountApi.url.getAll(current.id);\r\n        $scope.current = current;\r\n    };\r\n\r\n    $scope.createGeneralLedgerAccount = function () {\r\n        generalLedgerAccountCreateModalService.show()\r\n            .then(function () {\r\n                $scope.gridOption.refresh();\r\n            });\r\n    };\r\n\r\n    $scope.gridOptionSubsidiaryLedgerAccount = {\r\n        columns: [\r\n            {name: 'code', title: translate('Code'), type: 'string'},\r\n            {name: 'title', title: translate('Title'), type: 'string', width: '40%'},\r\n            {\r\n                name: 'isActive',\r\n                title: translate('Is active ?'),\r\n                type: 'activeType',\r\n                template: `<i class=\"fa\"\r\n                          ng-class=\"{'fa-check text-navy': item.isActive,\r\n                                     'fa-times text-danger': !item.isActive}\">\r\n                       </i>`\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                name: 'editSubsidiaryLedgerAccount',\r\n                icon: 'fa fa-edit',\r\n                action: current => {\r\n                    subsidiaryLedgerAccountEntryModalService.show({\r\n                        generalLedgerAccount: $scope.current,\r\n                        subsidiaryLedgerAccountId: current.id,\r\n                        editMode: 'edit'\r\n                    })\r\n                        .then(() => $scope.gridOptionSubsidiaryLedgerAccount.refresh());\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                icon: 'fa fa-trash',\r\n                action: (current) => {\r\n                    confirm(\r\n                        translate('Remove Subsidiary ledger account'),\r\n                        translate('Are you sure ?'))\r\n                        .then(() => {\r\n                            subsidiaryLedgerAccountApi.remove(current.id)\r\n                                .then(() => {\r\n                                    logger.success();\r\n                                    $scope.gridOptionSubsidiaryLedgerAccount.refresh();\r\n                                })\r\n                                .catch((errors) => $scope.errors = errors);\r\n                        });\r\n\r\n                }\r\n            }\r\n        ],\r\n        readUrl: '',\r\n        gridSize: '200px'\r\n    };\r\n\r\n    $scope.createSubsidiaryLedgerAccount = () => {\r\n        subsidiaryLedgerAccountEntryModalService.show({\r\n            generalLedgerAccount: $scope.current,\r\n            editMode: 'create'\r\n        })\r\n            .then(() => $scope.gridOptionSubsidiaryLedgerAccount.refresh());\r\n    };\r\n}\r\n\r\naccModule\r\n    .controller('generalLedgerAccountsController', generalLedgerAccountsController);",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction homeController($scope, currentService, navigate, journalApi, translate,\r\n                        journalCreateModalControllerService,\r\n                        journalAdvancedSearchModalService) {\r\n\r\n    let current = currentService.get();\r\n\r\n    if (!current.fiscalPeriod)\r\n        return navigate('createFiscalPeriod');\r\n\r\n    $scope.select = c => {\r\n        var x = c;\r\n        console.log(c);\r\n    };\r\n\r\n    $scope.save = () => $scope.isWaiting = !$scope.isWaiting;\r\n\r\n    journalApi.getGroupedByMouth()\r\n        .then(result => {\r\n            let items = new Collection(result.data).asEnumerable();\r\n\r\n            let colors = ['#803690', '#00ADF9', '#DCDCDC', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360'];\r\n            $scope.labels = items.select(item => item.monthName).toArray();\r\n\r\n            $scope.labelForDisplay = new Collection(colors).asEnumerable()\r\n                .take($scope.labels.length)\r\n                .select(c => ({color: c, label: $scope.labels[colors.indexOf(c)]}))\r\n                .toArray();\r\n\r\n            $scope.data = items.select(item => parseInt(item.count)).toArray();\r\n        });\r\n\r\n    journalApi.incomesAndOutcomes()\r\n        .then(result => {\r\n            let items = new Collection(result).asEnumerable()\r\n\r\n            let incomes = items\r\n                .where(item => item.amountType == 'income')\r\n                .select(item => item.amount)\r\n                .toArray();\r\n\r\n            let outcomes = items\r\n                .where(item => item.amountType == 'outcome')\r\n                .select(item => item.amount)\r\n                .toArray();\r\n\r\n            $scope.incomeAndOutcomes = [\r\n                incomes, outcomes\r\n            ];\r\n\r\n            $scope.months = items\r\n                .distinct(item => item.monthName)\r\n                .select(item => item.monthName)\r\n                .toArray();\r\n\r\n            let income = new Collection(incomes).asEnumerable().sum(),\r\n                outcome = new Collection(outcomes).asEnumerable().sum(),\r\n                total = income + outcome,\r\n                incomePercent = (income * 100) / total,\r\n                outcomePercent = (outcome * 100) / total;\r\n\r\n            $scope.totalIncomeAndOutcome = {income, outcome, incomePercent, outcomePercent};\r\n        });\r\n\r\n    $scope.incomeAndOutcomes = [];\r\n    $scope.months = [];\r\n\r\n    $scope.series = [translate('Income'), translate('Outcome')];\r\n\r\n    $scope.datasetOverride = [{yAxisID: 'y-axis-1'}, {yAxisID: 'y-axis-2'}];\r\n\r\n    $scope.options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    id: 'y-axis-1',\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left'\r\n                },\r\n                {\r\n                    id: 'y-axis-2',\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right'\r\n                }\r\n            ]\r\n        }\r\n    };\r\n\r\n    $scope.data = [];\r\n    $scope.labels = [];\r\n\r\n    journalApi.getTotalInfo().then(result => $scope.totalInfo = result);\r\n\r\n    $scope.journalCreate = () => {\r\n        journalCreateModalControllerService.show()\r\n            .then((result) => {\r\n                logger.success();\r\n                navigate('journalUpdate', {\r\n                    id: result.id\r\n                });\r\n            });\r\n    };\r\n\r\n    $scope.journalSearch = () => {\r\n        journalAdvancedSearchModalService.show()\r\n            .then((result) => {\r\n                navigate('journals', null, result);\r\n            });\r\n    };\r\n\r\n    $scope.goToJournal = () => {\r\n        if (!$scope.journalNumber) return;\r\n\r\n        journalApi.getByNumber($scope.journalNumber)\r\n            .then(result => navigate('journalUpdate', {id: result.id}));\r\n    };\r\n\r\n    /* $scope.data = [\r\n     {\r\n     row: 1,\r\n     da: 1,\r\n     sla: 100,\r\n     gla: 131,\r\n     article: 'بابت هزینه ایاب و ذهاب',\r\n     debtor: 10000,\r\n     creditor: 0\r\n     },\r\n     {\r\n     row: 1,\r\n     da: 2,\r\n     sla: 100,\r\n     gla: 131,\r\n     article: 'بابت هزینه ایاب و ذهاب',\r\n     debtor: 10000,\r\n     creditor: 0\r\n     },\r\n     {\r\n     row: 1,\r\n     da: 3,\r\n     sla: 100,\r\n     gla: 131,\r\n     article: 'بابت هزینه ایاب و ذهاب',\r\n     debtor: 10000,\r\n     creditor: 0\r\n     }\r\n     ];\r\n\r\n     let detailAccountDataSource = {\r\n     type: \"json\",\r\n     serverFiltering: true,\r\n     transport: {\r\n     read: {\r\n     url: devConstants.urls.detailAccount.all()\r\n     }\r\n     },\r\n     schema: {\r\n     data: 'data'\r\n     }\r\n     };\r\n\r\n     let articleEditor= `<dev-tag-editor ng-model=\"item.article\"></dev-tag-editor>`;\r\n\r\n     $scope.columns = [\r\n     {name: 'row', title: '#', editTemplate: '{{item.row}}'},\r\n     {\r\n     name: 'da',\r\n     title: 'تفصیل',\r\n     editTemplate: `<dev-tag-combo-box\r\n     ng-change=\"changeValue(item.da)\"\r\n     name=\"generalLedgerAccountId\"\r\n     id=\"generalLedgerAccountId\"\r\n     k-placeholder=\"{{'Select ...'|translate}}\"\r\n     k-data-value-field=\"id\"\r\n     k-data-text-field=\"display\"\r\n     k-data-source=\"column.dataSource\"\r\n     k-on-change=\"generalLedgerAccountOnChange\"\r\n     ng-model=\"item.da\"\r\n     required></dev-tag-combo-box>`,\r\n     dataSource: detailAccountDataSource\r\n     },\r\n     {name: 'sla', title: 'معین',\r\n     editTemplate: '<input style=\"height: 30px\" type=\"text\" class=\"form-control\" ng-model=\"item.sla\">'},\r\n     {name: 'gla', title: 'کل',\r\n     editTemplate: '<input style=\"height: 30px\" type=\"text\" class=\"form-control\" ng-model=\"item.gla\">'},\r\n     {name: 'article', title: 'آرتیکل',\r\n     editTemplate: `<input\r\n     type=\"text\"\r\n     required\r\n     class=\"form-control\"\r\n     name=\"article\"\r\n     ng-model=\"item.article\"\r\n     popover=\"{{item.article}}\"\r\n     popover-trigger=\"focus\"\r\n     popover-placement=\"bottom\"\r\n     tooltip=\"{{'This field is required'| translate}}\"\r\n     tooltip-placement=\"bottom\"\r\n     tooltip-trigger=\"mouseenter\"\r\n     tooltip-enable=\"subForm.article.$invalid\"/>`\r\n     },\r\n     {name: 'debtor', title: 'بدهکار',\r\n     editTemplate: `<dev-tag-numeric\r\n     style=\"height: 30px\"\r\n     ng-model=\"item.debtor\"\r\n     popover=\"{{item.debtor|number}}\"\r\n     popover-trigger=\"focus\" class=\"form-control\"\r\n     popover-placement=\"bottom\"></dev-tag-numeric>`},\r\n     {name: 'creditor', title: 'بستانکار',\r\n     editTemplate: `<dev-tag-numeric\r\n     style=\"height: 30px\"\r\n     ng-model=\"item.creditor\"\r\n     popover=\"{{item.creditor|number}}\"\r\n     popover-trigger=\"focus\" class=\"form-control\"\r\n     popover-placement=\"bottom\"></dev-tag-numeric>`},\r\n\r\n     ];\r\n\r\n     $scope.defaultItem = {\r\n     row: 1,\r\n     da: null,\r\n     sla: null,\r\n     gla: null,\r\n     article: '',\r\n     debtor: 0,\r\n     creditor: 0\r\n     };*/\r\n}\r\n\r\naccModule.controller('homeController', homeController);",
    "import accModule from '../acc.module';\r\n\r\nfunction journalCopyController($scope, translate, journalApi, navigate, devConstants, confirm) {\r\n    $scope.errors = [];\r\n\r\n    $scope.periodDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.period.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.periodOnChange = (current)=> {\r\n        $scope.gridOption.readUrl = devConstants.urls.journal.getAllByPeriod(current.id);\r\n    };\r\n\r\n    $scope.current =false;\r\n    $scope.onCurrentChanged = current => $scope.current = current;\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'temporaryNumber', title: translate('Temporary number'), width: '20%', type: 'number'},\r\n            {name: 'temporaryDate', title: translate('Temporary date'), type: 'date', width: '20%'},\r\n            {\r\n                name: 'description', title: translate('Description'), type: 'string', width: '50%',\r\n                template: '<span title=\"{{item.description}}\">{{item.description}}</span>'\r\n            }\r\n        ],\r\n        commands: [],\r\n        selectable: true\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.submit = (current)=> {\r\n\r\n        confirm(\r\n            translate('Are you sure ?'),\r\n            translate('Copy journal')\r\n        ).then(()=> {\r\n            $scope.isSaving = true;\r\n\r\n            journalApi.copy(current.id)\r\n                .then((result)=> {\r\n                    confirm(\r\n                        translate('Do you want to edit created journal ?'),\r\n                        translate('Successful'),\r\n                        'success'\r\n                    ).then(()=> {\r\n                        navigate('journalUpdate', {id: result.id});\r\n                    });\r\n                })\r\n                .finally(()=> $scope.isSaving = false)\r\n        });\r\n    };\r\n\r\n    $scope.editCreatedJournal = ()=> {\r\n        navigate('journalUpdate', {id: $scope.model.createdJournalId});\r\n    };\r\n}\r\n\r\naccModule\r\n    .controller('journalCopyController', journalCopyController);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalManagementController($scope, logger, confirm, devConstants, translate, $timeout,\r\n                                     showJournalDetailModalService,\r\n                                     journalBookkeepingService) {\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'monthName', title: translate('Month'), type: 'string'},\r\n            {name: 'count', title: translate('Count'), type: 'string'},\r\n            {name: 'minNumber', title: translate('From number'), type: 'string'},\r\n            {name: 'maxNumber', title: translate('To number'), type: 'string'},\r\n            {name: 'minDate', title: translate('From date'), type: 'string'},\r\n            {name: 'maxDate', title: translate('To date'), type: 'string'}\r\n        ],\r\n        commands: [],\r\n        readUrl: devConstants.urls.journal.getGroupedByMouth(),\r\n        current: null,\r\n        selectable: true,\r\n        filterable: false,\r\n        sortable: false,\r\n        pageable: false,\r\n        gridSize: '200px'\r\n    };\r\n\r\n    $scope.canShowJournals = false;\r\n\r\n    $scope.journalGridOption = {\r\n        columns: [\r\n            {name: 'temporaryNumber', title: translate('Temporary number'), type: 'number', width: '10%'},\r\n            {name: 'temporaryDate', title: translate('Temporary date'), type: 'date', width: '10%'},\r\n           /* {name: 'number', title: translate('Number'), type: 'number', width: '10%'},\r\n            {name: 'date', title: translate('Date'), type: 'date', width: '10%'},*/\r\n            {\r\n                name: 'isFixed', title: translate('Fixed ?'), type: 'boolean', width: '10%',\r\n                template: '<i class=\"fa fa-lock\" ng-if=\"item.isFixed\"></i>'\r\n            },\r\n            {name: 'sumAmount', title: translate('Amount'), type: 'number', width: '10%', template: '{{item.sumAmount|number}}'},\r\n            {\r\n                name: 'hasAttachment', title: translate('Attachment ?'), type: 'boolean', width: '10%',\r\n                template: '<i class=\"fa fa-paperclip\" ng-if=\"item.hasAttachment\"></i>'\r\n            },\r\n            {name: 'countOfRows', title: translate('Rows'), type: 'number', width: '10%'},\r\n            {\r\n                name: 'description', title: translate('Description'), type: 'string', width: '20%',\r\n                template: '<span  title=\"{{item.description}}\">{{item.description}}</span>'\r\n            }\r\n        ],\r\n        commands: [],\r\n        selectable: true,\r\n        readUrl: '',\r\n        gridSize: '200px'\r\n    };\r\n\r\n    $scope.current = false;\r\n\r\n    $scope.onSelectMonth = current => {\r\n        $scope.current = current;\r\n        $scope.journalGridOption.readUrl = devConstants.urls.journal.getByMonth(current.month);\r\n    };\r\n\r\n    $scope.currentJournal= false;\r\n\r\n    $scope.onSelectJournal = current => {\r\n        $scope.currentJournal = current;\r\n    };\r\n\r\n    $scope.bookkeeping = () => {\r\n        let current = $scope.currentJournal;\r\n\r\n        if (current.number)\r\n            return logger.error(translate('This journal already bookkeeped'));\r\n\r\n        journalBookkeepingService.show({id: current.id})\r\n            .then(()=> {\r\n                logger.success();\r\n                $scope.journalGridOption.refresh();\r\n            });\r\n    };\r\n\r\n    $scope.showJournal = ()=> {\r\n        let current = $scope.currentJournal;\r\n\r\n        showJournalDetailModalService\r\n            .show({\r\n                id: current.id\r\n            });\r\n    };\r\n}\r\n\r\naccModule.controller('journalManagementController', journalManagementController);\r\n",
    "import accModule from '../acc.module';\r\nimport $ from 'jquery';\r\n\r\nfunction journalPrintController($scope, $routeParams, journalApi) {\r\n\r\n    let id = $routeParams.id;\r\n    $scope.data = {};\r\n    $scope.canShowReport = false;\r\n\r\n    journalApi.getJournalReportJson(id)\r\n        .then((result)=> {\r\n            $scope.data = result;\r\n            $scope.canShowReport = true;\r\n        });\r\n\r\n}\r\n\r\naccModule.controller('journalPrintController', journalPrintController);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalTemplatesController($scope, translate, confirm, navigate, journalTemplateApi, devConstants, prompt, logger, $timeout) {\r\n    $scope.errors = [];\r\n    $scope.canShowJournalGrid = false;\r\n\r\n    $scope.periodDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.period.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.periodOnChange = (current)=> {\r\n        $scope.journalGridOption.readUrl = devConstants.urls.journal.getAllByPeriod(current.id);\r\n    };\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {\r\n                name: 'title', title: translate('Title'), width: '70%', type: 'string',\r\n                template: '<span title=\"{{item.title}}\">{{item.title}}</span>'\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('New Journal'),\r\n                action: (current)=> {\r\n                    confirm(\r\n                        translate('Are you sure ?'),\r\n                        translate('New Journal')\r\n                    ).then(()=> {\r\n                        journalTemplateApi.journalCreate(current.id)\r\n                            .then((result)=> {\r\n                                confirm(\r\n                                    translate('Do you want to edit created journal ?'),\r\n                                    translate('Successful'),\r\n                                    'success'\r\n                                ).then(()=> {\r\n                                    navigate('journalUpdate', {id: result.id});\r\n                                });\r\n                            })\r\n                            .catch((errors)=> $scope.errors = errors);\r\n                    })\r\n                }\r\n            }\r\n        ],\r\n        readUrl: devConstants.urls.journalTemplate.getAll(),\r\n        gridSize: '200px'\r\n    };\r\n\r\n    $scope.journalGridOption = {\r\n        columns: [\r\n            {name: 'temporaryNumber', title: translate('Number'), width: '10%', type: 'number'},\r\n            {name: 'temporaryDate', title: translate('Date'), type: 'date', width: '20%'},\r\n            {\r\n                name: 'description', title: translate('Description'), type: 'string', width: '50%',\r\n                template: '<span title=\"{{item.description}}\">{{item.description}}</span>'\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Copy to journal template'),\r\n                icon: 'fa fa-copy',\r\n                action: (current)=> {\r\n                    prompt({\r\n                        title: translate('Copy to journal template'),\r\n                        text: translate('Enter Title of journal template'),\r\n                    }).then((inputValue)=> {\r\n                        journalTemplateApi.create(current.id, {title: inputValue})\r\n                            .then(function () {\r\n                                logger.success();\r\n                                $scope.gridOption.refresh();\r\n                            });\r\n                    })\r\n                }\r\n            }\r\n        ],\r\n        readUrl: '',\r\n        gridSize: '200px'\r\n    };\r\n}\r\n\r\naccModule.controller('journalTemplatesController', journalTemplatesController);\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction journalUpdateController($scope, logger, confirm, translate, navigate, $routeParams, $rootScope, devConstants,\r\n                                 journalApi, journalLineApi, subsidiaryLedgerAccountApi, dimensionCategoryApi,\r\n                                 journalLineCreateControllerModalService,\r\n                                 journalLineUpdateControllerModalService,\r\n                                 journalBookkeepingService,\r\n                                 journalAttachImageService,\r\n                                 writeChequeOnJournalLineEntryService,\r\n                                 tagApi,\r\n                                 formService) {\r\n\r\n    let id = $routeParams.id;\r\n\r\n    $scope.errors = [];\r\n\r\n    $scope.journalStatueForTitle = {\r\n        icon: '',\r\n        color: '',\r\n        title: '',\r\n    };\r\n\r\n    $scope.journal = {\r\n        temporaryNumber: null,\r\n        temporaryDate: null,\r\n        number: null,\r\n        date: null,\r\n        description: '',\r\n        tagIds: [],\r\n        journalType: null\r\n    };\r\n\r\n    $scope.journalTypeData = devConstants.enums.JournalType().data;\r\n\r\n    $scope.canShowNumberAndDate = false;\r\n\r\n    function fetch() {\r\n        journalApi.getById(id)\r\n            .then(result => {\r\n                $scope.journal = result;\r\n\r\n                $scope.canShowNumberAndDate = result.journalStatus != 'Temporary';\r\n\r\n                let status = $scope.journalStatueForTitle;\r\n\r\n                if ($scope.journal.isInComplete) {\r\n                    status.icon = 'warning';\r\n                    status.color = 'red';\r\n                    status.title = translate('InComplete journal');\r\n                }\r\n                else {\r\n                    if ($scope.journal.journalStatus == 'Fixed') {\r\n                        status.icon = 'lock';\r\n                        status.color = 'blue';\r\n                        status.title = $scope.journal.journalStatusDisplay;\r\n                    } else {\r\n                        status.icon = 'check';\r\n                        status.color = 'green';\r\n                        status.title = $scope.journal.journalStatusDisplay;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    fetch();\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {\r\n                name: 'row', title: '#', width: '70px', type: 'number',\r\n                filterable: false\r\n            },\r\n            {\r\n                name: 'detailAccountId',\r\n                title: translate('Detail account'),\r\n                type: 'detailAccount',\r\n                template: '{{item.detailAccountCode}}',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'subsidiaryLedgerAccountId',\r\n                title: translate('Subsidiary ledger account'),\r\n                type: 'subsidiaryLedgerAccount',\r\n                template: '{{item.subsidiaryLedgerAccountCode}}',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'generalLedgerAccountId',\r\n                title: translate('General ledger account'),\r\n                type: 'generalLedgerAccount',\r\n                template: '{{item.generalLedgerAccountCode}}',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'article', title: translate('Article'), type: 'string',\r\n                width: '30%',\r\n                template: '<span title=\"{{item.article}}\">{{item.article}}</span>'\r\n            },\r\n            {\r\n                name: 'debtor', title: translate('Debtor'), width: '120px', type: 'number',\r\n                template: '{{item.debtor | number}}',\r\n                aggregates: ['sum'],\r\n                footerTemplate: \"{{aggregates.debtor.sum | number}}\"\r\n            },\r\n            {\r\n                name: 'creditor', title: translate('Creditor'), width: '120px', type: 'number',\r\n                template: '{{item.creditor | number}}',\r\n                aggregates: ['sum'],\r\n                footerTemplate: \"{{aggregates.creditor.sum | number}}\"\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                icon: 'fa fa-edit',\r\n                action: function (current) {\r\n                    journalLineUpdateControllerModalService\r\n                        .show({\r\n                            journalId: id,\r\n                            id: current.id\r\n                        })\r\n                        .then(() => $scope.gridOption.refresh());\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                icon: 'fa fa-trash',\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove General ledger account'),\r\n                        translate('Are you sure ?'))\r\n                        .then(function () {\r\n                            journalLineApi.remove(current.id)\r\n                                .then(function () {\r\n                                    logger.success();\r\n                                    $scope.gridOption.refresh();\r\n                                })\r\n                                .catch((errors) =>\r\n                                    logger.error(errors.join('<b/>')));\r\n                        })\r\n\r\n                }\r\n            }\r\n        ],\r\n        selectable: true,\r\n        filterable: false,\r\n        readUrl: journalLineApi.url.getAll(id),\r\n        gridSize: '300px'\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form) => {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        Collection.removeAll($scope.errors);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        journalApi.update(id, $scope.journal)\r\n            .then(() => {\r\n                logger.success();\r\n            })\r\n            .catch((errors) => $scope.errors = errors)\r\n            .finally(() => $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.createJournalLine = () => {\r\n        journalLineCreateControllerModalService\r\n            .show({journalId: id})\r\n            .then(isInComplete => {\r\n                $scope.gridOption.refresh();\r\n                $scope.journal.isInComplete = isInComplete;\r\n            });\r\n    };\r\n\r\n    $scope.bookkeeping = () => {\r\n        journalBookkeepingService.show({id: id})\r\n            .then(() => {\r\n                logger.success();\r\n                fetch();\r\n            });\r\n    };\r\n\r\n    $scope.attachImage = () => {\r\n        journalAttachImageService.show({id: id})\r\n            .then(fileName => {\r\n                $scope.journal.attachmentFileName = fileName;\r\n                logger.success();\r\n            });\r\n    };\r\n\r\n    $scope.print = () => navigate('journalPrint', {id: id});//showReport(`/report/journal/${id}`);\r\n\r\n    $scope.writeCheque = () => {\r\n        $rootScope.blockUi.block();\r\n\r\n        let current = $scope.journalLineCurrent;\r\n        subsidiaryLedgerAccountApi.getById(current.subsidiaryLedgerAccountId)\r\n            .then((result) => {\r\n                $rootScope.blockUi.unBlock();\r\n\r\n                if (result.isBankAccount) {\r\n                    writeChequeOnJournalLineEntryService.show({\r\n                        journalLineId: current.id,\r\n                        detailAccountId: current.detailAccountId,\r\n                        detailAccountDisplay: current.detailAccountDisplay,\r\n                        amount: current.creditor,\r\n                        description: current.article,\r\n                        date: $scope.journal.date\r\n                    }).then(() => {\r\n                        $scope.gridOption.refresh();\r\n                        logger.success();\r\n                    });\r\n                }\r\n                else {\r\n                    logger.error(translate('The current subsidiaryLedgerAccount is not bank account'));\r\n                }\r\n            });\r\n\r\n\r\n    };\r\n    $scope.journalLineCurrent = false;\r\n    $scope.journalLineCurrentChanged = (current) => {\r\n        $scope.journalLineCurrent = current;\r\n    };\r\n\r\n    $scope.dimensionCategories = {};\r\n\r\n    dimensionCategoryApi.getAllLookup()\r\n        .then((result) => {\r\n            let cats = result.data;\r\n            $scope.dimensionCategories = cats;\r\n        });\r\n\r\n    $scope.tagsDataSource = new kendo.data.DataSource({\r\n        batch: true,\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.tag.getAll()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    });\r\n\r\n    $scope.onSaveTag = value => {\r\n      return tagApi.create({title: value});\r\n    };\r\n}\r\n\r\naccModule.controller('journalUpdateController', journalUpdateController);\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction journalsController($scope, translate, journalApi, navigate, logger,\r\n                            journalCreateModalControllerService,\r\n                            journalAdvancedSearchModalService,\r\n                            journalsExtraFilterResolve) {\r\n\r\n    $scope.searchParameters = false;\r\n    []\r\n\r\n    $scope.gridOption = {\r\n        name: 'journals',\r\n        columns: [\r\n            {\r\n                name: 'journalStatus',\r\n                title: translate('Status'),\r\n                type: 'journalStatus',\r\n                width: '120px',\r\n                template: `<i title=\"{{item.statusTitle}}\" \r\n                            class=\"fa fa-{{item.statusIcon}}\"\r\n                            style=\"color: {{item.statusColor}};\"></i>`\r\n            },\r\n            {name: 'temporaryNumber', title: translate('Number'), width: '120px', type: 'number'},\r\n            {name: 'temporaryDate', title: translate('Date'), type: 'date', width: '120px',},\r\n           /* {name: 'number', title: translate('Number'), width: '100px', type: 'number'},\r\n            {name: 'date', title: translate('Date'), type: 'date', width: '100px',},*/\r\n            {\r\n                name: 'description', title: translate('Description'), type: 'string', width: '30%',\r\n                template: '<span title=\"{{item.description}}\">{{item.description}}</span>'\r\n            },\r\n            {name: 'createdBy', title: translate('User'), width: '100px', type: 'string'}\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                icon: 'fa fa-edit',\r\n                action: function (current) {\r\n                    navigate('journalUpdate', {\r\n                        id: current.id\r\n                    });\r\n                }\r\n            }\r\n        ],\r\n        readUrl: journalApi.url.getAll,\r\n        mapper: (d) => {\r\n            d.statusTitle = d.journalStatusDisplay;\r\n            if (d.isInComplete) {\r\n                d.statusIcon = 'warning';\r\n                d.statusColor = 'red';\r\n                d.statusTitle = translate('InComplete journal');\r\n            }\r\n            else {\r\n                if (d.journalStatus == 'Fixed') {\r\n                    d.statusIcon = 'lock';\r\n                    d.statusColor = 'blue';\r\n                } else {\r\n                    d.statusIcon = 'check';\r\n                    d.statusColor = 'green';\r\n                }\r\n            }\r\n        },\r\n        resolveExtraFilter: journalsExtraFilterResolve,\r\n        setExtraFilter: (extra) => {\r\n            $scope.searchParameters = extra;\r\n        }\r\n    };\r\n\r\n    $scope.create = () => {\r\n        journalCreateModalControllerService.show()\r\n            .then((result) => {\r\n                logger.success();\r\n                navigate('journalUpdate', {\r\n                    id: result.id\r\n                });\r\n            });\r\n    };\r\n\r\n    $scope.advancedSearch = () => {\r\n        journalAdvancedSearchModalService.show()\r\n            .then((result) => {\r\n                $scope.searchParameters = result;\r\n\r\n                $scope.$broadcast('{0}/execute-advanced-search'.format($scope.gridOption.name),\r\n                    result.resolve(result.data));\r\n            });\r\n    };\r\n\r\n    $scope.removeParameters = () => {\r\n        $scope.searchParameters = false;\r\n        $scope.$broadcast('{0}/execute-advanced-search'\r\n            .format($scope.gridOption.name), null);\r\n    };\r\n\r\n    $scope.$on('$routeChangeStart', (next, current) => {\r\n        $scope.gridOption.saveState($scope.searchParameters);\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalsController', journalsController)\r\n    .factory('journalsExtraFilterResolve', () => {\r\n        return function (filterData) {\r\n            if (!filterData) return null;\r\n\r\n            let instance = angular.extend({}, filterData);\r\n\r\n            instance.generalLedgerAccounts = new Collection(filterData.generalLedgerAccounts)\r\n                .asEnumerable()\r\n                .select((g) => g.id)\r\n                .toArray();\r\n\r\n            instance.subsidiaryLedgerAccounts = new Collection(filterData.subsidiaryLedgerAccounts)\r\n                .asEnumerable()\r\n                .select((s) => s.id)\r\n                .toArray();\r\n\r\n            instance.detailAccounts = new Collection(filterData.detailAccounts)\r\n                .asEnumerable()\r\n                .select((d) => d.id)\r\n                .toArray();\r\n\r\n            instance.dimension1s = new Collection(filterData.dimension2s)\r\n                .asEnumerable()\r\n                .select((d) => d.id)\r\n                .toArray();\r\n\r\n            instance.dimension2s = new Collection(filterData.dimension2s)\r\n                .asEnumerable()\r\n                .select((d) => d.id)\r\n                .toArray();\r\n\r\n            instance.dimension3s = new Collection(filterData.dimension3s)\r\n                .asEnumerable()\r\n                .select((d) => d.id)\r\n                .toArray();\r\n\r\n            instance.dimension4s = new Collection(filterData.dimension4s)\r\n                .asEnumerable()\r\n                .select((d) => d.id)\r\n                .toArray();\r\n\r\n            instance.chequeNumbers = new Collection(filterData.chequeNumbers)\r\n                .asEnumerable()\r\n                .select((c) => c.id)\r\n                .toArray();\r\n\r\n\r\n            return instance;\r\n        }\r\n    });",
    "import Collection from 'dev.collection';\r\n\r\nexport default function ($scope, devConstants, dimensionCategoryApi, reportApi, translate) {\r\n\r\n    $scope.reports = devConstants.reports;\r\n    $scope.mode = 'view';\r\n    $scope.data = [];\r\n    $scope.selectedReport = false;\r\n    $scope.fileName = false;\r\n    $scope.reportTitle = '';\r\n\r\n    $scope.select = report => $scope.selectedReport = report;\r\n    $scope.isActiveFirstTab = true;\r\n\r\n    $scope.viewerTabs = [];\r\n\r\n    $scope.addViewerTab = () => {\r\n        deactivateAllTab();\r\n\r\n        let report = $scope.selectedReport,\r\n            params = resolveFilter($scope.journalSearch);\r\n\r\n        reportApi[report.func](params)\r\n            .then(result => {\r\n                $scope.data = result.data;\r\n                $scope.viewerTabs.push({title: report.text, isActive: true, fileName: report.fileName});\r\n            });\r\n    };\r\n\r\n    $scope.closeViewerTab = tab => Collection.remove($scope.viewerTabs, tab);\r\n\r\n    $scope.design = report => {\r\n        let params = resolveFilter($scope.journalSearch);\r\n        $scope.fileName = report.fileName;\r\n        $scope.reportTitle = report.text;\r\n\r\n        if (!report.func) {\r\n            $scope.mode = 'design';\r\n            return;\r\n        }\r\n\r\n        reportApi[report.func](params)\r\n            .then(result => {\r\n                $scope.data = result.data;\r\n                $scope.mode = 'design';\r\n            });\r\n    };\r\n\r\n    $scope.onExitDesign = () => $scope.mode = 'view';\r\n\r\n    $scope.closeDesignerTab = tab => Collection.remove($scope.designerTabs, tab);\r\n\r\n    function deactivateAllTab() {\r\n        $scope.isActiveFirstTab = false;\r\n        $scope.viewerTabs.forEach(t => t.isActive = false);\r\n    }\r\n\r\n    $scope.execute = () => resolveFilter($scope.journalSearch);\r\n    //search parameter cals\r\n\r\n    $scope.journalSearch = {\r\n        title: '',\r\n        minNumber: null,\r\n        maxNumber: null,\r\n        minDate: null,\r\n        maxDate: null,\r\n        generalLedgerAccounts: [],\r\n        subsidiaryLedgerAccounts: [], //combination of generalLedgerAccount and subsidiaryLedgerAccount\r\n        detailAccounts: [],\r\n        dimension1s: [],\r\n        dimension2s: [],\r\n        dimension3s: [],\r\n        dimension4s: [],\r\n        chequeNumbers: [],\r\n        minChequeDate: null,\r\n        maxChequeDate: null,\r\n        chequeDescription: '',\r\n        isNotPeriodIncluded: false\r\n    };\r\n\r\n    $scope.generalLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.generalLedgerAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.subsidiaryLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.subsidiaryLedgerAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.dimension1DataSource = {};\r\n    $scope.dimension2DataSource = {};\r\n    $scope.dimension3DataSource = {};\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result) => {\r\n            let cats = result.data;\r\n            $scope.dimensionCategories = cats;\r\n\r\n            $scope.dimension1DataSource = dimensionDataSourceFactory(cats[0].id);\r\n            $scope.dimension2DataSource = dimensionDataSourceFactory(cats[1].id);\r\n            $scope.dimension3DataSource = dimensionDataSourceFactory(cats[2].id);\r\n        });\r\n\r\n    function dimensionDataSourceFactory(categoryId) {\r\n        return {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: devConstants.urls.dimension.allByCategory(categoryId)\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        };\r\n    }\r\n\r\n    $scope.chequeDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.cheque.allUseds()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    function resolveFilter(filterData) {\r\n\r\n        let instance = angular.extend({}, filterData);\r\n\r\n        instance.generalLedgerAccounts = new Collection(filterData.generalLedgerAccounts)\r\n            .asEnumerable()\r\n            .select((g) => g.id)\r\n            .toArray();\r\n\r\n        instance.subsidiaryLedgerAccounts = new Collection(filterData.subsidiaryLedgerAccounts)\r\n            .asEnumerable()\r\n            .select((s) => s.id)\r\n            .toArray();\r\n\r\n        instance.detailAccounts = new Collection(filterData.detailAccounts)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.dimension1s = new Collection(filterData.dimension2s)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.dimension2s = new Collection(filterData.dimension2s)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.dimension3s = new Collection(filterData.dimension3s)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.dimension4s = new Collection(filterData.dimension4s)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.chequeNumbers = new Collection(filterData.chequeNumbers)\r\n            .asEnumerable()\r\n            .select((c) => c.id)\r\n            .toArray();\r\n\r\n\r\n        return instance;\r\n    }\r\n\r\n}\r\n\r\n",
    "export default function ($scope,$routeParams) {\r\n    $scope.fileName = $routeParams.fileName;\r\n}\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction subsidiaryLedgerAccountCreateController($scope, logger, navigate, $routeParams,\r\n                                                 devConstants, formService,\r\n                                                 subsidiaryLedgerAccountApi,\r\n                                                 dimensionCategoryApi) {\r\n\r\n    let generalLedgerAccountId = $routeParams.generalLedgerAccountId;\r\n\r\n    $scope.errors = [];\r\n    $scope.assignmentStatus = devConstants.enums.AssignmentStatus().data;\r\n\r\n    $scope.subsidiaryLedgerAccount = {\r\n        generalLedgerAccountId: generalLedgerAccountId,\r\n        code: '',\r\n        title: '',\r\n        detailAccountAssignmentStatus: null,\r\n        isBankAccount: false,\r\n        dimension1AssignmentStatus: null,\r\n        dimension2AssignmentStatus: null,\r\n        dimension3AssignmentStatus: null,\r\n    };\r\n\r\n    $scope.dimensionCategories = [];\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result)=> {\r\n            $scope.dimensionCategories = result.data;\r\n        });\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n        if (form.$invalid) {\r\n            formService.setDirty(form);\r\n            return;\r\n        }\r\n\r\n        $scope.isSaving = true;\r\n\r\n        subsidiaryLedgerAccountApi.create(\r\n            generalLedgerAccountId,\r\n            $scope.subsidiaryLedgerAccount)\r\n            .then(() => {\r\n                logger.success();\r\n                navigate(\r\n                    'subsidiaryLedgerAccounts',\r\n                    {generalLedgerAccountId: generalLedgerAccountId});\r\n            }).catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    }\r\n}\r\n\r\naccModule\r\n    .controller('subsidiaryLedgerAccountCreateController', subsidiaryLedgerAccountCreateController);",
    "import accModule from '../acc.module';\r\n\r\nfunction subsidiaryLedgerAccountUpdateController($scope, logger, navigate, devConstants,\r\n                                                 $routeParams, formService,\r\n                                                 subsidiaryLedgerAccountApi,\r\n                                                 dimensionCategoryApi) {\r\n    let id = $routeParams.id;\r\n\r\n    $scope.errors = [];\r\n    $scope.assignmentStatus = new devConstants.enums.AssignmentStatus().data\r\n    $scope.dimensionCategories = [];\r\n\r\n    $scope.subsidiaryLedgerAccount = {\r\n        code: '',\r\n        title: '',\r\n        detailAccountAssignmentStatus: null,\r\n        isBankAccount: false,\r\n        dimension1AssignmentStatus: null,\r\n        dimension2AssignmentStatus: null,\r\n        dimension3AssignmentStatus: null,\r\n        isActive: true\r\n    };\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result)=> {\r\n            $scope.dimensionCategories = result.data;\r\n        });\r\n\r\n    subsidiaryLedgerAccountApi.getById(id)\r\n        .then((result)=>\r\n            $scope.subsidiaryLedgerAccount = result);\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n\r\n        if (form.$invalid) {\r\n            formService.setDirty(form);\r\n            return;\r\n        }\r\n\r\n        $scope.isSaving = true;\r\n\r\n        subsidiaryLedgerAccountApi\r\n            .update(id, $scope.subsidiaryLedgerAccount)\r\n            .then(()=> {\r\n                logger.success();\r\n                navigate('subsidiaryLedgerAccounts', {\r\n                    generalLedgerAccountId: $scope.subsidiaryLedgerAccount.generalLedgerAccountId\r\n                });\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    }\r\n\r\n    $scope.isActivating = false;\r\n\r\n    $scope.activate = ()=> {\r\n        $scope.isActivating = true;\r\n\r\n        subsidiaryLedgerAccountApi.activate(id)\r\n            .then(()=> {\r\n                logger.success();\r\n                $scope.subsidiaryLedgerAccount.isActive = true;\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isActivating = false);\r\n    };\r\n\r\n\r\n    $scope.isDeactivating = false;\r\n\r\n    $scope.deactivate = ()=> {\r\n        $scope.isDeactivating = true;\r\n\r\n        subsidiaryLedgerAccountApi.deactivate(id)\r\n            .then(()=> {\r\n                logger.success();\r\n                $scope.subsidiaryLedgerAccount.isActive = false;\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isDeactivating = false);\r\n    };\r\n}\r\n\r\naccModule.controller(\r\n    'subsidiaryLedgerAccountUpdateController',\r\n    subsidiaryLedgerAccountUpdateController);",
    "import accModule from '../acc.module';\r\n\r\nfunction subsidiaryLedgerAccountsController($scope, logger, confirm, navigate, $routeParams, translate,\r\n                                            subsidiaryLedgerAccountApi) {\r\n\r\n    let generalLedgerAccountId = $routeParams.generalLedgerAccountId;\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'code', title: translate('Code'), width: '200px', type: 'string'},\r\n            {name: 'title', title: translate('Title'), type: 'string'},\r\n            {\r\n                name: 'isActive',\r\n                title: translate('Is active ?'),\r\n                type: 'activeType',\r\n                width: '170px',\r\n                template: '<i class=\"glyphicon glyphicon-${data.isActive ? \"ok-circle\" : \"remove-circle\"}\"' +\r\n                'style=\"font-size: 20px;color:${data.isActive ? \"green\" : \"red\"}\">' +\r\n                '</i>'\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                name: 'editSubsidiaryLedgerAccount',\r\n                action: (current) => {\r\n                    navigate('subsidiaryLedgerAccountUpdate', {\r\n                        id: current.id\r\n                    });\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                action: (current) => {\r\n                    confirm(\r\n                        translate('Remove Subsidiary ledger account'),\r\n                        translate('Are you sure ?'))\r\n                        .then(()=> {\r\n                            subsidiaryLedgerAccountApi.remove(current.id)\r\n                                .then(()=> {\r\n                                    logger.success();\r\n                                    $scope.gridOption.refresh();\r\n                                })\r\n                                .catch((errors)=> $scope.errors = errors);\r\n                        });\r\n\r\n                }\r\n            }\r\n        ],\r\n        readUrl: subsidiaryLedgerAccountApi.url.getAll(generalLedgerAccountId)\r\n    };\r\n\r\n    $scope.create = ()=> {\r\n        navigate('subsidiaryLedgerAccountCreate', {\r\n            generalLedgerAccountId: generalLedgerAccountId\r\n        });\r\n    }\r\n}\r\n\r\naccModule\r\n    .controller('subsidiaryLedgerAccountsController', subsidiaryLedgerAccountsController);",
    "import accModule from '../acc.module';\r\n\r\nfunction alertTag() {\r\n    let alertType = {\r\n        warning: {icon: 'warning-sign'},\r\n        success: {icon: 'ok-sign'},\r\n        danger: {icon: 'remove-sign'},\r\n        info: {icon: 'info=sign'}\r\n    }\r\n    return {\r\n        restrict: 'E',\r\n        template: '<div class=\"alert alert-{{type}}\" role=\"alert\" style=\"margin-top: 10px\"' +\r\n        'ng-if=\"show\">' +\r\n        '<span class=\"glyphicon glyphicon-{{icon}}\"></span>' +\r\n        '<label>{{text}}</label>' +\r\n        '</div>',\r\n        scope: {\r\n            show: '='\r\n        },\r\n        link: function (scope, element, attrs) {\r\n            scope.text = attrs.text;\r\n            scope.type = attrs.type;\r\n            scope.icon = alertType[scope.type].icon;\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagAlert', alertTag);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction blockUi() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/blockUi.html',\r\n        transclude: true,\r\n        link: function (scope, element, attrs) {\r\n\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagBlockUi', blockUi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction button() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/button-template.html',\r\n        replace: true,\r\n        scope: {\r\n            isWaiting: '=',\r\n            icon: '@',\r\n            styleType: '@',\r\n            title: '@'\r\n        },\r\n        link: function (scope, element, attrs) {\r\n\r\n        }\r\n    };\r\n}\r\n\r\n\r\naccModule.directive('devTagButton', button);",
    "import Chart from 'chart.js';\r\nimport Collection from 'dev.collection';\r\n\r\nexport default function () {\r\n    return {\r\n        restrict: 'E',\r\n        template: '<canvas width=\"400\" height=\"400\"></canvas>',\r\n        replace: true,\r\n        link: (scope, element, attrs) => {\r\n            let ctx = element,\r\n                colors = [\r\n                    '#07f3a4',\r\n                    '#98f3d4',\r\n                    '#e0f3ec',\r\n                    '#ff6384',\r\n                    '#eaadba',\r\n                    '#f5dae0',\r\n                    '#ffce56',\r\n                    '#f7e4b7',\r\n                    '#f3ead6',\r\n                    '#36a2eb',\r\n                    '#88c0e6',\r\n                    '#b3d8f1'\r\n                ],\r\n                labels = eval(`scope.${attrs.kLabels}`),\r\n                usableColors = new Collection(colors)\r\n                    .asEnumerable()\r\n                    .take(labels.length)\r\n                    .toArray(),\r\n                data = {\r\n                    labels: labels,\r\n                    datasets: [\r\n                        {\r\n                            data: eval(`scope.${attrs.kDataSource}`),\r\n                            backgroundColor: usableColors,\r\n                            hoverBackgroundColor: usableColors\r\n                        }\r\n                    ]\r\n                },\r\n                chart = new Chart(ctx, {\r\n                    type: 'doughnut',\r\n                    data: data,\r\n                    //options: options\r\n                });\r\n        }\r\n    }\r\n}",
    "import accModule from '../acc.module';\r\n\r\nfunction checkBox() {\r\n\r\n    return {\r\n        transclude: true,\r\n        restrict: 'E',\r\n        require: 'ngModel',\r\n        templateUrl: 'partials/templates/checkbox-template.html',\r\n        link: (scope, element, attrs, ngModel) => {\r\n            let $element = $(element),\r\n                icheckbox = $element.find('.icheckbox_square-green');\r\n\r\n            $element.click(function () {\r\n                scope.$apply(()=> {\r\n                    if(ngModel.$viewValue) {\r\n                        icheckbox.removeClass('checked');\r\n                        ngModel.$setViewValue(false);\r\n                    }\r\n                    else {\r\n                        icheckbox.addClass('checked');\r\n                        ngModel.$setViewValue(true);\r\n                    }\r\n                });\r\n            });\r\n\r\n            ngModel.$render = function () {\r\n                if (ngModel.$viewValue) {\r\n                    icheckbox.addClass(\"checked\");\r\n                } else {\r\n                    icheckbox.removeClass(\"checked\");\r\n                }\r\n            };\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagCheckBox', checkBox);",
    "import accModule from '../acc.module';\r\nimport 'kendo-core';\r\nimport 'kendo-data';\r\nimport 'kendo-list';\r\nimport 'kendo-popup';\r\nimport 'kendo-combobox';\r\n\r\nfunction combobox() {\r\n    return {\r\n        require: 'ngModel',\r\n        restrict: 'E',\r\n        replace: true,\r\n        template: '<input  style=\"width: 100%;\" />',\r\n        link: function (scope, element, attrs, ngModel) {\r\n            let options = {\r\n                placeholder: attrs.kPlaceholder,\r\n                dataTextField: attrs.kDataTextField,\r\n                dataValueField: attrs.kDataValueField,\r\n                valuePrimitive: true,\r\n                filter: \"contains\",\r\n                autoBind: false,\r\n                minLength: 3,\r\n                dataSource: eval(`scope.${attrs.kDataSource}`),\r\n                select: function (e) {\r\n                    let dataItem = this.dataItem(e.item.index());\r\n                    ngModel.$setViewValue(dataItem[scope.dataValueField]);\r\n                    if (scope[attrs.kOnChanged])\r\n                        scope[attrs.kOnChanged](dataItem);\r\n\r\n                    scope.$apply();\r\n                },\r\n                dataBound: function (e) {\r\n                    if (scope[attrs.kOnDataBound])\r\n                        scope[attrs.kOnDataBound](e);\r\n                }\r\n            };\r\n\r\n            if (attrs.kCascadeFrom){\r\n                options.cascadeFrom = attrs.kCascadeFrom;\r\n                options.cascadeFromField = attrs.kCascadeFrom;\r\n            }\r\n\r\n            let combo = $(element).kendoComboBox(options).data(\"kendoComboBox\");\r\n\r\n            scope.$watch(attrs.ngModel, newValue => {\r\n                combo.value(newValue);\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagComboBox', combobox);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction content() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/content-template.html',\r\n        transclude: true,\r\n        replace: true,\r\n        scope: {},\r\n        link: function (scope, element, attrs) {\r\n            let $element = $(element),\r\n                title_template = `<div class=\"ibox-title panel-primary\">\r\n                                    <h5>${attrs.devAttrTitle}</h5>     \r\n                                 </div>`,\r\n                content = $element.children();\r\n\r\n            if ($element.find('.ibox-title').length == 0)\r\n                $element.prepend(title_template);\r\n\r\n            if ($element.find('.ibox-content').length == 0){\r\n                content = $('<div class=\"ibox-content\"></div>').append(content);\r\n                $element.append(content);\r\n            }\r\n\r\n        }\r\n    };\r\n}\r\n\r\naccModule\r\n    .directive('devTagContent', content)\r\n    .directive('devTagContentHeading', function () {\r\n        return {\r\n            restrict: 'E',\r\n            template: `<div class=\"ibox-title panel-primary\" ng-transclude></div>`,\r\n            transclude: true,\r\n            replace: true\r\n        };\r\n    })\r\n    .directive('devTagContentBody', function () {\r\n        return {\r\n            restrict: 'E',\r\n            template: `<div class=\"ibox-content\" ng-transclude></div>`,\r\n            transclude: true,\r\n            replace: true\r\n        };\r\n    })\r\n    .directive('devTagContentFooter', function () {\r\n        return {\r\n            restrict: 'E',\r\n            template: `<div class=\"ibox-footer\" ng-transclude></div>`,\r\n            transclude: true,\r\n            replace: true\r\n        };\r\n    });\r\n",
    "\"use strict\";\r\n\r\nexport function contentCover(){\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/content-cover.html',\r\n        scope: false,\r\n        transclude: true,\r\n        replace: true,\r\n        link:  (scope, element, attrs) => {\r\n\r\n        }\r\n    };\r\n}\r\n\r\nexport function contentCoverForm(){\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/content-cover-form.html',\r\n        scope: false,\r\n        transclude: true,\r\n        replace: true,\r\n        link:  (scope, element, attrs) => {\r\n\r\n        }\r\n    };\r\n}\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\n\r\nfunction customValidator() {\r\n    return {\r\n        restrict: 'A',\r\n        require: 'ngModel',\r\n        link: function (scope, element, attr, ctrl) {\r\n\r\n            function customValidator(ngModelValue) {\r\n                if (ngModelValue == 0)\r\n                    ctrl.$setValidity('notZero', false);\r\n                else\r\n                    ctrl.$setValidity('notZero', true);\r\n\r\n                return ngModelValue;\r\n            }\r\n\r\n            ctrl.$parsers.push(customValidator);\r\n        }\r\n    }\r\n}\r\n\r\naccModule.directive('notZero', customValidator);",
    "import accModule from '../acc.module';\r\n\r\nfunction datepicker() {\r\n    return {\r\n        require: 'ngModel',\r\n        restrict: 'E',\r\n        template: '<adm-dtp ng-model=\"ngModel\"></adm-dtp>',\r\n        scope: {ngModel: '='}\r\n    };\r\n}\r\n\r\naccModule.directive('devTagDatepicker', datepicker);",
    "import $ from 'jquery';\r\nimport accModule from '../acc.module';\r\nimport 'kendo-core';\r\nimport 'kendo-data';\r\nimport 'kendo-list';\r\nimport 'kendo-popup';\r\nimport 'kendo-dropdownlist';\r\n\r\nfunction dropdownlist($timeout) {\r\n    return {\r\n        restrict: 'E',\r\n        require: 'ngModel',\r\n        template: '<select></select>',\r\n        replace: true,\r\n        link: function (scope, element, attrs, ngModel) {\r\n            $timeout(() => {\r\n                let option = {\r\n                    dataSource: scope[attrs.kDataSource],\r\n                    change(e){\r\n                        let item = e.sender.dataItem(),\r\n                        value = (attrs.kDataValueField && attrs.kDataValueField != '')\r\n                            ? item[attrs.kDataValueField]\r\n                            : item;\r\n\r\n                        scope.$apply(() => {\r\n                            ngModel.$setViewValue(value);\r\n\r\n                            if (scope[attrs.kOnChanged])\r\n                                scope[attrs.kOnChanged](item);\r\n                        });\r\n                    }\r\n                };\r\n\r\n                if (attrs.kOptionLabel && attrs.kOptionLabel != '')\r\n                    option.optionLabel = attrs.kOptionLabel;\r\n\r\n                if (attrs.kDataTextField && attrs.kDataTextField != '')\r\n                    option.dataTextField = attrs.kDataTextField;\r\n\r\n                if (attrs.kDataValueField && attrs.kDataValueField != '')\r\n                    option.dataValueField = attrs.kDataValueField;\r\n\r\n                let dropdown = $(element).kendoDropDownList(option)\r\n                    .data('kendoDropDownList');\r\n\r\n                scope.$watch(attrs.ngModel, newValue => dropdown.value(newValue));\r\n            });\r\n\r\n\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagDropdownlist', dropdownlist);",
    "import accModule from '../acc.module';\r\n\r\naccModule.directive('focusMe', function ($timeout, $parse) {\r\n    return {\r\n        link: function (scope, element, attrs) {\r\n            var model = $parse(attrs.focusMe);\r\n            scope.$watch(model, function (value) {\r\n                console.log('value=', value);\r\n                if (value === true) {\r\n                    $timeout(function () {\r\n                        element[0].focus();\r\n                    }, 3000);\r\n                }\r\n            });\r\n            element.bind('blur', function () {\r\n                console.log('blur')\r\n                model.assign(scope, false);\r\n            })\r\n        }\r\n    };\r\n});\r\n",
    "import Collection from 'dev.collection';\r\nimport Guid from 'dev.guid';\r\nimport 'dataTables';\r\n\r\nexport default function (apiPromise, $timeout) {\r\n    return {\r\n        restrict: 'E',\r\n        transclude: true,\r\n        templateUrl: 'partials/templates/grid-template.html',\r\n        scope: {\r\n            option: '=',\r\n            detailOption: '=',\r\n            onCurrentChanged: '&'\r\n        },\r\n        link: (scope, element, attrs) => {\r\n            let extra = scope.option.extra || null;\r\n\r\n            let option = scope.option;\r\n            scope.gridId = Guid.new();\r\n\r\n\r\n            scope.columns = scope.option.columns;\r\n            scope.grid = {\r\n                sortable: (option.sortable == undefined) ? true : option.sortable,\r\n                filterable: (option.filterable == undefined) ? true : option.filterable,\r\n                selectable: option.selectable\r\n            };\r\n            scope.data = [];\r\n            scope.total = 0;\r\n            scope.pageOption = {};\r\n            scope.isWaiting = false;\r\n            scope.pageable = (option.pageable == undefined)\r\n                ? true\r\n                : option.pageable;\r\n\r\n            let commands = scope.option.commands;\r\n\r\n            if (commands && commands.length > 0)\r\n                scope.columns.push({commands});\r\n\r\n            scope.current = false;\r\n            scope.select = current => {\r\n                if (!option.selectable)\r\n                    return;\r\n                scope.current = current;\r\n                scope.onCurrentChanged({current});\r\n            };\r\n            scope.option.refresh = () => scope.pageOption.refresh();\r\n            scope.option.addItem = newItem => scope.data.unshift(newItem);\r\n            scope.option.removeItem = item => Collection.remove(scope.data, item);\r\n\r\n            function fetch(page) {\r\n                if (!option.readUrl) return;\r\n\r\n                parameters = angular.extend({}, parameters, page);\r\n\r\n                scope.isWaiting = true;\r\n\r\n                apiPromise.get(option.readUrl, parameters)\r\n                    .then(result => {\r\n                        let data = result.data;\r\n\r\n                        if (option.mapper)\r\n                            data.forEach(scope.option.mapper);\r\n\r\n                        if (scope.detailTemplate)\r\n                            data.forEach(item => item.expanded = false);\r\n\r\n                        scope.data = data;\r\n                        scope.total = result.total;\r\n                        scope.aggregates = result.aggregates;\r\n\r\n                        let selector = `#${scope.gridId}`;\r\n                        let table;\r\n\r\n                        if ($.fn.dataTable.isDataTable(selector)) {\r\n                            table = $(selector).DataTable();\r\n                        }\r\n                        else {\r\n                            table = $(selector).DataTable({\r\n                                responsive: true,\r\n                                \"scrollY\": scope.option.gridSize || '500px',\r\n                                paging: false,\r\n                                searching: false,\r\n                                ordering: false,\r\n                                \"bInfo\": false\r\n                            });\r\n                        }\r\n\r\n                        $timeout(() => {\r\n                            /* var $table = $('table.scroll'),\r\n                             $bodyCells = $table.find('tbody tr:first').children(),\r\n                             colWidth;\r\n\r\n                             colWidth = $bodyCells.map(function () {\r\n                             return $(this).width();\r\n                             }).get();\r\n\r\n                             // Set the width of thead columns\r\n                             $table.find('thead tr').children().each(function (i, v) {\r\n                             $(v).width(colWidth[i]);\r\n                             });*/\r\n\r\n                            table = $(selector).DataTable();\r\n                        });\r\n\r\n                        scope.isWaiting = false;\r\n                    });\r\n            }\r\n\r\n            scope.fetch = fetch;\r\n\r\n            scope.addFilter = addFilter;\r\n            scope.removeFilter = removeFilter;\r\n            scope.addSort = addSort;\r\n            scope.removeSort = removeSort;\r\n\r\n            let filter = {logic: 'and', filters: []},\r\n                sort = [],\r\n                parameters = {filter, sort, extra};\r\n\r\n            function addFilter(filterParam) {\r\n                let filters = filter.filters;\r\n\r\n                let sameFieldFilters = new Collection(filters).asEnumerable()\r\n                    .where(f => f.field == filterParam.field)\r\n                    .toArray();\r\n\r\n                sameFieldFilters.forEach(f => Collection.remove(filters, f));\r\n\r\n                filters.push(filterParam);\r\n\r\n                scope.pageOption.reset();\r\n            }\r\n\r\n            function removeFilter(field) {\r\n                let filters = filter.filters;\r\n\r\n                let sameFieldFilters = new Collection(filters).asEnumerable()\r\n                    .where(f => f.field == field)\r\n                    .toArray();\r\n\r\n                sameFieldFilters.forEach(f => Collection.remove(filters, f));\r\n\r\n                scope.pageOption.reset();\r\n            }\r\n\r\n            function addSort(sortParam) {\r\n                sort.push(sortParam);\r\n                scope.pageOption.reset();\r\n            }\r\n\r\n            function removeSort() {\r\n                Collection.removeAll(sort);\r\n                scope.columns.forEach(c => c.removeSort && c.removeSort());\r\n            }\r\n\r\n            function checkHasDetail() {\r\n                let detailTemplate = $(element).find('dev-tag-grid-detail').html();\r\n                if (!detailTemplate) return;\r\n\r\n                scope.detailTemplate = detailTemplate;\r\n                scope.expand = item => item.expanded = !item.expanded;\r\n\r\n                $(element).find('dev-tag-grid-detail').remove();\r\n            }\r\n\r\n            checkHasDetail();\r\n\r\n            scope.$watch('option.readUrl', () =>\r\n            scope.pageOption.reset && scope.pageOption.reset());\r\n\r\n            // if (scope.option.gridSize)\r\n            //     $(element).find('tbody').css('height', scope.option.gridSize);\r\n        }\r\n    }\r\n}\r\n\r\n",
    "\r\nexport default function () {\r\n    return{\r\n        restrict: 'E',\r\n        transclude: true,\r\n        templateUrl: 'partials/templates/grid-editable-template.html',\r\n        scope: {\r\n            data: '=devAttrData',\r\n            columns: '=devAttrColumns',\r\n            defaultItem: '=devAttrDefaultItem'\r\n        },\r\n        link:(scope, element, attrs)=> {\r\n            let defaultItem = angular.extend({}, scope.defaultItem);\r\n\r\n            scope.changeValue = (item)=> {\r\n                scope.data.push(item);\r\n                scope.defaultItem = angular.extend({}, defaultItem);\r\n            };\r\n        }\r\n    }\r\n}\r\n",
    "\r\nexport default function () {\r\n    return{\r\n        restrict: 'A',\r\n        transclude: true,\r\n        replace: true,\r\n        templateUrl: 'partials/templates/grid-editable-row-template.html',\r\n        scope: {\r\n            columns: '=devAttrColumns',\r\n            item: '=devAttrItem',\r\n            changeValue: '&devAttrChangeValue'\r\n        },\r\n        link:(scope, element, attrs)=> {\r\n\r\n        }\r\n    }\r\n}\r\n\r\n",
    "export default function (gridFilterCellType) {\r\n    return {\r\n        templateUrl: 'partials/templates/grid-filter-template.html',\r\n        restrict: 'E',\r\n        scope: {\r\n            addFilter: '&devAttrAddFilter',\r\n            removeFilter: '&devAttrRemoveFilter',\r\n            column: '=devAttrColumn'\r\n        },\r\n        link: (scope, element, attrs) => {\r\n            let baseTemplate = `<li class=\"divider\"></li>\r\n            <li role=\"menuitem\" style=\"text-align: center\">\r\n                <button ng-click=\"executeFilter($event)\" class=\"btn btn-primary btn-rounded btn-outline\" style=\"display: inline;\">\r\n                    <i class=\"fa fa-check\"></i>\r\n                    {{'Filter'|translate}}\r\n                </button>\r\n\r\n                <button  ng-click=\"remove($event)\" class=\"btn btn-white btn-rounded btn-outline\" style=\"display: inline\">\r\n                    <i class=\"fa fa-times\"></i>\r\n                    {{'Remove filter'|translate}}\r\n                </button>\r\n            </li>`;\r\n\r\n            scope.filterStyle = {};\r\n            scope.dropdownStyle = {};\r\n            scope.filterable = scope.column.filterable == null ? true : scope.column.filterable;\r\n\r\n            scope.filter = {\r\n                field: scope.column.name,\r\n                operator: 'eq',\r\n                value: null\r\n            };\r\n\r\n            scope.status = {\r\n                isOpen: false\r\n            };\r\n\r\n            let cellType = gridFilterCellType[scope.column.type];\r\n            scope.template = cellType.template + baseTemplate;\r\n            scope.items = cellType.data;\r\n            scope.dataSource = cellType.dataSource;\r\n            scope.dropdownStyle = cellType.style;\r\n\r\n            if (scope.column.type == 'string')\r\n                scope.filter.operator = 'contains';\r\n\r\n            scope.executeFilter = (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                scope.status.isOpen = !scope.status.isOpen;\r\n\r\n                scope.addFilter({filter: scope.filter});\r\n                scope.filterStyle = {color: '#18a689'};\r\n            };\r\n\r\n            scope.remove = e => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                scope.status.isOpen = !scope.status.isOpen;\r\n\r\n                if (!scope.filter.field) return;\r\n\r\n                scope.filter.value = null;\r\n                scope.removeFilter({field: scope.filter.field});\r\n                scope.filterStyle = {};\r\n            };\r\n        }\r\n    }\r\n}\r\n",
    "export default function () {\r\n    return {\r\n        template: `<i class=\"fa  pointer\"\r\n                        ng-if=\"sortable\"\r\n                        ng-class=\"{'fa-sort-alpha-asc': sort.dir == '' || sort.dir == 'desc',\r\n                        'fa-sort-alpha-desc': sort.dir == 'asc'}\"\r\n                        style=\"font-size: 15px;\"\r\n                        ng-style=\"sortStyle\"\r\n                        ng-click=\"change()\"></i>`,\r\n        restrict: 'E',\r\n        scope: {\r\n            addSort: '&devAttrAddSort',\r\n            removeSort: '&devAttrRemoveSort',\r\n            column: '=devAttrColumn'\r\n        },\r\n        link: (scope, element, attrs) => {\r\n            let field = scope.column.name;\r\n\r\n            scope.sort = {field: '', dir: ''};\r\n            scope.sortable = scope.column.sortable == null ? true : scope.column.sortable;\r\n\r\n            scope.change = () => {\r\n                let preDir = '';\r\n\r\n                if (scope.sort.dir == '')\r\n                    preDir = 'asc';\r\n                else preDir = scope.sort.dir == 'asc' ? 'desc' : 'asc';\r\n\r\n\r\n                scope.removeSort();\r\n\r\n                scope.sort.field = field;\r\n                scope.sort.dir = preDir;\r\n\r\n                scope.sortStyle = {color: '#18a689'};\r\n\r\n                scope.addSort({sort: scope.sort});\r\n            };\r\n\r\n            scope.column.removeSort = () => {\r\n                scope.sort = {field: '', dir: ''};\r\n                scope.sortStyle = {};\r\n            };\r\n        }\r\n    }\r\n}\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalSearchParameters(dimensionCategoryApi) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/journal-search-parameters.html',\r\n        scope: {\r\n            searchParameters: '=',\r\n            removeParameters: '&'\r\n        },\r\n        link: function (scope, element, attrs) {\r\n            scope.dimensionCategorie = [];\r\n\r\n            dimensionCategoryApi.getAllLookup()\r\n                .then((result)=> scope.dimensionCategories = result.data);\r\n\r\n            scope.remove = (e)=> {\r\n                e.preventDefault();\r\n                scope.removeParameters();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\naccModule.directive('devTagJournalSearchParameters', journalSearchParameters);",
    "import $ from 'jquery';\r\nimport accModule from '../acc.module';\r\n\r\nfunction header(currentService, devConstants) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/header-template.html',\r\n        replace: true,\r\n        scope: true,\r\n        link: function (scope, element, attrs) {\r\n            scope.currentUser = localStorage.getItem('currentUser');\r\n\r\n            let current = currentService.get();\r\n\r\n            scope.current = {\r\n                branch: current.branch,\r\n                mode: devConstants.enums.AccMode().getDisplay(current.mode),\r\n                fiscalPeriod: current.fiscalPeriod\r\n            };\r\n\r\n            $(element).find('.dropdown')\r\n            $('input').click(function () {\r\n                $('.dropdown').addClass('open');\r\n                $('.dropdown').addClass('test-class');\r\n            });\r\n\r\n            scope.$on('mode-changed', (e, mode) => {\r\n                currentService.setMode(mode.key);\r\n                scope.current.mode = mode.display;\r\n            });\r\n\r\n            scope.$on('fiscal-period-changed', (e, fiscalPeriod) => {\r\n                currentService.setFiscalPeriod(fiscalPeriod.id);\r\n                scope.current.period = fiscalPeriod.display;\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction togglemenu() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/togglemenu-template.html',\r\n        replace: true,\r\n        scope: {\r\n            menuitems: '=',\r\n            toggleobservable: '='\r\n        },\r\n        transclude: true,\r\n        link: function (scope, element, attrs) {\r\n            $(\"#menu-toggle\").click(function (e) {\r\n                e.preventDefault();\r\n                $(\"#wrapper\").toggleClass(\"toggled\");\r\n            });\r\n\r\n            createMenu(scope.menuitems, element);\r\n        }\r\n    }\r\n}\r\n\r\nfunction createMenu(menuItems, element) {\r\n    menuItems.forEach(function (item) {\r\n        var $el = $(element).find('.gw-nav');\r\n        var icon = item.icon || 'file';\r\n\r\n        var li = $('<li class=\"init-arrow-down\"></li>');\r\n        li.append('<a href=\"{0}\"></a>'.format(item.url));\r\n        li.find('a').append('<span class=\"webfont-menu\" aria-hidden=\"true\">' +\r\n            '<span class=\"glyphicon glyphicon-{0}\"></span>'.format(icon) +\r\n            '</span>'.format(icon));\r\n\r\n        li.find('a').append('<span class=\"gw=menu-text\">{0}</span>'.format(item.title));\r\n\r\n        if (item.children.length > 0) {\r\n            li.find('a').append('<b class=\"gw-arrow icon-arrow-up8\"></b>');\r\n            li.append('<ul class=\"gw-submenu\"></ul>');\r\n\r\n            item.children.forEach(function (child) {\r\n                var liChild = $('<li></li>');\r\n                var icon = child.icon || 'file';\r\n\r\n                liChild.append('<a href=\"{0}\"></a>'.format(child.url));\r\n                /* liChild.find('a')\r\n                 .append('<span class=\"webfont-submenu glyphicon glyphicon-{0}\"></span>'\r\n                 .format(icon));*/\r\n\r\n                liChild.find('a').append(child.title);\r\n\r\n                li.find('ul').append(liChild);\r\n            });\r\n        }\r\n        ;\r\n\r\n        $el.append(li);\r\n    });\r\n\r\n    menuCreateExpandAndActiveBehavior($(element));\r\n}\r\n\r\nfunction menuCreateExpandAndActiveBehavior($element) {\r\n    var $ele = function (selector) {\r\n        return $element.find(selector);\r\n    };\r\n\r\n    $ele('.gw-nav > li > a').click(function (e) {\r\n        var hrefAttr = $(this).attr('href');\r\n        if (hrefAttr == undefined || hrefAttr == null || hrefAttr == '')\r\n            e.preventDefault();\r\n\r\n        var gw_nav = $ele('.gw-nav');\r\n        gw_nav.find('li').removeClass('active');\r\n        $ele('.gw-nav > li > ul > li').removeClass('active');\r\n\r\n        var checkElement = $(this).parent();\r\n        var ulDom = checkElement.find('.gw-submenu')[0];\r\n\r\n        if (ulDom == undefined) {\r\n            checkElement.addClass('active');\r\n            $ele('.gw-nav').find('li').find('ul:visible').slideUp();\r\n            return;\r\n        }\r\n        if (ulDom.style.display != 'block') {\r\n            gw_nav.find('li').find('ul:visible').slideUp();\r\n            gw_nav.find('li.init-arrow-up').removeClass('init-arrow-up').addClass('arrow-down');\r\n            gw_nav.find('li.arrow-up').removeClass('arrow-up').addClass('arrow-down');\r\n            checkElement.removeClass('init-arrow-down');\r\n            checkElement.removeClass('arrow-down');\r\n            checkElement.addClass('arrow-up');\r\n            checkElement.addClass('active');\r\n            checkElement.find('ul').slideDown(300);\r\n        } else {\r\n            checkElement.removeClass('init-arrow-up');\r\n            checkElement.removeClass('arrow-up');\r\n            checkElement.removeClass('active');\r\n            checkElement.addClass('arrow-down');\r\n            checkElement.find('ul').slideUp(300);\r\n\r\n        }\r\n    });\r\n    $('.gw-nav > li > ul > li > a').click(function () {\r\n        $ele(this).parent().parent().removeClass('active');\r\n        $ele('.gw-nav > li > ul > li').removeClass('active');\r\n        $(this).parent().addClass('active')\r\n    });\r\n};\r\n\r\naccModule\r\n    .directive('devTagHeader', header)\r\n    .directive('devTagTogglemenu', togglemenu);\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\nimport 'kendo-core';\r\nimport 'kendo-data';\r\nimport 'kendo-list';\r\nimport 'kendo-popup';\r\nimport 'kendo-multiselect';\r\n\r\nlet translate = JSON.parse(localStorage.getItem('translate')),\r\n    create = translate['Create'],\r\n    tag = translate['Tag'];\r\n\r\nfunction multiSelect($window) {\r\n    return {\r\n        require: 'ngModel',\r\n        restrict: 'E',\r\n        replace: true,\r\n        template: '<select style=\"width: 100%\"></select>',\r\n        link: function (scope, element, attrs, ngModel) {\r\n\r\n            let hasNoDataTemplate = attrs.hasOwnProperty('showNoDataTemplate');\r\n\r\n            $window.addValue = function (widgetId, value) {\r\n                var dataSource = scope[attrs.kDataSource];\r\n                dataSource.add({title: value});\r\n                scope[attrs.onCreated](value)\r\n                    .then(result => {\r\n                        multiSelect.value(multiSelect.value().concat([result.id]));\r\n                        ngModel.$setViewValue(multiSelect.value());\r\n                    });\r\n            };\r\n\r\n            let template = `<div>\r\n                <button class=\"btn btn-primary\" \r\n                onclick=\"addValue('#: instance.element[0].id #', '#: instance.input.val() #')\">\r\n                    <i class=\"fa fa-plus\"></i>\r\n                    ${create} \"#: instance.input.val() #\"\r\n                </button>\r\n                </div>`;\r\n\r\n            let options = {\r\n                    placeholder: attrs.kPlaceholder,\r\n                    dataTextField: attrs.kDataTextField,\r\n                    dataValueField: attrs.kDataValueField,\r\n                    valuePrimitive: true,\r\n                    filter: \"contains\",\r\n                    autoBind: false,\r\n                    minLength: 3,\r\n                    dataSource: scope[attrs.kDataSource],\r\n                    noDataTemplate: hasNoDataTemplate ? template : null,\r\n                    select: function (e) {\r\n                        let dataItem = e.dataItem,\r\n                            model = ngModel.$viewValue || [];\r\n\r\n                        model.push(dataItem[attrs.kDataValueField]);\r\n                        ngModel.$setViewValue(model);\r\n\r\n                        if (scope[attrs.kOnChanged])\r\n                            scope[attrs.kOnChanged](dataItem);\r\n\r\n                        scope.$apply();\r\n                    },\r\n                    deselect: function (e) {\r\n                        let dataItem = e.dataItem,\r\n                            model = ngModel.$viewValue || [];\r\n\r\n                        Collection.remove(model, dataItem[attrs.kDataValueField]);\r\n                        ngModel.$setViewValue(model);\r\n\r\n                        if (scope[attrs.kOnChanged])\r\n                            scope[attrs.kOnChanged](dataItem);\r\n\r\n                        scope.$apply();\r\n                    }\r\n                },\r\n                multiSelect = $(element).kendoMultiSelect(options).data(\"kendoMultiSelect\");\r\n\r\n            scope.$watch(attrs.ngModel, newValue => {\r\n                multiSelect.value(newValue);\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagMultiSelect', multiSelect);\r\n\r\n",
    "\r\n export default  function($compile) {\r\n    return {\r\n        restrict: 'A',\r\n        link: function(scope, element, attrs) {\r\n            scope.$watch(attrs.ngHtmlCompile, function(newValue, oldValue) {\r\n                element.html(newValue);\r\n                $compile(element.contents())(scope);\r\n            });\r\n        }\r\n    }\r\n};\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction NgKendoGrid($compile) {\r\n    return {\r\n        restrict: 'E',\r\n        transclude: true,\r\n        template: '<div kendo-grid options=\"kGridOptions\" ng-transclude></div>',\r\n        scope: {\r\n            kOptions: '='\r\n        },\r\n        link: (scope, element, attrs)=> {\r\n            scope.kGridOptions = scope.kOptions;\r\n        },\r\n        compile: (tElem, tAttrs)=> {\r\n\r\n\r\n            return {\r\n                pre: (scope, element, attrs)=> {\r\n\r\n\r\n                    let template = $(element).find('.col').html();\r\n                    let result = $compile(template)(scope);\r\n                    scope.kGridOptions = scope.kOptions;\r\n\r\n                },\r\n                post: (scope, element, attrs)=> {\r\n\r\n                    let grid = $(element).find('div').data(\"kendoGrid\");\r\n                }\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n}\r\n\r\naccModule.directive('devTagNgKendoGrid', NgKendoGrid);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction numeric() {\r\n    return {\r\n        restrict: 'E',\r\n        template: '<input type=\"number\" class=\"form-control\" /> ',\r\n        replace: true\r\n    }\r\n}\r\n\r\naccModule.directive('devTagNumeric', numeric);",
    "\r\nexport default function () {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/paging-template.html',\r\n        replace: true,\r\n        scope: {\r\n            'setPage': '&devAttrSetPage',\r\n            'total': '=devAttrTotal',\r\n            'option': '=devAttrOption'\r\n        },\r\n        link: (scope, element, attrs) => {\r\n            scope.currentPage = 1;\r\n            scope.pageSizes = [10, 20, 50, 100];\r\n            scope.pageSize = 20;\r\n\r\n            scope.change = () => {\r\n                let page = {\r\n                    skip: (scope.currentPage - 1 ) * scope.pageSize,\r\n                    take: scope.pageSize\r\n                };\r\n                scope.setPage({page});\r\n            };\r\n\r\n            scope.option.reset = () => {\r\n                scope.currentPage = 1;\r\n                scope.change();\r\n            };\r\n\r\n            scope.option.refresh = scope.change;\r\n\r\n            scope.$watch('pageSize', ()=> scope.option.reset());\r\n\r\n            scope.change();\r\n        }\r\n    }\r\n}\r\n",
    "import $ from 'jquery';\r\n\r\nexport default function (devConstants) {\r\n    return {\r\n        restrict: 'E',\r\n        template: '<div></div>',\r\n        replace: true,\r\n        scope: {\r\n            kDataSource: '='\r\n        },\r\n        link: (scope, element, attrs) => {\r\n            $(element).kendoPanelBar({\r\n                dataSource: new kendo.data.HierarchicalDataSource({\r\n                    data: devConstants.reports\r\n                })\r\n            });\r\n        }\r\n    }\r\n}",
    "import accModule from '../acc.module';\r\n\r\nfunction radio() {\r\n\r\n    return {\r\n        transclude: true,\r\n        restrict: 'E',\r\n        require: 'ngModel',\r\n        replace: true,\r\n        template: `<div class=\"iradio_square-green\" style=\"position: relative;\"><span ng-transclude></span></div>`,\r\n        link: (scope, element, attrs, ngModel) => {\r\n            let $element = $(element),\r\n                iradio = $element.find('.iradio_square-green');\r\n\r\n            $element.attr('k-value', attrs.kValue);\r\n\r\n            $element.click(function () {\r\n                let value = $element.attr('k-value');\r\n                scope.$apply(() => ngModel.$setViewValue(value));\r\n            });\r\n\r\n\r\n            /*$element.find('input').val(attrs.devAttrValue);\r\n             $element.find('input').attr('ng-model', attrs.ngModel);\r\n\r\n             $element.iCheck({\r\n             checkboxClass: 'icheckbox_square-green',\r\n             radioClass: 'iradio_square-green'\r\n             });\r\n\r\n             $element.on('ifChanged', e => {\r\n             ngModel.$setViewValue(e.target.value);\r\n             scope.$apply();\r\n             });\r\n\r\n             ngModel.$render = function () {\r\n             if (ngModel.$viewValue) {\r\n             $element.find('.iradio_square-green').addClass(\"checked\");\r\n             } else {\r\n             $element.find('.iradio_square-green').removeClass(\"checked\");\r\n             }\r\n             };*/\r\n\r\n            /*scope.$watch(attrs.ngModel, newValue => {\r\n             if(newValue)\r\n             $element.find('.icheckbox_square-green').addClass('checked');\r\n             else\r\n             $element.find('.icheckbox_square-green').removeClass('checked');\r\n             });*/\r\n\r\n            /*return $timeout(function() {\r\n             var value;\r\n             value = $attrs['value'];\r\n\r\n             $scope.$watch($attrs['ngModel'], newValue =>{\r\n             $(element).iCheck('update');\r\n             });\r\n\r\n             $(element).iCheck({\r\n             checkboxClass: 'icheckbox_square-green',\r\n             radioClass: 'iradio_square-green'\r\n\r\n             }).on('ifChanged', function(e) {\r\n             if ($(element).attr('type') === 'checkbox' && $attrs['ngModel']) {\r\n             $scope.$apply(function() {\r\n             return ngModel.$setViewValue(e.target.checked);\r\n             });\r\n             }\r\n             if ($(element).attr('type') === 'radio' && $attrs['ngModel']) {\r\n             return $scope.$apply(function() {\r\n             return ngModel.$setViewValue(value);\r\n             });\r\n             }\r\n             });\r\n             });*/\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagRadio', radio);",
    "import accModule from '../acc.module';\r\nimport {addVariable} from '../utilities/stimulsoft';\r\n\r\n\r\nfunction reportDesigner(currentService, reportApi) {\r\n    return {\r\n        restrict: 'E',\r\n        template: '<div id=\"contentDesigner\" style=\"direction: ltr\"></div>',\r\n        scope: {\r\n            reportData: '=',\r\n            reportFileName: '@',\r\n            reportDataSourceName: '@',\r\n            reportTitle: '@'\r\n        },\r\n        link: (scope, element, attrs) => {\r\n            let report = new Stimulsoft.Report.StiReport(),\r\n                designer = new Stimulsoft.Designer.StiDesigner(null, 'StiDesigner', false),\r\n                current = currentService.get(),\r\n                data = {};\r\n\r\n            if (scope.reportFileName)\r\n                report.loadFile(`/luca/client/reportFiles/${scope.reportFileName}`);\r\n\r\n            designer.renderHtml(\"contentDesigner\");\r\n\r\n            designer.onSaveReport = e => {\r\n                e.preventDefault = true;\r\n\r\n                let jsonReport = e.report.saveToJsonString();\r\n                reportApi.save({fileName: e.fileName, data: jsonReport});\r\n            };\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'today',\r\n                alias: 'Today',\r\n                category: 'general',\r\n                value: '1395/01/01',\r\n            }));\r\n\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'user',\r\n                alias: 'User',\r\n                category: 'general',\r\n                value: current.user.name\r\n            }));\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'branchLogo',\r\n                alias: 'Branch Logo',\r\n                category: \"general\",\r\n                value: current.branch.logo\r\n            }));\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'branchTitle',\r\n                alias: 'Branch title',\r\n                category: \"general\",\r\n                value: current.branch.title\r\n            }));\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'reportTitle',\r\n                alias: 'Report title',\r\n                category: \"general\",\r\n                value: scope.reportTitle\r\n            }));\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'reportParameters',\r\n                alias: 'Report parameters',\r\n                category: \"general\",\r\n                value: scope.reportParameters\r\n            }));\r\n\r\n            data[scope.reportDataSourceName] = scope.reportData;\r\n\r\n            report.regData(\"data\", \"data\", data);\r\n            report.dictionary.synchronize();\r\n            designer.report = report;\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagReportDesigner', reportDesigner);",
    "import accModule from '../acc.module';\r\nimport Guid from 'dev.guid';\r\nimport {viewerConfig, addVariable, addTranslates} from '../utilities/stimulsoft';\r\n\r\nlet config = viewerConfig();\r\n\r\n\r\nfunction reportViewer(currentService) {\r\n    return {\r\n        restrict: 'E',\r\n        template: '<div id=\"contentViewer\" style=\"direction: ltr\"></div>',\r\n        scope: {\r\n            reportData: '=',\r\n            reportFileName: '@',\r\n            reportTitle: '@',\r\n            reportParameters: '@',\r\n            reportDataSourceName: '@'\r\n        },\r\n        link: function (scope, element, attrs) {\r\n            let id = Guid.new(),\r\n                data = {},\r\n                current = currentService.get(),\r\n                report = new Stimulsoft.Report.StiReport(),\r\n                viewer = new Stimulsoft.Viewer.StiViewer(config, \"StiViewer\" + id, false);\r\n\r\n            $(element).find('div').attr('id', id);\r\n\r\n            report.loadFile(`/luca/api/reports/file/${scope.reportFileName}`);\r\n            viewer.renderHtml(id);\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'today',\r\n                alias: 'Today',\r\n                category: \"general\",\r\n                value: current.today\r\n            }));\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'user',\r\n                alias: 'User',\r\n                category: 'general',\r\n                value: current.user.name\r\n            }));\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'branchLogo',\r\n                alias: 'Branch Logo',\r\n                category: \"general\",\r\n                value: current.branch.logo\r\n            }));\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'branchTitle',\r\n                alias: 'Branch title',\r\n                category: \"general\",\r\n                value: current.branch.name\r\n            }));\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'reportTitle',\r\n                alias: 'Report title',\r\n                category: \"general\",\r\n                value: scope.reportTitle\r\n            }));\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'reportParameters',\r\n                alias: 'Report parameters',\r\n                category: \"general\",\r\n                value: scope.reportParameters\r\n            }));\r\n\r\n            addTranslates(report);\r\n\r\n            data[scope.reportDataSourceName] = scope.reportData;\r\n\r\n            report.regData(\"data\", \"data\", data);\r\n            viewer.report = report;\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagReportViewer', reportViewer);",
    "export default function () {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/shell.header-template.html',\r\n        replace: true,\r\n        link: (scope, element, attrs) => {\r\n            scope.toggleSidebar = () =>  scope.$emit('toggle-sidebar');\r\n        }\r\n    }\r\n}\r\n\r\n",
    "\"use strict\";\r\n\r\nexport default function shell($rootScope, menuItems, translate, currentService, $cookies, devConstants, $timeout) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/shell.html',\r\n        //scope: true,\r\n        link: function (scope, element, attrs) {\r\n\r\n            let current = currentService.get();\r\n\r\n            scope.user = current.user;\r\n            scope.branch = current.branch;\r\n            scope.current = current;\r\n\r\n            scope.fiscalPeriodDataSource = {\r\n                type: \"json\",\r\n                serverFiltering: true,\r\n                transport: {\r\n                    read: {\r\n                        url: devConstants.urls.period.all()\r\n                    }\r\n                },\r\n                schema: {\r\n                    data: 'data'\r\n                }\r\n            };\r\n            scope.modes = devConstants.enums.AccMode().data;\r\n\r\n            scope.$watch('current.fiscalPeriod', newValue => currentService.setFiscalPeriod(newValue));\r\n            scope.$watch('current.mode', newValue => currentService.setMode(newValue));\r\n\r\n            $timeout(() => $rootScope.canShowStatusSection = true);\r\n\r\n            $('.collapse-link').click(function () {\r\n                var ibox = $(this).closest('div.ibox');\r\n                var button = $(this).find('i');\r\n                var content = ibox.find('div.ibox-content');\r\n                content.slideToggle(200);\r\n                button.toggleClass('fa-chevron-up').toggleClass('fa-chevron-down');\r\n                ibox.toggleClass('').toggleClass('border-bottom');\r\n                setTimeout(function () {\r\n                    ibox.resize();\r\n                    ibox.find('[id^=map-]').resize();\r\n                }, 50);\r\n            });\r\n\r\n            // Close ibox function\r\n            $('.close-link').click(function () {\r\n                var content = $(this).closest('div.ibox');\r\n                content.remove();\r\n            });\r\n\r\n\r\n            $rootScope.blockUi = {\r\n                isBlocking: false,\r\n                message: translate('Please wait ...'),\r\n                block: (message) => {\r\n                    $rootScope.blockUi.message = message\r\n                        ? message\r\n                        : translate('Please wait ...');\r\n\r\n                    $rootScope.blockUi.isBlocking = true;\r\n                },\r\n                unBlock: () => {\r\n                    $rootScope.blockUi.isBlocking = false;\r\n                }\r\n            }\r\n        }\r\n    };\r\n}",
    "export default function () {\r\n    return {\r\n        restrict: 'E',\r\n        template: `<li>\r\n                <a href=\"/\">\r\n                    <i class=\"{{devIcon}}\"></i>\r\n                    <span class=\"nav-label\">{{devTitle}}</span>\r\n                </a>\r\n            </li>`,\r\n        replace: true,\r\n        transclude: true,\r\n        scope: {\r\n            devHref: '@',\r\n            devIcon: '@',\r\n            devTitle: '@'\r\n        },\r\n        link: (scope, element, attrs, ctrl, transculde) => {\r\n            debugger;\r\n            var x = 1;\r\n            console.log('sadfasd');\r\n        }\r\n    }\r\n}\r\n\r\nexport function sidebarItemChild() {\r\n    return {\r\n        restrict: 'E',\r\n        template: ``,\r\n        replace: true,\r\n        transclude: true,\r\n        scope: {\r\n            devHref: '@',\r\n            devIcon: '@',\r\n            devTitle: '@'\r\n        },\r\n        link: (scope, element, attrs, ctrl, transculde) => {\r\n            debugger;\r\n            var x = 1;\r\n            console.log('sadfasd');\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n",
    "import 'metisMenu';\r\n\r\nexport default function (menuItems, $timeout) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/shell.sidebar-template.html',\r\n        replace: true,\r\n        link: (scope, element, attrs) => {\r\n            scope.items = menuItems;\r\n\r\n            let sideMenu = $(element).find('#side-menu');\r\n\r\n            $timeout(()=> sideMenu.metisMenu());\r\n\r\n            scope.$on('toggle-sidebar', () => {\r\n                $(\"body\").toggleClass(\"mini-navbar\");\r\n                SmoothlyMenu();\r\n            });\r\n\r\n            function SmoothlyMenu() {\r\n                if (!$('body').hasClass('mini-navbar') || $('body').hasClass('body-small')) {\r\n                    // Hide menu in order to smoothly turn on when maximize menu\r\n                    sideMenu.hide();\r\n                    // For smoothly turn on menu\r\n                    setTimeout(\r\n                        function () {\r\n                            sideMenu.fadeIn(500);\r\n                        }, 100);\r\n                } else if ($('body').hasClass('fixed-sidebar')) {\r\n                    sideMenu.hide();\r\n                    setTimeout(\r\n                        function () {\r\n                            sideMenu.fadeIn(500);\r\n                        }, 300);\r\n                } else {\r\n                    // Remove all inline style from jquery fadeIn function to reset menu state\r\n                    sideMenu.removeAttr('style');\r\n                }\r\n            }\r\n        },\r\n        /*compile: (tElem, tAttr) => {\r\n            return {\r\n                pre: (scope, element, attrs) => {\r\n                    scope.items = menuItems;\r\n                },\r\n                post(scope, element, attrs){\r\n                    let ele = tElem;\r\n                    $(element).find('#side-menu').metisMenu();\r\n                }\r\n            }\r\n        }*/\r\n    }\r\n}\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction subContent() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/subContent.html',\r\n        transclude: true,\r\n        replace: true,\r\n        scope: {},\r\n        link: function (scope, element, attrs) {\r\n            scope.title = attrs.title;\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagSubContent', subContent);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction textEditor() {\r\n    return {\r\n        require: 'ngModel',\r\n        restrict: 'E',\r\n        replace: true,\r\n        template: '<textarea class=\"form-control\"></textarea>'\r\n    };\r\n}\r\n\r\nfunction textBox() {\r\n    return {\r\n        require: 'ngModel',\r\n        restrict: 'E',\r\n        replace: true,\r\n        template: '<input type=\"text\" class=\"form-control\"/>'\r\n    };\r\n}\r\n\r\naccModule\r\n    .directive('devTagEditor', textEditor)\r\n    .directive('devTagTextBox', textBox);",
    "import accModule from '../acc.module';\r\n//import $ from 'jquery';\r\n//import 'jquery.filedrop';\r\n\r\nimport Dropzone from 'dropzone';\r\n\r\nfunction uploader() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/uploader.html',\r\n        replace: true,\r\n        scope: {\r\n            before: '&',\r\n            uploaded: '&'\r\n        },\r\n        link: (scope, element, attrs) => {\r\n            let config = {\r\n                    url: '/upload',\r\n                    method: 'post',\r\n                    maxFilesize: 2,\r\n                    clickable: '#upload',\r\n\r\n                },\r\n                dropzone = new Dropzone(element[0], config);\r\n\r\n            dropzone.on('success', function (file, response) {\r\n                scope.uploaded({fileName: response.fullName});\r\n                scope.$apply();\r\n            });\r\n\r\n            dropzone.on('error', function (error) {\r\n                console.log(error);\r\n            });\r\n            /*$(element).filedrop({\r\n             url: '/upload',\r\n             dragOver: ()=> {\r\n             let $elm = $(element).find('.place_drag');\r\n             $elm.addClass('place_drag_uploader');\r\n             $elm.find('.hover_upload_list').addClass('webfont_file');\r\n             },\r\n             dragLeave: ()=> {\r\n             let $elm = $(element).find('.place_drag');\r\n             $elm.removeClass('place_drag_uploader');\r\n             $elm.find('.hover_upload_list').removeClass('webfont_file');\r\n             $elm.find('.place_drag_text1').show();\r\n             },\r\n             uploadStarted: ()=> {\r\n             let $elm = $(element).find('.place_drag');\r\n             $elm.removeClass('place_drag_uploader');\r\n             $elm.find('.hover_upload_list').removeClass('webfont_file');\r\n             $elm.find('.place_drag_text1').hide();\r\n\r\n             $rootScope.blockUi.block();\r\n             scope.$apply();\r\n\r\n             scope.before();\r\n             },\r\n             uploadFinished: (i, file, response, time)=> {\r\n             scope.uploaded(response);\r\n             $rootScope.blockUi.unBlock();\r\n             scope.$apply();\r\n             },\r\n             error: (err, file) => {\r\n             $rootScope.blockUi.unBlock();\r\n             scope.$apply();\r\n\r\n             switch (err) {\r\n             case 'BrowserNotSupported':\r\n             logger.error('browser does not support HTML5 drag and drop');\r\n             break;\r\n             case 'TooManyFiles':\r\n             // user uploaded more than 'maxfiles'\r\n             break;\r\n             case 'FileTooLarge':\r\n             // program encountered a file whose size is greater than 'maxfilesize'\r\n             // FileTooLarge also has access to the file which was too large\r\n             // use file.name to reference the filename of the culprit file\r\n             break;\r\n             case 'FileTypeNotAllowed':\r\n             // The file type is not in the specified list 'allowedfiletypes'\r\n             break;\r\n             case 'FileExtensionNotAllowed':\r\n             // The file extension is not in the specified list 'allowedfileextensions'\r\n             break;\r\n             default:\r\n             break;\r\n             }\r\n             },\r\n             });*/\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagUploader', uploader);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction validationSummary() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/validationSummary.html',\r\n        replace: true,\r\n        scope: {\r\n            errors: '='\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagValidationSummary', validationSummary);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction amount() {\r\n    return (input)=> {\r\n        if (!input)\r\n            return '';\r\n\r\n        return kendo.toString(input, 'n0');\r\n    }\r\n}\r\n\r\nfunction digtToWord() {\r\n    return window.digitToWord;\r\n}\r\naccModule.filter('amount', amount);\r\n\r\naccModule.filter('digitToWord', digtToWord)",
    "let isClientTest = ()=> {\r\n    let isClientTest = localStorage.getItem('isClientTest');\r\n\r\n    return isClientTest == null ? false : true;\r\n}\r\n\r\n\r\nlet baseTemplateUrl = ()=> {\r\n    return isClientTest() ? 'partials/' : '';\r\n}\r\n\r\nlet config = {\r\n    isClientTest: isClientTest,\r\n    baseTemplateUrl: baseTemplateUrl\r\n};\r\n\r\nexport default config;",
    "import enums from './enums';\r\nimport urls from './urls';\r\nimport config from './config';\r\nimport accModule from '../acc.module';\r\n\r\nlet reports = JSON.parse(localStorage.getItem('reports'));\r\n\r\nlet devConstants = {\r\n    enums: enums,\r\n    urls: urls,\r\n    config: config,\r\n    reports: reports\r\n};\r\n\r\naccModule.constant('devConstants', devConstants);\r\n\r\nexport default devConstants;",
    "import Collection from 'dev.collection';\r\n\r\nclass Enum {\r\n\r\n    constructor(enums) {\r\n        this.data = enums;\r\n    }\r\n\r\n    getDisplay(key) {\r\n        return new Collection(this.data)\r\n            .asEnumerable()\r\n            .single(e=>e.key == key)\r\n            .display;\r\n    }\r\n\r\n    getKey(name) {\r\n        return new Collection(this.data)\r\n            .asEnumerable()\r\n            .single(e=>e.name == name)\r\n            .key;\r\n    }\r\n\r\n    getKeys() {\r\n        let names = Array.from(arguments);\r\n\r\n        return new Collection(names)\r\n            .asEnumerable()\r\n            .select(name=> this.getKey(name))\r\n            .toArray();\r\n    }\r\n\r\n    get() {\r\n        return this.data;\r\n    }\r\n}\r\n\r\nexport default Enum;",
    "﻿import Enum from './enumType';\r\nlet enums = {};\r\n\r\nenums.AccountPostingType = () => {\r\n    return new Enum([\r\n        {key: 'balanceSheet', display: 'تراز نامه ای'},\r\n        {key: 'benefitAndLoss', display: 'سود و زیانی'},\r\n        {key: 'entezami', display: 'انتظامی'}\r\n    ]);\r\n};\r\n\r\nenums.AccountBalanceType = () => {\r\n    return new Enum([\r\n        {key: 'debit', display: 'بدهکار'},\r\n        {key: 'credit', display: 'بستانکار'}\r\n    ]);\r\n}\r\n\r\nenums.AssignmentStatus = () => {\r\n    return new Enum([\r\n        {key: 'Required', display: 'اجباری است'},\r\n        {key: 'NotRequired', display: 'انتخابی است'},\r\n        {key: 'DoesNotHave', display: 'ندارد'}\r\n    ]);\r\n}\r\n\r\nenums.JournalType = () => {\r\n    return new Enum([\r\n        {key: 'Opening', display: 'افتتاحیه'},\r\n        {key: 'Closing', display: 'اختتامیه'},\r\n        {key: 'FixedAsset', display: 'اموال'},\r\n        {key: 'Payroll', display: 'حقوق'},\r\n        {key: 'Special', display: 'ویژه'}\r\n    ]);\r\n}\r\n\r\nenums.JournalStatus = () => {\r\n    return new Enum([\r\n        {key: 'Temporary', display: 'موقت'},\r\n        {key: 'BookKeeped', display: 'ثبت دفترداری'},\r\n        {key: 'Fixed', display: 'ثبت قطعی'}\r\n    ]);\r\n};\r\n\r\nenums.Active = () => {\r\n    return new Enum([\r\n        {key: true, name: 'showActiveItems', display: 'نمایش فعال ها'},\r\n        {key: false, name: 'showInactiveItems', display: 'نمایش غیر فعال ها'}\r\n    ]);\r\n};\r\n\r\nenums.ChequeCategoryStatus = ()=> {\r\n    return new Enum([\r\n        {key: 'Open', display: 'باز'},\r\n        {key: 'Closed', display: 'بسته'}\r\n    ]);\r\n};\r\n\r\nenums.AccMode = () => {\r\n    return new Enum([\r\n        {key: 'Create', display: 'تنظیم اسناد'},\r\n        {key: 'Audit', display: 'رسیدگی اسناد'}\r\n    ]);\r\n};\r\n\r\nenums.getMonth = function () {\r\n    return new Enum([\r\n        {key: 1, display: \"فروردین\"},\r\n        {key: 2, display: \"اردیبهشت\"},\r\n        {key: 3, display: \"خرداد\"},\r\n        {key: 4, display: \"تیر\"},\r\n        {key: 5, display: \"مرداد\"},\r\n        {key: 6, display: \"شهریور\"},\r\n        {key: 7, display: \"مهر\"},\r\n        {key: 8, display: \"آبان\"},\r\n        {key: 9, display: \"آذر\"},\r\n        {key: 10, display: \"دی\"},\r\n        {key: 11, display: \"بهمن\"},\r\n        {key: 12, display: \"اسفند\"}\r\n    ]);\r\n};\r\n\r\nexport default enums;\r\n\r\n",
    "let rootUrl = ()=> '/luca/api';\r\n\r\nlet generalLedgerAccount = {\r\n    all: ()=> '{0}/general-ledger-accounts'.format(rootUrl())\r\n};\r\n\r\nlet subsidiaryLedgerAccount = {\r\n    all: ()=> '{0}/subsidiary-ledger-accounts'.format(rootUrl()),\r\n    allByGeneralLedgerAccount: (generalLedgerAccountId)=>\r\n        '{0}/subsidiary-ledger-accounts/general-ledger-account/{1}'\r\n            .format(rootUrl(), generalLedgerAccountId)\r\n};\r\n\r\nlet detailAccount = {\r\n    all: ()=> '{0}/detail-accounts'.format(rootUrl())\r\n};\r\n\r\nlet dimensionCategory = {\r\n    all: ()=> `${rootUrl()}/dimension-categories`\r\n};\r\n\r\nlet dimension = {\r\n    allByCategory: (categoryId)=> '{0}/dimensions/category/{1}'.format(rootUrl(), categoryId)\r\n};\r\n\r\nlet period = {\r\n    all: ()=> '{0}/fiscal-periods'.format(rootUrl())\r\n};\r\n\r\nlet chequeCategory = {\r\n    all: ()=> '{0}/cheque-categories'.format(rootUrl()),\r\n    allOpens: (detailAccountId)=> '{0}/cheque-categories/detail-account/{1}/opens'.format(rootUrl(), detailAccountId)\r\n};\r\n\r\nlet bank = {\r\n    all: ()=> '{0}/banks'.format(rootUrl())\r\n};\r\n\r\nlet cheque = {\r\n    all: (categoryId)=> '{0}/cheques/category/{1}'.format(rootUrl(), categoryId),\r\n    allwhites: (categoryId)=> '{0}/cheques/category/{1}/whites'.format(rootUrl(), categoryId),\r\n    allUseds: ()=> '{0}/cheques/useds'.format(rootUrl())\r\n};\r\n\r\nlet journal = {\r\n    getGroupedByMouth: ()=> '{0}/journals/summary/grouped-by-month'.format(rootUrl()),\r\n    getByMonth: (month)=> '{0}/journals/month/{1}'.format(rootUrl(), month),\r\n    getAllByPeriod: (periodId)=> '{0}/journals/period/{1}'.format(rootUrl(), periodId)\r\n};\r\n\r\nlet journalTemplate = {\r\n    getAll: ()=> '{0}/journal-templates'.format(rootUrl())\r\n};\r\n\r\nlet accountReview = {\r\n    getAllGeneralLedgerAccount: ()=> `${rootUrl()}/account-review/general-ledger-account`,\r\n    getAllSubsidiaryLedgerAccount: ()=> `${rootUrl()}/account-review/subsidiary-ledger-account`,\r\n    getAllDetailAccount: ()=> `${rootUrl()}/account-review/detail-account`,\r\n    getAllDimension1: ()=> `${rootUrl()}/account-review/dimension-1`,\r\n    getAllDimension2: ()=> `${rootUrl()}/account-review/dimension-2`,\r\n    getAllDimension3: ()=> `${rootUrl()}/account-review/dimension-3`,\r\n    getAllTiny: ()=> `${rootUrl()}/account-review/tiny`\r\n};\r\n\r\nlet tag = {\r\n    getAll: ()=> `${rootUrl()}/tags`\r\n};\r\n\r\nlet apiUrls = {\r\n    generalLedgerAccount: generalLedgerAccount,\r\n    subsidiaryLedgerAccount: subsidiaryLedgerAccount,\r\n    detailAccount: detailAccount,\r\n    dimensionCategory: dimensionCategory,\r\n    dimension: dimension,\r\n    period: period,\r\n    chequeCategory: chequeCategory,\r\n    bank: bank,\r\n    cheque: cheque,\r\n    journal: journal,\r\n    journalTemplate: journalTemplate,\r\n    accountReview: accountReview,\r\n    tag: tag\r\n};\r\n\r\nexport default apiUrls;",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction chequeCategoryCreateModalController($scope, $modalInstance, formService, chequeCategoryApi, logger, devConstants) {\r\n    \"use strict\";\r\n\r\n    $scope.errors = [];\r\n    $scope.chequeCategory = {\r\n        bankId: '',\r\n        detailAccountId: null,\r\n        totalPages: null,\r\n        firstPageNumber: null\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        Collection.removeAll($scope.errors);\r\n        $scope.isSaving = true;\r\n\r\n        chequeCategoryApi.create($scope.chequeCategory)\r\n            .then(function (result) {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.lastPageNumber = ()=> {\r\n        let model = $scope.chequeCategory;\r\n\r\n        return (model.firstPageNumber && model.totalPages)\r\n            ? model.firstPageNumber + model.totalPages - 1\r\n            : null\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.bankDataSource = {\r\n        type: 'json',\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.bank.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    }\r\n}\r\n\r\nfunction chequeCategoryCreateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: chequeCategoryCreateModalController,\r\n        templateUrl: 'partials/modals/chequeCategoryCreate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('chequeCategoryCreateModalController', chequeCategoryCreateModalController)\r\n    .factory('chequeCategoryCreateModalService', chequeCategoryCreateModalService);\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction chequeCategoryUpdateModalController($scope, $modalInstance, formService, chequeCategoryApi, logger, data, devConstants) {\r\n    \"use strict\";\r\n\r\n    let id = data.id;\r\n    $scope.errors = [];\r\n    $scope.chequeCategory = {\r\n        bankId: '',\r\n        detailAccountId: null,\r\n        totalPages: null,\r\n        firstPageNumber: null\r\n    }\r\n\r\n    chequeCategoryApi.getById(id)\r\n        .then((result)=> $scope.chequeCategory = result);\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        Collection.removeAll($scope.errors);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        chequeCategoryApi.update($scope.chequeCategory)\r\n            .then(function (result) {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.lastPageNumber = ()=> {\r\n        let model = $scope.chequeCategory;\r\n\r\n        return (model.firstPageNumber && model.totalPages)\r\n            ? model.firstPageNumber + model.totalPages - 1\r\n            : null\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.bankDataSource = {\r\n        type: 'json',\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.bank.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    }\r\n}\r\n\r\nfunction chequeCategoryUpdateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: chequeCategoryUpdateModalController,\r\n        templateUrl: 'partials/modals/chequeCategoryUpdate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('chequeCategoryUpdateModalController', chequeCategoryUpdateModalController)\r\n    .factory('chequeCategoryUpdateModalService', chequeCategoryUpdateModalService);\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction detailAccountCreateModalController($scope, $modalInstance, formService, detailAccountApi, logger) {\r\n    \"use strict\";\r\n\r\n    $scope.errors = [];\r\n    $scope.detailAccount = {\r\n        title: '',\r\n        code: '',\r\n        description: ''\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        Collection.removeAll($scope.errors);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        detailAccountApi.create($scope.detailAccount)\r\n            .then((result) => {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction detailAccountCreateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: detailAccountCreateModalController,\r\n        templateUrl: 'partials/modals/detailAccountCreate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('detailAccountCreateModalController', detailAccountCreateModalController)\r\n    .factory('detailAccountCreateModalService', detailAccountCreateModalService);",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction detailAccountUpdateModalController($scope, $modalInstance, formService, detailAccountApi, logger, data) {\r\n    \"use strict\";\r\n\r\n    let id = data.id;\r\n\r\n    $scope.errors = [];\r\n    detailAccountApi.getById(id)\r\n        .then(result => $scope.detailAccount = result);\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        Collection.removeAll($scope.errors);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        detailAccountApi.update(id, $scope.detailAccount)\r\n            .then((result) => {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors) => $scope.errors = errors)\r\n            .finally(() => $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = () => $modalInstance.dismiss();\r\n}\r\n\r\nfunction detailAccountUpdateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: detailAccountUpdateModalController,\r\n        templateUrl: 'partials/modals/detailAccountUpdate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('detailAccountUpdateModalController', detailAccountUpdateModalController)\r\n    .factory('detailAccountUpdateModalService', detailAccountUpdateModalService);",
    "import accModule from '../acc.module';\r\nimport config from '../localData/config';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction dimensionCreateModalController(data,\r\n                                        $scope, $modalInstance, dimensionApi, formService) {\r\n    \"use strict\";\r\n\r\n    $scope.errors = [];\r\n    $scope.dimension = {\r\n        title: '',\r\n        code: '',\r\n        description: ''\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        Collection.removeAll($scope.errors);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        dimensionApi.create(data.categoryId, $scope.dimension)\r\n            .then(function (result) {\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch(function (errors) {\r\n                $scope.errors = errors;\r\n            }).finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = function () {\r\n        $modalInstance.dismiss();\r\n    };\r\n}\r\n\r\nfunction dimensionCreateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: dimensionCreateModalController,\r\n        templateUrl: 'partials/modals/dimensionCreate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('dimensionCreateModalController', dimensionCreateModalController)\r\n    .factory('dimensionCreateModalService', dimensionCreateModalService);",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction dimensionUpdateModalController(data, $scope, $modalInstance, dimensionApi, formService) {\r\n    \"use strict\";\r\n\r\n    $scope.errors = [];\r\n    $scope.dimension = {\r\n        title: '',\r\n        code: '',\r\n        description: ''\r\n    }\r\n\r\n\r\n    dimensionApi.getById(data.id)\r\n        .then((result)=> $scope.dimension = result);\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        Collection.removeAll($scope.errors);\r\n\r\n        $scope.isSaving = true;\r\n\r\n\r\n        dimensionApi.update(data.id, $scope.dimension)\r\n            .then(function (result) {\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction dimensionUpdateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: dimensionUpdateModalController,\r\n        templateUrl: 'partials/modals/dimensionUpdate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('dimensionUpdateModalController', dimensionUpdateModalController)\r\n    .factory('dimensionUpdateModalService', dimensionUpdateModalService);",
    "import accModule from '../acc.module';\r\nimport devConstants from '../localData/devConstants';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction generalLedgerAccountCreateModalController($scope, $modalInstance, generalLedgerAccountApi, logger, formService) {\r\n\r\n    $scope.errors = [];\r\n    $scope.generalLedgerAccount = {\r\n        title: '',\r\n        code: '',\r\n        postingType: null,\r\n        balanceType: null,\r\n        description: ''\r\n    }\r\n\r\n    $scope.isSaving = false;\r\n    $scope.save = function (form) {\r\n        if (form.$invalid) {\r\n            formService.setDirty(form);\r\n            return;\r\n        }\r\n\r\n        Collection.removeAll($scope.errors);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        generalLedgerAccountApi.create($scope.generalLedgerAccount)\r\n            .then(function (result) {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = function () {\r\n        $modalInstance.dismiss();\r\n    };\r\n\r\n    $scope.accountPostingType = devConstants.enums.AccountPostingType();\r\n    $scope.accountBalanceType = devConstants.enums.AccountBalanceType();\r\n}\r\n\r\nfunction generalLedgerAccountCreateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: generalLedgerAccountCreateModalController,\r\n        templateUrl: 'partials/modals/generalLedgerAccountCreate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('generalLedgerAccountCreateModalController', generalLedgerAccountCreateModalController)\r\n    .factory('generalLedgerAccountCreateModalService', generalLedgerAccountCreateModalService);\r\n\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\nimport devConstants from '../localData/devConstants';\r\nimport config from '../localData/config';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction generalLedgerAccountUpdateModalController($scope,\r\n                                                   $modalInstance,\r\n                                                   data,\r\n                                                   generalLedgerAccountApi,\r\n                                                   logger, formService) {\r\n\r\n    $scope.errors = [];\r\n    $scope.generalLedgerAccount = {\r\n        title: '',\r\n        code: '',\r\n        postingType: null,\r\n        balanceType: null,\r\n        description: ''\r\n    };\r\n\r\n    generalLedgerAccountApi.getById(data.id)\r\n        .then(function (result) {\r\n            $scope.generalLedgerAccount = result;\r\n        });\r\n\r\n    $scope.isSaving = false;\r\n    $scope.save = function (form) {\r\n\r\n        if (form.$invalid) {\r\n            formService.setDirty(form);\r\n            return;\r\n        }\r\n\r\n        Collection.removeAll($scope.errors);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        generalLedgerAccountApi.update(data.id, $scope.generalLedgerAccount)\r\n            .then(function (result) {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch(function (errors) {\r\n                $scope.errors = errors;\r\n            })\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.activate = function () {\r\n        if ($scope.generalLedgerAccount.isActive)\r\n            return;\r\n\r\n        generalLedgerAccountApi.activate($scope.generalLedgerAccount.id)\r\n            .then(function () {\r\n                $scope.generalLedgerAccount.isActive = true;\r\n                logger.success();\r\n            })\r\n            .catch(function () {\r\n                $scope.errors = err.errors;\r\n            })\r\n    }\r\n\r\n    $scope.deactivate = function () {\r\n        if (!$scope.generalLedgerAccount.isActive)\r\n            return;\r\n\r\n        generalLedgerAccountApi.deactivate($scope.generalLedgerAccount.id)\r\n            .then(function () {\r\n                $scope.generalLedgerAccount.isActive = false;\r\n                logger.success();\r\n            })\r\n            .catch(function () {\r\n                $scope.errors = err.errors;\r\n            })\r\n    }\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n\r\n    $scope.accountPostingType = devConstants.enums.AccountPostingType();\r\n    $scope.accountBalanceType = devConstants.enums.AccountBalanceType();\r\n}\r\n\r\nfunction generalLedgerAccountUpdateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: generalLedgerAccountUpdateModalController,\r\n        templateUrl: 'partials/modals/generalLedgerAccountUpdate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller(\r\n        'generalLedgerAccountUpdateModalController',\r\n        generalLedgerAccountUpdateModalController)\r\n    .factory(\r\n        'generalLedgerAccountUpdateModalService',\r\n        generalLedgerAccountUpdateModalService);\r\n\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction journalAdvancedSearchModalController($scope, $modalInstance, translate, devConstants,\r\n                                              dimensionCategoryApi) {\r\n    $scope.journalSearch = {\r\n        title: '',\r\n        minNumber: null,\r\n        maxNumber: null,\r\n        minDate: null,\r\n        maxDate: null,\r\n        generalLedgerAccounts: [],\r\n        subsidiaryLedgerAccounts: [], //combination of generalLedgerAccount and subsidiaryLedgerAccount\r\n        detailAccounts: [],\r\n        dimension1s: [],\r\n        dimension2s: [],\r\n        dimension3s: [],\r\n        dimension4s: [],\r\n        chequeNumbers: [],\r\n        minChequeDate: null,\r\n        maxChequeDate: null,\r\n        chequeDescription: '',\r\n        amount: {\r\n            value: null,\r\n            operator: null,\r\n        },\r\n        isNotPeriodIncluded: false\r\n    };\r\n\r\n    $scope.amountOperators = [\r\n        {key: 'eq ', display: translate('Equal to')},\r\n        {key: 'gte', display: translate(\"Greater than or equal to\")},\r\n        {key: 'gt ', display: translate(\"Greater than\")},\r\n        {key: 'lte', display: translate(\"Less than or equal to\")},\r\n        {key: 'lt ', display: translate(\"Less than\")}\r\n    ];\r\n\r\n    $scope.execute = () => {\r\n        let result = {\r\n            resolve: resolveFilter,\r\n            data: $scope.journalSearch\r\n        };\r\n\r\n        $modalInstance.close(result);\r\n    };\r\n\r\n    $scope.close = () => $modalInstance.dismiss();\r\n\r\n    $scope.generalLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.generalLedgerAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.subsidiaryLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.subsidiaryLedgerAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.dimension1DataSource = {};\r\n    $scope.dimension2DataSource = {};\r\n    $scope.dimension3DataSource = {};\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result) => {\r\n            let cats = result.data;\r\n            $scope.dimensionCategories = cats;\r\n\r\n            $scope.dimension1DataSource = dimensionOptionFactory(cats[0].id);\r\n            $scope.dimension2DataSource = dimensionOptionFactory(cats[1].id);\r\n            $scope.dimension3DataSource = dimensionOptionFactory(cats[2].id);\r\n        });\r\n\r\n    function dimensionOptionFactory(categoryId) {\r\n        return {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: devConstants.urls.dimension.allByCategory(categoryId)\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        };\r\n    }\r\n\r\n    $scope.chequeDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.cheque.allUseds()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    function resolveFilter(filterData) {\r\n\r\n        let instance = angular.extend({}, filterData);\r\n\r\n        instance.generalLedgerAccounts = new Collection(filterData.generalLedgerAccounts)\r\n            .asEnumerable()\r\n            .select((g) => g.id)\r\n            .toArray();\r\n\r\n        instance.subsidiaryLedgerAccounts = new Collection(filterData.subsidiaryLedgerAccounts)\r\n            .asEnumerable()\r\n            .select((s) => s.id)\r\n            .toArray();\r\n\r\n        instance.detailAccounts = new Collection(filterData.detailAccounts)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.dimension1s = new Collection(filterData.dimension2s)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.dimension2s = new Collection(filterData.dimension2s)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.dimension3s = new Collection(filterData.dimension3s)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.dimension4s = new Collection(filterData.dimension4s)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.chequeNumbers = new Collection(filterData.chequeNumbers)\r\n            .asEnumerable()\r\n            .select((c) => c.id)\r\n            .toArray();\r\n\r\n\r\n        return instance;\r\n    }\r\n}\r\n\r\nfunction journalAdvancedSearchModalService(modalBase) {\r\n    return modalBase({\r\n        controller: journalAdvancedSearchModalController,\r\n        templateUrl: 'partials/modals/journalAdvancedSearch.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalAdvancedSearchModalController', journalAdvancedSearchModalController)\r\n    .factory('journalAdvancedSearchModalService', journalAdvancedSearchModalService);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalAttachImageController($scope, $modalInstance, data, journalApi) {\r\n\r\n    let journalId = data.id;\r\n    let errors = $scope.errors = [];\r\n\r\n    $scope.uploaded = (fileName)=> {\r\n        journalApi.attachImage(journalId, {fileName: fileName})\r\n            .then(()=> $modalInstance.close(fileName))\r\n            .catch((err)=> errors = err);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction journalAttachImageService(modalBase) {\r\n    return modalBase({\r\n        controller: journalAttachImageController,\r\n        templateUrl: 'partials/modals/journalAttachImage.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalAttachImageController', journalAttachImageController)\r\n    .factory('journalAttachImageService', journalAttachImageService);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalBookkeepingController($scope, $modalInstance, formService,\r\n                                      data, journalApi) {\r\n\r\n    let journalId = data.id;\r\n\r\n    $scope.errors = [];\r\n    $scope.bookkeeping = {\r\n        number: null,\r\n        date: ''\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        journalApi.bookkeeping(journalId, $scope.bookkeeping)\r\n            .then((result)=> $modalInstance.close())\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction journalBookkeepingService(modalBase) {\r\n    return modalBase({\r\n        controller: journalBookkeepingController,\r\n        templateUrl: 'partials/modals/journalBookkeeping.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalBookkeepingController', journalBookkeepingController)\r\n    .factory('journalBookkeepingService', journalBookkeepingService);\r\n\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction journalCreateModalController($scope, $modalInstance, journalApi, logger, formService) {\r\n\r\n    $scope.errors = [];\r\n    $scope.journal = {\r\n        temporaryNumber: null,\r\n        temporaryDate: null,\r\n        description: ''\r\n    };\r\n\r\n    $scope.isDefaultNumberAndDate = false;\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        Collection.removeAll($scope.errors);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        if ($scope.isDefaultNumberAndDate) {\r\n            $scope.journal.temporaryNumber = null;\r\n            $scope.journal.temporaryDate = null;\r\n        }\r\n\r\n        journalApi.create($scope.journal)\r\n            .then((result) => {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors) => {\r\n                $scope.errors = errors;\r\n            })\r\n            .finally(() => $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = () => $modalInstance.dismiss();\r\n}\r\n\r\nfunction journalCreateModalControllerService(modalBase) {\r\n    return modalBase({\r\n        controller: journalCreateModalController,\r\n        templateUrl: 'partials/modals/journalCreate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalCreateModalController', journalCreateModalController)\r\n    .factory('journalCreateModalControllerService', journalCreateModalControllerService);\r\n\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction journalLineCreateOrUpdateController($scope, $modalInstance, $timeout, formService, $q,\r\n                                             journalLineApi, dimensionCategoryApi, logger, devConstants, data) {\r\n\r\n    let journalId = data.journalId;\r\n    let id = data.id;\r\n    let editMode = $scope.editMode = id == undefined ? 'create' : 'update';\r\n\r\n    $scope.generalLedgerAccountShouldBeFocus = true;\r\n\r\n    $scope.errors = [];\r\n    $scope.dimensionCategories = [];\r\n    $scope.journalLine = {\r\n        generalLedgerAccountId: null,\r\n        subsidiaryLedgerAccountId: null,\r\n        detailAccountId: null,\r\n        dimension1Id: null,\r\n        dimension2Id: null,\r\n        dimension3Id: null,\r\n        article: '',\r\n        amount: null,\r\n        balanceType: ''\r\n    };\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.dimension1DataSource = null;\r\n    $scope.dimension2DataSource = null;\r\n    $scope.dimension3DataSource = null;\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result) => {\r\n            let cats = result.data;\r\n            $scope.dimensionCategories = cats;\r\n\r\n            $scope.dimension1DataSource = dimensionDataSourceFactory(cats[0].id);\r\n            $scope.dimension2DataSource = dimensionDataSourceFactory(cats[1].id);\r\n            $scope.dimension3DataSource = dimensionDataSourceFactory(cats[2].id);\r\n        });\r\n\r\n    if (editMode == 'update')\r\n        journalLineApi.getById(id)\r\n            .then((result) => {\r\n                result.amount = 0;\r\n                result.balanceType = '';\r\n\r\n                if (result.creditor > 0) {\r\n                    result.amount = result.creditor;\r\n                    result.balanceType = 'creditor';\r\n                }\r\n\r\n                if (result.debtor > 0) {\r\n                    result.amount = result.debtor;\r\n                    result.balanceType = 'debtor';\r\n                }\r\n\r\n                $scope.journalLine = result\r\n            });\r\n\r\n    let resetForm = (form) => {\r\n\r\n        $scope.journalLine = {\r\n            generalLedgerAccountId: null,\r\n            subsidiaryLedgerAccount: null,\r\n            detailAccountId: null,\r\n            description: '',\r\n            amount: null,\r\n            balanceType: ''\r\n        };\r\n\r\n        $timeout(() => formService.setClean(form), 100);\r\n\r\n        $scope.generalLedgerAccountShouldBeFocus = true;\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    let save = (form) => {\r\n        let deferred = $q.defer();\r\n\r\n        function execute() {\r\n            if (form.$invalid) {\r\n                formService.setDirty(form);\r\n                deferred.reject();\r\n                return;\r\n            }\r\n\r\n            $scope.isSaving = true;\r\n\r\n            if (editMode == 'create')\r\n                journalLineApi.create(journalId, $scope.journalLine)\r\n                    .then(result => {\r\n                        deferred.resolve(result);\r\n                        logger.success();\r\n                    })\r\n                    .catch((errors) => {\r\n                        $scope.errors = errors;\r\n                        deferred.reject();\r\n                    })\r\n                    .finally(() => {\r\n                        $scope.isSaving = false;\r\n                        deferred.resolve();\r\n                    });\r\n\r\n            if (editMode == 'update')\r\n                journalLineApi.update(id, $scope.journalLine)\r\n                    .then(result => {\r\n                        deferred.resolve(result);\r\n                        logger.success();\r\n                    })\r\n                    .catch((errors) => {\r\n                        $scope.errors = errors;\r\n                        deferred.reject();\r\n                    })\r\n                    .finally(() => $scope.isSaving = false);\r\n        }\r\n\r\n        $timeout(execute, 0);\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    $scope.saveAndNew = (form) => {\r\n        save(form)\r\n            .then(() => resetForm(form));\r\n    };\r\n\r\n    $scope.saveAndReturn = (form) => {\r\n        save(form)\r\n            .then((result) => $modalInstance.close(result));\r\n    };\r\n\r\n    $scope.generalLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.generalLedgerAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.generalLedgerAccountOnChange = (current) => {\r\n        $scope.journalLine.subsidiaryLedgerAccountId = null;\r\n\r\n        $scope.journalLine.detailAccount = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n        $scope.journalLine.dimension1 = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n        $scope.journalLine.dimension2 = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n        $scope.journalLine.dimension3 = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n        $scope.journalLine.detailAccount = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n    };\r\n\r\n    $scope.subsidiaryLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: (filter) => {\r\n                    let generalLegerAccountId = new Collection(filter.filter.filters)\r\n                        .asEnumerable()\r\n                        .first(f => f.field == 'generalLedgerAccountId')\r\n                        .value;\r\n\r\n                    return devConstants.urls\r\n                        .subsidiaryLedgerAccount\r\n                        .allByGeneralLedgerAccount(generalLegerAccountId)\r\n                }\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.subsidiaryLedgerAccountSelect = (current) => {\r\n        let item = current;\r\n\r\n        if (!item) {\r\n            $scope.journalLine.detailAccount = {\r\n                canShow: false,\r\n                isRequired: false\r\n            };\r\n            $scope.journalLine.dimension1 = {\r\n                canShow: false,\r\n                isRequired: false\r\n            };\r\n            $scope.journalLine.dimension2 = {\r\n                canShow: false,\r\n                isRequired: false\r\n            };\r\n            $scope.journalLine.dimension3 = {\r\n                canShow: false,\r\n                isRequired: false\r\n            };\r\n\r\n            return;\r\n        }\r\n\r\n        $scope.journalLine.detailAccount = {\r\n            canShow: new Collection(['Required', 'NotRequired']).asEnumerable().contains(item.detailAccountAssignmentStatus),\r\n            isRequired: item.detailAccountAssignmentStatus == 'Required'\r\n        };\r\n\r\n        $scope.journalLine.dimension1 = {\r\n            canShow: new Collection(['Required', 'NotRequired']).asEnumerable().contains(item.dimension1AssignmentStatus),\r\n            isRequired: item.dimension1AssignmentStatus == 'Required'\r\n        };\r\n\r\n        $scope.journalLine.dimension2 = {\r\n            canShow: new Collection(['Required', 'NotRequired']).asEnumerable().contains(item.dimension2AssignmentStatus),\r\n            isRequired: item.dimension2AssignmentStatus == 'Required'\r\n        };\r\n\r\n        $scope.journalLine.dimension3 = {\r\n            canShow: new Collection(['Required', 'NotRequired']).asEnumerable().contains(item.dimension3AssignmentStatus),\r\n            isRequired: item.dimension3AssignmentStatus == 'Required'\r\n        };\r\n    };\r\n\r\n    $scope.subsidiaryLedgerAccountDataBound = (e) => e.sender.trigger('change');\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    let dimensionDataSourceFactory = (categoryId) => {\r\n        return {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: devConstants.urls.dimension.allByCategory(categoryId)\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        }\r\n    };\r\n\r\n    $scope.changeAmountBalance = () =>\r\n        $scope.journalLine.balanceType = $scope.journalLine.balanceType == 'debtor'\r\n            ? 'creditor'\r\n            : 'debtor';\r\n\r\n    $scope.close = () => $modalInstance.dismiss();\r\n}\r\n\r\nfunction journalLineCreateOrUpdateControllerModalService(modalBase) {\r\n    return modalBase({\r\n        controller: journalLineCreateOrUpdateController,\r\n        templateUrl: 'partials/modals/journalLineCreateOrUpdate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalLineCreateController', journalLineCreateOrUpdateController)\r\n    .factory('journalLineCreateControllerModalService', journalLineCreateOrUpdateControllerModalService);\r\n\r\naccModule\r\n    .controller('journalLineUpdateController', journalLineCreateOrUpdateController)\r\n    .factory('journalLineUpdateControllerModalService', journalLineCreateOrUpdateControllerModalService);\r\n\r\n\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction showJournalDetailController($scope, translate, $modalInstance, journalApi, journalLineApi, data) {\r\n    \"use strict\";\r\n\r\n    let id = data.id;\r\n    $scope.journal = {};\r\n\r\n    function fetch() {\r\n        journalApi.getById(id)\r\n            .then((result)=> $scope.journal = result);\r\n    }\r\n\r\n    fetch();\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'row', title: '#', width: '60px', type: 'number', filterable: false, sortable: false},\r\n            {\r\n                name: 'generalLedgerAccountId',\r\n                title: translate('General ledger account'),\r\n                type: 'generalLedgerAccount',\r\n                template: '{{item.generalLedgerAccountCode}}',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'subsidiaryLedgerAccountId',\r\n                title: translate('Subsidiary ledger account'),\r\n                type: 'subsidiaryLedgerAccount',\r\n                template: '{{item.subsidiaryLedgerAccountCode}}',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'detailAccountId',\r\n                title: translate('Detail account'),\r\n                type: 'detailAccount',\r\n                template: '{{item.detailAccountCode}}',\r\n                width: '120px'\r\n            },\r\n            {\r\n                name: 'article', title: translate('Article'), width: '200px', type: 'string',\r\n                template: '<span title=\"{{item.article}}\">{{item.article}}</span>'\r\n            },\r\n            {\r\n                name: 'debtor', title: translate('Debtor'), width: '120px', type: 'number', template: '{{item.debtor|number}}',\r\n                aggregates: ['sum'],\r\n                footerTemplate: '{{aggregates.debtor.sum | number}}'\r\n            },\r\n            {\r\n                name: 'creditor', title: translate('Creditor'), width: '120px', type: 'number', template: '{{item.creditor|number}}',\r\n                aggregates: ['sum'],\r\n                footerTemplate: '{{aggregates.creditor.sum | number}}'\r\n            }\r\n        ],\r\n        commands: [],\r\n        gridSize: '300px',\r\n        readUrl: journalLineApi.url.getAll(id)\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction showJournalDetailModalService(modalBase) {\r\n    return modalBase({\r\n        controller: showJournalDetailController,\r\n        templateUrl: 'partials/modals/showJournalDetail.html',\r\n        size: 'lg'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('showJournalDetailController', showJournalDetailController)\r\n    .factory('showJournalDetailModalService', showJournalDetailModalService);\r\n\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction subsidiaryLedgerAccountEntryModalController($scope, $modalInstance,\r\n                                                     dimensionCategoryApi, subsidiaryLedgerAccountApi,\r\n                                                     logger, formService, data, devConstants) {\r\n\r\n    $scope.errors = [];\r\n    $scope.editMode = data.editMode;\r\n    $scope.generalLedgerAccount = data.generalLedgerAccount;\r\n    $scope.assignmentStatus = devConstants.enums.AssignmentStatus().data;\r\n\r\n    $scope.subsidiaryLedgerAccount = {\r\n        code: '',\r\n        title: '',\r\n        detailAccountAssignmentStatus: null,\r\n        isBankAccount: false,\r\n        dimension1AssignmentStatus: null,\r\n        dimension2AssignmentStatus: null,\r\n        dimension3AssignmentStatus: null,\r\n    };\r\n\r\n    if (data.editMode == 'edit')\r\n        subsidiaryLedgerAccountApi.getById(data.subsidiaryLedgerAccountId)\r\n            .then(result => $scope.subsidiaryLedgerAccount = result);\r\n\r\n    $scope.dimensionCategories = [];\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then(result => $scope.dimensionCategories = result.data);\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = form => {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        Collection.removeAll($scope.errors);\r\n        $scope.isSaving = true;\r\n\r\n        if (data.editMode == 'edit')\r\n            subsidiaryLedgerAccountApi.update(\r\n                $scope.subsidiaryLedgerAccount.id,\r\n                $scope.subsidiaryLedgerAccount)\r\n                .then(() => {\r\n                    logger.success();\r\n                    $modalInstance.close();\r\n                })\r\n                .catch(errors => $scope.errors = errors)\r\n                .finally(() => $scope.isSaving = false);\r\n\r\n        subsidiaryLedgerAccountApi.create(\r\n            data.generalLedgerAccount.id,\r\n            $scope.subsidiaryLedgerAccount)\r\n            .then(result => {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch(errors => $scope.errors = errors)\r\n            .finally(() => $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = () => $modalInstance.dismiss();\r\n\r\n}\r\n\r\nfunction subsidiaryLedgerAccountEntryModalService(modalBase) {\r\n    return modalBase({\r\n        controller: subsidiaryLedgerAccountEntryModalController,\r\n        templateUrl: 'partials/modals/subsidiaryLedgerAccountEntry.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('subsidiaryLedgerAccountEntryModalController', subsidiaryLedgerAccountEntryModalController)\r\n    .factory('subsidiaryLedgerAccountEntryModalService', subsidiaryLedgerAccountEntryModalService);\r\n\r\n\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction writeChequeOnJournalLineEntryController($scope,\r\n                                                 chequeApi, chequeCategoryApi, data, $timeout,\r\n                                                 formService, $modalInstance, devConstants) {\r\n    $scope.errors = [];\r\n    $scope.cheque = {\r\n        journalLineId: data.journalLineId,\r\n        detailAccountDisplay: data.detailAccountDisplay,\r\n        chequeId: null,\r\n        amount: data.amount,\r\n        date: data.date,\r\n        description: data.description\r\n    };\r\n\r\n    $scope.openChequeCategories = [];\r\n    $scope.selectedChequeCategory = false;\r\n    $scope.hasOpenChequeCategories = true;\r\n\r\n    chequeCategoryApi.getOpens(data.detailAccountId)\r\n        .then((result)=> {\r\n            $scope.openChequeCategories = result;\r\n            if (result.length == 0)\r\n                $scope.hasOpenChequeCategories = false;\r\n        });\r\n\r\n    $scope.selectChequeCategory = (cat)=> {\r\n        $scope.selectedChequeCategory = false;\r\n        $scope.whiteChequesDataSource.transport.read.url = devConstants.urls.cheque.allwhites(cat.id);\r\n\r\n        $timeout(()=> $scope.selectedChequeCategory = cat, 1);\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n        if (!$scope.hasOpenChequeCategories)\r\n            return;\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        $scope.isSaving = true;\r\n        chequeApi.write($scope.cheque.chequeId, $scope.cheque)\r\n            .then((result)=> $modalInstance.close(result))\r\n            .catch((result)=> $scope.errors = result)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n\r\n    $scope.whiteChequesDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: null\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n}\r\n\r\nfunction writeChequeOnJournalLineEntryService(modalBase) {\r\n    return modalBase({\r\n        controller: writeChequeOnJournalLineEntryController,\r\n        templateUrl: 'partials/modals/writeChequeOnJournalLineEntry.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('writeChequeOnJournalLineEntryController', writeChequeOnJournalLineEntryController)\r\n    .factory('writeChequeOnJournalLineEntryService', writeChequeOnJournalLineEntryService);",
    "import accModule from '../acc.module';\r\n\r\nfunction apiPromise($http, $q) {\r\n\r\n    function promise($httpPromise) {\r\n        var deferred = $q.defer();\r\n\r\n        $httpPromise\r\n            .success(function (result) {\r\n                if (result.isValid) {\r\n                    deferred.resolve(result.returnValue);\r\n                }\r\n                else {\r\n                    deferred.reject(result.errors)\r\n                }\r\n            })\r\n            .error(function (error) {\r\n                console.error(error);\r\n                deferred.reject(['Internal Error']);\r\n            });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    return {\r\n        get: function (url, data) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.get(url, {params: data, paramSerializer: '$httpParamSerializerJQLike'})\r\n                .success(function (result) {\r\n                    deferred.resolve(result);\r\n                })\r\n                .error(function (error) {\r\n                    console.error(error);\r\n                    deferred.reject(['Internal Error']);\r\n                });\r\n\r\n            return deferred.promise;\r\n        },\r\n        post: function (url, data) {\r\n            return promise($http.post(url, data));\r\n        },\r\n        put: function (url, data) {\r\n            return promise($http.put(url, data));\r\n        },\r\n        delete: function (url, data) {\r\n            return promise($http.delete(url, data));\r\n        }\r\n    };\r\n}\r\n\r\naccModule.factory('apiPromise', apiPromise)",
    "import swal from 'bootstrap-sweetalert';\r\nimport accModule from '../acc.module';\r\n\r\nfunction confirm(translate, $q) {\r\n\r\n    return (message, title, type)=> {\r\n        let deferred = $q.defer();\r\n\r\n        swal({\r\n            title: title,\r\n            text: message,\r\n            type: type || \"warning\",\r\n            showCancelButton: true,\r\n            cancelButtonText: translate('No'),\r\n            confirmButtonText: translate('Yes')\r\n        }, (isConfirm)=> {\r\n            if (isConfirm) deferred.resolve();\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n}\r\n\r\naccModule.factory('confirm', confirm);\r\n",
    "\"use strict\";\r\n\r\nexport default class currentService {\r\n    constructor($cookies) {\r\n        this.current = {\r\n            today: null,\r\n            fiscalPeriod: null,\r\n            mode: null,\r\n            branch: null,\r\n            user: JSON.parse(localStorage.getItem('currentUser'))\r\n        };\r\n\r\n        this.$cookies = $cookies;\r\n    }\r\n\r\n    setToday(today){\r\n        this.current.today = today;\r\n    }\r\n\r\n    setFiscalPeriod(fiscalPeriodId) {\r\n        this.$cookies.put('current-period', fiscalPeriodId);\r\n        this.current.fiscalPeriod = fiscalPeriodId == 0 ? null : fiscalPeriodId;\r\n    }\r\n\r\n    setMode(mode) {\r\n        this.$cookies.put('current-mode', mode);\r\n        this.current.mode = mode;\r\n    }\r\n\r\n    setBranch(branch) {\r\n        this.current.branch = branch;\r\n    }\r\n\r\n    get() {\r\n        return this.current;\r\n    }\r\n}",
    "import accModule from '../acc.module';\r\n\r\nfunction formService() {\r\n\r\n    function setDirty(form) {\r\n        angular.forEach(form.$error, function (type) {\r\n            angular.forEach(type, function (field) {\r\n                field.$setDirty();\r\n            });\r\n        });\r\n        return form;\r\n    }\r\n\r\n    function setClean(form) {\r\n        angular.forEach(form.$error, function (type) {\r\n            angular.forEach(type, function (field) {\r\n                field.$setPristine();\r\n            });\r\n        });\r\n    }\r\n\r\n    return {\r\n        setDirty: setDirty,\r\n        setClean: setClean\r\n    }\r\n}\r\n\r\naccModule.service('formService', formService);",
    "import accModule from '../acc.module';\r\nlet translation = JSON.parse(localStorage.getItem('translate'));\r\n\r\nfunction gridFilterCellTypeProvider() {\r\n    var type = {\r\n        string: {\r\n            operator: \"contains\",\r\n            template: `<input class=\"form-control\" type=\"text\" ng-model=\"filter.value\"/>`\r\n        },\r\n        number: {\r\n            operator: \"eq\",\r\n            data: [\r\n                {key: 'eq', display: translation['Equal to']},\r\n                {key: 'gte', display: translation['Greater than or equal to']},\r\n                {key: 'gt', display: translation['Greater than']},\r\n                {key: 'lte', display: translation['Less than or equal to']},\r\n                {key: 'lt', display: translation['Less than']}\r\n            ],\r\n            template: `<li>\r\n                <dev-tag-numeric ng-model=\"filter.value\"></dev-tag-numeric>\r\n            </li>\r\n            <li>\r\n                <dev-tag-dropdownlist\r\n                    k-data-text-field=\"display\"\r\n                    k-data-value-field=\"key\"\r\n                    k-data-source=\"items\"\r\n                    ng-model=\"filter.operator\"></dev-tag-dropdownlist>\r\n            </li>`\r\n        },\r\n        date: {\r\n            template: `<li>\r\n                <dev-tag-datepicker ng-model=\"filter.value\"></dev-tag-datepicker>\r\n            </li>`\r\n        },\r\n        boolean: {\r\n            template: `<li>\r\n                <dev-tag-check-box ng-model=\"filter.value\"></dev-tag-check-box>\r\n            </li>`\r\n        }\r\n    };\r\n\r\n    function combo(option) {\r\n        return {\r\n            showOperators: false,\r\n            operator: \"eq\",\r\n            template: function (args) {\r\n                args.element.kendoComboBox({\r\n                    placeholder: '...',\r\n                    dataTextField: option.text,\r\n                    dataValueField: option.value,\r\n                    valuePrimitive: true,\r\n                    filter: \"contains\",\r\n                    autoBind: false,\r\n                    minLength: 2,\r\n                    dataSource: {\r\n                        type: \"json\",\r\n                        serverFiltering: true,\r\n                        transport: {\r\n                            read: {\r\n                                url: option.url\r\n                            },\r\n                            parameterMap: function (options) {\r\n                                return kendo.stringify(options);\r\n                            }\r\n                        },\r\n                        schema: {\r\n                            parse: function (response) {\r\n                                return response.data;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    function dropdown(option) {\r\n        return {\r\n            showOperators: false,\r\n            operator: \"eq\",\r\n            template: function (args) {\r\n                args.element.kendoDropDownList({\r\n                    dataTextField: option.text,\r\n                    dataValueField: option.value,\r\n                    filter: \"contains\",\r\n                    autoBind: false,\r\n                    minLength: 2,\r\n                    dataSource: option.data,\r\n                    valuePrimitive: true\r\n                });\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    this.control = {\r\n        combo: combo,\r\n        dropdown: dropdown\r\n    };\r\n\r\n    this.$get = function () {\r\n        return type;\r\n    };\r\n\r\n    this.set = function (extendedObject) {\r\n        type = angular.extend(type, extendedObject);\r\n    }\r\n}\r\n\r\naccModule.provider('gridFilterCellType', gridFilterCellTypeProvider);\r\n\r\n",
    "import swal from 'bootstrap-sweetalert';\r\nimport accModule from '../acc.module';\r\n\r\nfunction logger(translate) {\r\n    return {\r\n        success: function (message) {\r\n            swal({\r\n                title: translate('Successful'),\r\n                text: message || translate('Done successfully'),\r\n                type: 'success',\r\n                timer: 2000,\r\n                confirmButtonText: translate('OK')\r\n            });\r\n        },\r\n        info: function (message) {\r\n            swal({\r\n                title: translate('Info'),\r\n                text: message,\r\n                type: 'info',\r\n                timer: 2000,\r\n                confirmButtonText: translate('OK')\r\n            });\r\n        },\r\n        warning: function (message) {\r\n            swal({\r\n                title: translate('Warning'),\r\n                text: message,\r\n                type: 'warning',\r\n                timer: 2000,\r\n                confirmButtonText: translate('OK')\r\n            });\r\n        },\r\n        error: function (message) {\r\n            swal({\r\n                title: translate('Error'),\r\n                text: message,\r\n                type: 'error',\r\n                timer: 4000,\r\n                confirmButtonText: translate('OK')\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\naccModule.factory('logger', logger);\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nclass menuItemsProvider {\r\n\r\n    constructor() {\r\n        this.menuItems = [];\r\n    }\r\n\r\n    $get() {\r\n        return this.menuItems;\r\n    }\r\n\r\n    add(item) {\r\n        if (!item.url.includes('luca'))\r\n            item.url = `/luca${item.url}`;\r\n\r\n        item.children && item.children.forEach(child =>{\r\n            if(!child.url.includes('luca'))\r\n                child.url = `/luca${child.url}`\r\n        });\r\n\r\n        this.menuItems.push(item);\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\naccModule.provider('menuItems', menuItemsProvider);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction modalBase($modal, $q) {\r\n\r\n    /*{controller: string, templateUrl: string, size(optional): string, data: object}*/\r\n\r\n    var modalFunction = function (option) {\r\n        var modalInstance = $modal.open({\r\n            animation: true,\r\n            templateUrl: option.templateUrl,\r\n            controller: option.controller,\r\n            backdrop: true,\r\n            keyboard: false,\r\n            size: option.size, // nothing = normal , 'sm' = small , 'lg' = large\r\n            resolve: {\r\n                data: function () {\r\n                    return option.data;\r\n                }\r\n            }\r\n        });\r\n\r\n        var deferred = $q.defer();\r\n\r\n        modalInstance.result.then(function (result) {\r\n            deferred.resolve(result);\r\n        });\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    return function (option) {\r\n        return {\r\n            show: function (data) {\r\n                option.data = data;\r\n                return modalFunction(option)\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\naccModule.factory('modalBase', modalBase);\r\n",
    "import accModule from '../acc.module';\r\nimport swal from 'bootstrap-sweetalert';\r\n\r\nfunction prompt(translate, $q) {\r\n    return (option)=> {\r\n        let deferred = $q.defer();\r\n\r\n        swal({\r\n            title: option.title,\r\n            text: option.text,\r\n            type: 'input',\r\n            showCancelButton: true,\r\n            closeOnConfirm: false,\r\n            cancelButtonText: translate('Cancel'),\r\n            confirmButtonText: translate('Confirm'),\r\n            showLoaderOnConfirm: true,\r\n            animation: \"slide-from-top\",\r\n            inputPlaceholder: translate(\"Type something\")\r\n        }, (inputValue)=> {\r\n            if (!inputValue) {\r\n                swal.showInputError(translate('You should type something'));\r\n                return false;\r\n            }\r\n\r\n            deferred.resolve(inputValue);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n}\r\n\r\naccModule.factory('prompt', prompt);",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction routeNavigatorService($route, $location) {\r\n\r\n    function getRoute(name) {\r\n        return new Collection(getKeys($route.routes))\r\n            .asEnumerable()\r\n            .select((r)=> $route.routes[r])\r\n            .first((r)=> r.controller == '{0}Controller'.format(name));\r\n    }\r\n\r\n    let navigate = (name, parameters, queryString)=> {\r\n        let route = getRoute(name);\r\n        let path = route.originalPath;\r\n\r\n        route.keys.forEach((key)=> {\r\n            let parameterValue = parameters[key.name] || '';\r\n            if (parameterValue == '' && key.optional == true)\r\n                throw new Error('[{0}] parameter is not optional'.format(key.name));\r\n\r\n            path = path.replace(new RegExp(':{0}'.format(key.name)), parameterValue);\r\n        });\r\n\r\n        if (queryString)\r\n            $location.search(queryString);\r\n\r\n        $location.path(path);\r\n\r\n    };\r\n\r\n    return navigate;\r\n}\r\n\r\naccModule.factory('navigate', routeNavigatorService);\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction showReport() {\r\n    return (url)=> {\r\n        window.open(url, '_blank');\r\n    }\r\n}\r\n\r\naccModule.factory('showReport', showReport);",
    "import accModule from '../acc.module';\r\n\r\nfunction translate($filter) {\r\n    return (key) => $filter('translate')(key);\r\n}\r\n\r\naccModule.factory('translate', translate);",
    "import accModule from '../acc.module';\r\n\r\n\r\nfunction translateStorageService() {\r\n\r\n    return {\r\n        put: (name, value)=> {\r\n            localStorage.setItem('translate.{0}'.format(name), value);\r\n        },\r\n        get: (name)=> {\r\n            return localStorage.getItem('translate.{0}'.format(name));\r\n        }\r\n    }\r\n}\r\n\r\naccModule.factory('translateStorageService', translateStorageService);",
    "\"use strict\";\r\n\r\nexport function addVariable(options) {\r\n    let variable = new Stimulsoft.Report.Dictionary.StiVariable();\r\n\r\n    variable.name = options.name;\r\n    variable.alias = options.alias;\r\n    variable.category = options.category;\r\n    variable.value = options.value;\r\n\r\n    return variable;\r\n}\r\n\r\nexport function viewerConfig() {\r\n    let config = new Stimulsoft.Viewer.StiViewerOptions();\r\n\r\n    config.toolbar.fontFamily = \"IRANSans\";\r\n    config.toolbar.showDesignButton = true;\r\n    config.toolbar.printDestination = Stimulsoft.Viewer.StiPrintDestination.Pdf;\r\n    config.appearance.htmlRenderMode = Stimulsoft.Report.Export.StiHtmlExportMode.Table;\r\n\r\n    return config;\r\n}\r\n\r\nexport function addTranslates(report) {\r\n    let translates = JSON.parse(localStorage.getItem('translate'));\r\n\r\n    Object.keys(translates).forEach(key => {\r\n        report.dictionary.variables.add(addVariable({\r\n            name: key,\r\n            alias: key,\r\n            category: \"translate\",\r\n            value: translates[key]\r\n        }));\r\n    });\r\n\r\n}\r\n"
  ]
}