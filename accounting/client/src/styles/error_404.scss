@import "resourses/mixins";

*, *::before, *::after{
  @include box-sizing(border-box);
  font-family: "IRANSans", sans-serif, tahoma;
}

body{
  margin: 0;
  position: relative;
  width: 100%;
  min-height: 100vh;
  overflow: hidden;
  background-color: $color-too-dark-gray;
}

//Main Variables
$error-code-anim-from: $color-dark-blue;// The Default Color
$error-code-anim-to: $color-red;// Default Color Will Change To It
$error-caption-color: darken($color-gray,20);
$error-message-color: $color-dark-gray;
$btn-trans-duration: 0.75s;
$wrapper-fade-in-duration: 1.25s;

#main-wrapper{
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  @include transform( translate(-50%, -50%) );
  max-width: 100%;
  max-height: 100vh;
  width: 500px;
  min-height: 200px;
  margin: 0;
  padding: 25px;
  background-color: white;
  @include border-radius();
  @include border(bottom, 3px solid $color-red);
  @include overflow-x(hidden);
  @include overflow-y(auto);
  @keyframes main-wrapper-fade-in-anim{
    from{
      opacity: 0.5;
      @include transform( translate(-50%,-75%) );
    }
    to{
      opacity: 1;
      @include transform( translate(-50%,-50%) );
    }
  }
  @include anim(main-wrapper-fade-in-anim ease $wrapper-fade-in-duration);

  #error-code{
    display: block;
    position: relative;
    margin: 0 auto;
    padding: 0;
    width: 100%;
    height: 150px;
    line-height: 150px;
    text-align: center;
    font-size: 150px;
    font-weight: lighter;


    $from-color: $color-dark-blue;// The Default Color
    $to-color: $color-red;// Default Color Will Change To It

    @keyframes error-num-digits-anim{
      0%{ color: $error-code-anim-from; }
      50%{ color: $error-code-anim-to; }
      100%{ color: $error-code-anim-from; }
    }
    @for $i from 1 through 3{
      & > span:nth-of-type(#{$i}){
        color: $error-code-anim-from;
        will-change: color;
        vertical-align: center;
        @include anim(error-num-digits-anim ease 4s infinite);
        @include anim-delay(0.1s * ($i - 1));
      }
    }
  }

  #error-icon{
    display: block;
    width: 45%;
    height: auto;
    margin: 0 auto 25px auto;
    padding: 0;
  }

  @mixin error-message-defaults(){
    text-align: center;
    color: $error-message-color;
    font-size: 11pt;
    font-weight: lighter;
  }

  #error-caption{
    text-align: center;
    color: $error-caption-color;
    margin: 0;
  }

  #error-message-fa{
    direction: rtl;
    @include error-message-defaults();
  }
  #error-message-en{
    direction: ltr;
    @include error-message-defaults();
  }

  #btn-holder{
    display: block;
    position: relative;
    width: 100%;
    min-height: 50px;
    text-align: center;
  }

  .so-btn{
    display: inline-block;
    position: relative;
    margin: 0 auto;
    padding: 10px 20px;
    color: white !important;
    background-color: white !important;
    @include border(none);
    @include border-radius();
    cursor: pointer;
    @include perspective(1000px);

    /*@include transition(transform ease $btn-trans-duration);

    &:hover{
      @include transform(scale(0.97,0.97));
    }*/

    @mixin before-after-defaults(){
      display: block;
      position: absolute;
      @include backface-visib(hidden !important);
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      @include transition(#{
            transform ease $btn-trans-duration,
            box-shadow ease $btn-trans-duration
      });
      line-height: 45px;
      font-size: 12pt;
      @include border-radius();
      @include box-shadow(0 2px 5px 1px rgba(0,0,0,0.5));
    }
    @mixin before-after-defaults-hover(){
      @include box-shadow(0 2px 3px 1px rgba(0,0,0,0.5));
    }

    &::before{
      @include before-after-defaults();
      z-index: 2;
      background-color: $color-blue;
      @include transform(rotateX(0deg));
    }
    &:hover::before{
      @include transform(rotateX(180deg));
      @include before-after-defaults-hover();
    }
    &::after{
      @include before-after-defaults();
      z-index: 1;
      background-color: $color-red;
      @include transform(rotateX(-180deg));
    }
    &:hover::after{
      @include transform(rotateX(0deg));
      @include before-after-defaults-hover();
    }
  }
  #back-btn{
    &::before{
      content: 'قبلی';
    }
    &::after{
      content: 'قبلی';
    }
  }
  #home-btn{
    &::before{
      content: 'صفحه ی اصلی';
    }
    &::after{
      content: 'صفحه ی اصلی';
    }
  }

}