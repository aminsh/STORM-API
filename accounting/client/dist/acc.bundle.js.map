{
  "version": 3,
  "sources": [
    "../../node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "src\\acc.config.js",
    "src\\acc.module.js",
    "src\\apis\\bankApi.js",
    "src\\apis\\chequeApi.js",
    "src\\apis\\chequeCategoryApi.js",
    "src\\apis\\detailAccountApi.js",
    "src\\apis\\dimensionApi.js",
    "src\\apis\\dimensionCategoryApi.js",
    "src\\apis\\fiscalPeriodApi.js",
    "src\\apis\\generalLedgerAccountApi.js",
    "src\\apis\\journalApi.js",
    "src\\apis\\journalLineApi.js",
    "src\\apis\\journalTemplateApi.js",
    "src\\apis\\reportApi.js",
    "src\\apis\\subsidiaryLedgerAccountApi.js",
    "src\\apis\\tagApi.js",
    "src\\config\\ADMdtp.config.js",
    "src\\config\\src\\config\\authConfig.js",
    "src\\config\\gridFilterCellTypeConfig.js",
    "src\\config\\menu.config.js",
    "src\\config\\route.config.js",
    "src\\config\\translate.config.js",
    "src\\controllers\\accountReviewController.js",
    "src\\controllers\\accountReviewTurnoverController.js",
    "src\\controllers\\banksController.js",
    "src\\controllers\\chequeCategoriesController.js",
    "src\\controllers\\chequePrintController.js",
    "src\\controllers\\createFiscalPeriodController.js",
    "src\\controllers\\detailAccountsController.js",
    "src\\controllers\\dimensionsController.js",
    "src\\controllers\\generalLedgerAccountsController.js",
    "src\\controllers\\homeController.js",
    "src\\controllers\\journalCopy.js",
    "src\\controllers\\journalManagementController.js",
    "src\\controllers\\src\\controllers\\journalPrintController.js",
    "src\\controllers\\journalTemplatesController.js",
    "src\\controllers\\journalUpdateController.js",
    "src\\controllers\\journalsController.js",
    "src\\controllers\\reportController.js",
    "src\\controllers\\reportDesignerController.js",
    "src\\controllers\\subsidiaryLedgerAccountCreateController.js",
    "src\\controllers\\subsidiaryLedgerAccountUpdateController.js",
    "src\\controllers\\subsidiaryLedgerAccountsController.js",
    "src\\directives\\alert.js",
    "src\\directives\\blockUi.js",
    "src\\directives\\button.js",
    "src\\directives\\chart.doughnut.js",
    "src\\directives\\checkbox.js",
    "src\\directives\\combobox.js",
    "src\\directives\\content.js",
    "src\\directives\\contentCover.js",
    "src\\directives\\customValidator.js",
    "src\\directives\\datepicker.js",
    "src\\directives\\src\\directives\\dropdownlist.js",
    "src\\directives\\focusMe.js",
    "src\\directives\\grid.bootstrap.js",
    "src\\directives\\grid.editable.js",
    "src\\directives\\grid.editable.row.js",
    "src\\directives\\grid.filter.js",
    "src\\directives\\grid.sort.js",
    "src\\directives\\journalSearchParameters.js",
    "src\\directives\\src\\directives\\layout.js",
    "src\\directives\\multiSelect.js",
    "src\\directives\\ngHtmlCompile.js",
    "src\\directives\\ngKendoGrid.js",
    "src\\directives\\numeric.js",
    "src\\directives\\paging.js",
    "src\\directives\\src\\directives\\panelbar.js",
    "src\\directives\\radio.js",
    "src\\directives\\reportDesigner.js",
    "src\\directives\\reportViewer.js",
    "src\\directives\\shell.header.js",
    "src\\directives\\shell.js",
    "src\\directives\\shell.sidebar.item.js",
    "src\\directives\\shell.sidebar.js",
    "src\\directives\\subContent.js",
    "src\\directives\\textEditor.js",
    "src\\directives\\uploader.js",
    "src\\directives\\validationSummary.js",
    "src\\filters\\amount.js",
    "src\\localData\\config.js",
    "src\\localData\\devConstants.js",
    "src\\localData\\enumType.js",
    "src\\localData\\enums.js",
    "src\\localData\\urls.js",
    "src\\modals\\chequeCategroyCreate.js",
    "src\\modals\\chequeCategroyUpdate.js",
    "src\\modals\\detailAccountCreate.js",
    "src\\modals\\detailAccountUpdate.js",
    "src\\modals\\dimensionCreate.js",
    "src\\modals\\dimensionUpdate.js",
    "src\\modals\\generalLedgerAccountCreate.js",
    "src\\modals\\generalLedgerAccountUpdate.js",
    "src\\modals\\journalAdvnacedSearch.js",
    "src\\modals\\journalAttachImage.js",
    "src\\modals\\journalBookkeeping.js",
    "src\\modals\\journalCreate.js",
    "src\\modals\\journalLineCreateOrUpdate.js",
    "src\\modals\\showJournalDetail.js",
    "src\\modals\\subsidiaryLedgerAccountEntry.js",
    "src\\modals\\writeChequeOnJournalLineEntry.js",
    "src\\services\\apiPromise.js",
    "src\\services\\confirm.js",
    "src\\services\\currentService.js",
    "src\\services\\formService.js",
    "src\\services\\gridFilterCellTypeProvider.js",
    "src\\services\\logger.js",
    "src\\services\\menuItemsProvider.js",
    "src\\services\\modalBase.js",
    "src\\services\\prompt.js",
    "src\\services\\routeNavigatorService.js",
    "src\\services\\showReport.js",
    "src\\services\\translate.js",
    "src\\services\\translateStorageService.js",
    "src\\utilities\\stimulsoft.js",
    "..\\..\\node_modules\\adm-dtp\\dist\\ADM-dateTimePicker.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import accModule from './acc.module';\r\n\r\n// load config\r\nimport  './config/route.config';\r\nimport  './config/menu.config.js';\r\nimport  './config/translate.config';\r\nimport './config/gridFilterCellTypeConfig';\r\nimport './config/authConfig';\r\nimport ADMdtpConfig from './config/ADMdtp.config';\r\n\r\n\r\n//load controllers\r\nimport './controllers/homeController';\r\nimport './controllers/generalLedgerAccountsController';\r\nimport './controllers/subsidiaryLedgerAccountsController';\r\nimport './controllers/subsidiaryLedgerAccountCreateController';\r\nimport './controllers/subsidiaryLedgerAccountUpdateController';\r\nimport './controllers/detailAccountsController';\r\nimport './controllers/dimensionsController';\r\nimport './controllers/journalsController';\r\nimport './controllers/journalUpdateController';\r\nimport './controllers/chequeCategoriesController';\r\nimport './controllers/banksController';\r\nimport './controllers/journalManagementController';\r\nimport './controllers/journalCopy';\r\nimport './controllers/journalTemplatesController';\r\nimport './controllers/accountReviewController';\r\nimport './controllers/accountReviewTurnoverController';\r\nimport './controllers/journalPrintController';\r\nimport createFiscalPeriodController from  './controllers/createFiscalPeriodController';\r\nimport chequePrintController from './controllers/chequePrintController';\r\nimport reportController from './controllers/reportController';\r\nimport reportDesignerController from './controllers/reportDesignerController';\r\n\r\n// load apis\r\nimport './apis/generalLedgerAccountApi';\r\nimport './apis/subsidiaryLedgerAccountApi';\r\nimport './apis/detailAccountApi';\r\nimport './apis/dimensionCategoryApi';\r\nimport './apis/dimensionApi';\r\nimport './apis/journalApi';\r\nimport './apis/journalLineApi';\r\nimport './apis/chequeCategoryApi';\r\nimport './apis/bankApi';\r\nimport './apis/chequeApi';\r\nimport './apis/journalTemplateApi';\r\nimport FiscalPeriodApi from './apis/fiscalPeriodApi';\r\nimport ReportApi from './apis/reportApi';\r\nimport TagApi from './apis/tagApi';\r\n\r\n// load modals\r\nimport './modals/generalLedgerAccountCreate';\r\nimport './modals/generalLedgerAccountUpdate';\r\nimport './modals/subsidiaryLedgerAccountEntry';\r\nimport './modals/dimensionCreate';\r\nimport './modals/dimensionUpdate';\r\nimport './modals/journalCreate';\r\nimport './modals/journalLineCreateOrUpdate';\r\nimport './modals/journalBookkeeping';\r\nimport './modals/journalAttachImage';\r\nimport './modals/chequeCategroyCreate';\r\nimport './modals/chequeCategroyUpdate';\r\nimport './modals/writeChequeOnJournalLineEntry';\r\nimport './modals/showJournalDetail';\r\nimport './modals/journalAdvnacedSearch';\r\nimport './modals/detailAccountCreate';\r\nimport './modals/detailAccountUpdate';\r\n\r\nimport './localData/devConstants';\r\n\r\n//directives\r\nimport './directives/alert';\r\nimport './directives/subContent';\r\nimport './directives/blockUi';\r\nimport './directives/customValidator';\r\nimport './directives/validationSummary';\r\nimport './directives/focusMe';\r\nimport './directives/uploader';\r\nimport './directives/button';\r\nimport './directives/combobox';\r\nimport './directives/content';\r\nimport './directives/datepicker';\r\nimport './directives/dropdownlist';\r\nimport './directives/multiSelect';\r\n//import './directives/grid';\r\nimport './directives/layout';\r\nimport './directives/numeric';\r\nimport './directives/textEditor';\r\nimport './directives/checkbox';\r\nimport './directives/radio';\r\nimport './directives/ngKendoGrid';\r\nimport './directives/journalSearchParameters';\r\nimport './directives/reportViewer';\r\nimport shell from './directives/shell';\r\nimport {contentCover, contentCoverForm} from './directives/contentCover';\r\nimport './directives/reportDesigner';\r\nimport panelBar from './directives/panelbar';\r\nimport shellHeader from './directives/shell.header';\r\nimport shellSidebar from './directives/shell.sidebar';\r\nimport shellSidebarItem from './directives/shell.sidebar.item';\r\nimport grid from './directives/grid.bootstrap';\r\nimport gridFilter from './directives/grid.filter';\r\nimport gridSort from './directives/grid.sort';\r\nimport EditableGrid from './directives/grid.editable';\r\nimport EditableGridRow from './directives/grid.editable.row';\r\nimport paging from './directives/paging';\r\nimport ngHtmlCompile from './directives/ngHtmlCompile';\r\nimport doughnutChart from './directives/chart.doughnut';\r\n\r\n//filter\r\nimport './filters/amount';\r\n\r\n//service\r\nimport './services/formService';\r\nimport './services/translateStorageService';\r\nimport './services/apiPromise';\r\nimport './services/confirm';\r\nimport './services/gridFilterCellTypeProvider';\r\nimport './services/logger';\r\nimport './services/menuItemsProvider';\r\nimport './services/modalBase';\r\nimport './services/routeNavigatorService';\r\nimport './services/translate';\r\nimport './services/prompt';\r\nimport './services/showReport';\r\nimport  currentService from './services/currentService';\r\n\r\n\r\naccModule\r\n    .config(ADMdtpConfig)\r\n    .directive('shell', shell)\r\n    .directive('shellHeader', shellHeader)\r\n    .directive('shellSidebar', shellSidebar)\r\n    .directive('shellSidebarItem', shellSidebarItem)\r\n    .directive('devTagContentCover', contentCover)\r\n    .directive('devTagContentCoverFrom', contentCoverForm)\r\n    .directive('devTagPanelBar', panelBar)\r\n    .directive('devTagGrid', grid)\r\n    .directive('devTagGridFilter', gridFilter)\r\n    .directive('devTagGridSort', gridSort)\r\n    .directive('devTagPaging', paging)\r\n    .directive('devTagGridEditable', EditableGrid)\r\n    .directive('devTagGridEditableRow', EditableGridRow)\r\n    .directive('ngHtmlCompile', ngHtmlCompile)\r\n    .directive('devTagChartDoughnut', doughnutChart)\r\n    .service(currentService.name, currentService)\r\n    .service('fiscalPeriodApi', FiscalPeriodApi)\r\n    .service('reportApi', ReportApi)\r\n    .service('tagApi', TagApi)\r\n    .controller(createFiscalPeriodController.name, createFiscalPeriodController)\r\n    .controller('chequePrintController', chequePrintController)\r\n    .controller('reportController', reportController)\r\n    .controller('reportDesignerController', reportDesignerController);\r\n\r\naccModule.init();\r\n\r\n",
    "import angular from 'angular';\r\nimport 'angular-animate';\r\nimport 'angular-bootstrap';\r\nimport 'angular-route';\r\nimport 'angular-sanitize';\r\nimport 'angular-translate';\r\nimport 'angular-resource';\r\nimport 'angular-messages';\r\nimport 'angular-cookies';\r\nimport 'angular-cookies';\r\nimport 'adm-dtp';\r\nimport 'chart.js';\r\nimport 'angular-chart';\r\nimport 'angular-ladda';\r\n\r\nObject.defineProperty(Array.prototype, 'toNumber', { enumerable: false });\r\nObject.defineProperty(Array.prototype, 'dtp_toDate', { enumerable: false });\r\n\r\nlet accModule = angular.module('acc.module', [\r\n    'ngAnimate',\r\n    'ngRoute',\r\n    'ngResource',\r\n    'ngSanitize',\r\n    'ui.bootstrap',\r\n    'pascalprecht.translate',\r\n    'ngMessages',\r\n    'ngCookies',\r\n    'ADM-dateTimePicker',\r\n    'chart.js',\r\n    'angular-ladda'\r\n]);\r\n\r\naccModule.init = () => {\r\n    angular.element(document).ready(function () {\r\n        angular.bootstrap(document, ['acc.module']);\r\n    });\r\n};\r\n\r\naccModule.run((currentService, $cookies, $rootScope) => {\r\n    currentService.setToday(localStorage.getItem('today'));\r\n    currentService.setFiscalPeriod(parseInt($cookies.get('current-period')));\r\n    currentService.setMode($cookies.get('current-mode'));\r\n    currentService.setBranch(JSON.parse(localStorage.getItem('currentBranch')));\r\n\r\n    $rootScope.canShowStatusSection = false;\r\n    $rootScope.isDevelopment = localStorage.getItem('env') == 'development';\r\n});\r\n\r\nexport default accModule;",
    "import accModule from '../acc.module';\r\n\r\nfunction bankApi(apiPromise) {\r\n    var urlPrefix = '/acc/api';\r\n\r\n    return {\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/banks/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/banks'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/banks/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/banks/{1}'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('bankApi', bankApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction chequeApi(apiPromise) {\r\n    var urlPrefix = '/acc/api';\r\n\r\n    return {\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/cheques/{1}'.format(urlPrefix, id));\r\n        },\r\n        write: (id, data)=> apiPromise.put('{0}/cheques/{1}/write'.format(urlPrefix, id), data)\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('chequeApi', chequeApi);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction chequeCategoryApi(apiPromise) {\r\n    var urlPrefix = '/acc/api';\r\n\r\n    return {\r\n        getOpens: (detailAccountId)=>\r\n            apiPromise.get('{0}/cheque-categories/detail-account/{1}/opens'\r\n                .format(urlPrefix, detailAccountId)),\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/cheque-categories/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/cheque-categories'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/cheque-categories/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/cheque-categories/{1}'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('chequeCategoryApi', chequeCategoryApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction detailAccountApi(apiPromise) {\r\n    var urlPrefix = '/acc/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: '{0}/detail-accounts'.format(urlPrefix),\r\n            getAllActive: '{0}/detail-accounts/active'.format(urlPrefix)\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/detail-accounts/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/detail-accounts'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/detail-accounts/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/detail-accounts/{1}'.format(urlPrefix, id));\r\n        },\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/detail-accounts/{1}/activate'.format(urlPrefix, id));\r\n        },\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/detail-accounts/{1}/deactivate'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('detailAccountApi', detailAccountApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction dimensionApi(apiPromise, $q, $timeout) {\r\n    var urlPrefix = '/acc/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: function (parentId) {\r\n                return '{0}/dimensions/category/{1}'.format(urlPrefix, parentId);\r\n            }\r\n        },\r\n        getAll: function () {\r\n            return apiPromise.get('{0}/dimensions'.format(urlPrefix));\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/dimensions/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (categoryId, data) {\r\n            return apiPromise.post('{0}/dimensions/category/{1}'.format(urlPrefix, categoryId), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/dimensions/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/dimensions/{1}'.format(urlPrefix, id));\r\n        },\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/dimensions/{1}/activate'.format(urlPrefix, id));\r\n        },\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/dimensions/{1}/deactivate'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('dimensionApi', dimensionApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction dimensionCategoryApi(apiPromise, $q, $timeout) {\r\n    var urlPrefix = '/acc/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: '{0}/dimension-categories'.format(urlPrefix)\r\n        },\r\n        getAll: function () {\r\n            return apiPromise.get('{0}/dimension-categories'.format(urlPrefix));\r\n        },\r\n        getAllLookup: ()=> {\r\n            let deferred = $q.defer();\r\n            let dimensionCategories = JSON.parse(localStorage.getItem('dimensionCategories'));\r\n\r\n            if (dimensionCategories)\r\n                $timeout(()=> deferred.resolve(dimensionCategories), 0);\r\n            else apiPromise.get('{0}/dimension-categories'.format(urlPrefix))\r\n                .then((result)=> {\r\n                    localStorage.setItem('dimensionCategories', JSON.stringify(result));\r\n                    deferred.resolve(result)\r\n                });\r\n\r\n            return deferred.promise;\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/dimension-categories/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/dimension-categories'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/dimension-categories/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/dimension-categories/{1}'.format(urlPrefix, id));\r\n        },\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/dimension-categories/{1}/activate'.format(urlPrefix, id));\r\n        },\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/dimension-categories/{1}/deactivate'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('dimensionCategoryApi', dimensionCategoryApi);\r\n",
    "export  default class FiscalPeriodApi{\r\n    constructor(apiPromise){\r\n        this.urlPrefix = '/acc/api';\r\n        this.apiPromise = apiPromise;\r\n\r\n        this.getAll= '{0}/periods'.format(this.urlPrefix)\r\n    }\r\n\r\n    create(fiscalPeriod){\r\n        return this.apiPromise.post(`${this.urlPrefix}/fiscal-periods`, fiscalPeriod)\r\n    }\r\n\r\n    current(){\r\n        return this.apiPromise.get(`${this.urlPrefix}/fiscal-periods/current`);\r\n    }\r\n}\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction generalLedgerAccountApi(apiPromise) {\r\n    var urlPrefix = '/acc/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: '{0}/general-ledger-accounts'.format(urlPrefix),\r\n            getAllActive: '{0}/general-ledger-accounts/active'\r\n                .format(urlPrefix)\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/general-ledger-accounts/{1}'\r\n                .format(urlPrefix, id));\r\n        },\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/general-ledger-accounts'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/general-ledger-accounts/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/general-ledger-accounts/{1}'.format(urlPrefix, id));\r\n        },\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/general-ledger-accounts/{1}/activate'.format(urlPrefix, id));\r\n        },\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/general-ledger-accounts/{1}/deactivate'.format(urlPrefix, id));\r\n        }\r\n    };\r\n}\r\n\r\naccModule.factory('generalLedgerAccountApi', generalLedgerAccountApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalApi(apiPromise) {\r\n    var urlPrefix = '/acc/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: '{0}/journals'.format(urlPrefix)\r\n        },\r\n        getGroupedByMouth: () => apiPromise.get('{0}/journals/summary/grouped-by-month'.format(urlPrefix)),\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/journals/{1}'.format(urlPrefix, id));\r\n        },\r\n        getByNumber:(number)=> apiPromise.get(`${urlPrefix}/journals/by-number/${number}`),\r\n        getTotalInfo: () => apiPromise.get(`${urlPrefix}/journals/total-info`),\r\n        getJournalReportJson: id => apiPromise.get(`/report/json/journal/${id}`),\r\n        create: function (data) {\r\n            return apiPromise.post('{0}/journals'.format(urlPrefix), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/journals/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/journals/{1}'.format(urlPrefix, id));\r\n        },\r\n        copy: (id) => apiPromise.post('{0}/journals/{1}/copy'.format(urlPrefix, id)),\r\n        bookkeeping: (id, data) => apiPromise.put('{0}/journals/{1}/bookkeeping'.format(urlPrefix, id), data),\r\n        attachImage: (id, data) => apiPromise.put('{0}/journals/{1}/attach-image'.format(urlPrefix, id), data),\r\n        incomesAndOutcomes: () => apiPromise.get(`${urlPrefix}/account-review/incomes-outcomes`)\r\n    };\r\n}\r\n\r\naccModule.factory('journalApi', journalApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalLineApi(apiPromise) {\r\n    var urlPrefix = '/acc/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: (journalId)=> '{0}/journal-lines/journal/{1}'.format(urlPrefix, journalId)\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/journal-lines/{1}'.format(urlPrefix, id));\r\n        },\r\n        create: function (journalId, data) {\r\n            return apiPromise.post('{0}/journal-lines/journal/{1}'.format(urlPrefix, journalId), data);\r\n        },\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/journal-lines/{1}'.format(urlPrefix, id), data);\r\n        },\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/journal-lines/{1}'.format(urlPrefix, id));\r\n        }\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('journalLineApi', journalLineApi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalTemplateApi(apiPromise) {\r\n    var urlPrefix = '/acc/api';\r\n\r\n    return {\r\n        create: (journalId, data)=>\r\n            apiPromise.post('{0}/journal-templates/journal/{1}'.format(urlPrefix, journalId), data),\r\n        journalCreate: (id)=>\r\n            apiPromise.post('{0}/journal-templates/{1}/journal/create'.format(urlPrefix, id)),\r\n        remove: (id)=>\r\n            apiPromise.delete('{0}/journal-templates/{1}'.format(urlPrefix, id))\r\n    };\r\n\r\n\r\n}\r\n\r\naccModule.factory('journalTemplateApi', journalTemplateApi);\r\n\r\n",
    "\r\nexport default class {\r\n    constructor(apiPromise, $q, devConstants) {\r\n        this.urlPrefix = '/acc/api/reports';\r\n        this.apiPromise = apiPromise;\r\n        this.$q = $q;\r\n        this.constants = devConstants;\r\n    }\r\n\r\n    save(data) {\r\n        return this.apiPromise.post(this.urlPrefix, data)\r\n    }\r\n\r\n    generalLedgerAccounts() {\r\n        return this.apiPromise.get(`${this.urlPrefix}/general-ledger-accounts`);\r\n    }\r\n\r\n    subsidiaryLedgerAccounts() {\r\n        let deferred = this.$q.defer();\r\n\r\n        this.apiPromise.get(`${this.urlPrefix}/subsidiary-ledger-accounts`)\r\n            .then(result => {\r\n                let AssignmentStatus = this.constants.enums.AssignmentStatus();\r\n\r\n                result.forEach(item => {\r\n                    item.detailAccountAssignmentStatusDisplay = (item.detailAcc) ? AssignmentStatus.getDisplay(item.detailAcc) : '';\r\n                    item.dimension1AssignmentStatusDisplay = (item.dim1) ? AssignmentStatus.getDisplay(item.dim1) : '';\r\n                    item.dimension2AssignmentStatusDisplay = (item.dim2) ? AssignmentStatus.getDisplay(item.dim2) : '';\r\n                    item.dimension3AssignmentStatusDisplay = (item.dim3) ? AssignmentStatus.getDisplay(item.dim3) : '';\r\n                });\r\n\r\n                deferred.resolve(result);\r\n            });\r\n        return deferred.promise;\r\n    }\r\n\r\n    detailAccounts(reportId) {\r\n        return this.apiPromise.get(`${this.urlPrefix}/detail-accounts`);\r\n    }\r\n\r\n    generalBalance() {\r\n        return this.apiPromise.get(`${this.urlPrefix}/general-balance`);\r\n    }\r\n\r\n    subsidiaryBalance() {\r\n        return this.apiPromise.get(`${this.urlPrefix}/subsidiary-balance`);\r\n    }\r\n\r\n    subsidiaryDetailBalance() {\r\n        return this.apiPromise.get(`${this.urlPrefix}/subsidiary-detail-balance`);\r\n    }\r\n\r\n    generalSubsidiaryDetailBalance() {\r\n        return this.apiPromise.get(`${this.urlPrefix}/general-subsidiary-detail-balance`);\r\n    }\r\n\r\n    journalOffice() {\r\n        return this.apiPromise.get(`${this.urlPrefix}/journal-office`);\r\n    }\r\n\r\n    generalOffice() {\r\n        return this.apiPromise.get(`${this.urlPrefix}/general-office`);\r\n    }\r\n\r\n    subsidiaryOffice() {\r\n        return this.apiPromise.get(`${this.urlPrefix}/subsidiary-office`);\r\n    }\r\n\r\n}\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction subsidiaryLedgerAccountApi(apiPromise) {\r\n    var urlPrefix = '/acc/api';\r\n\r\n    return {\r\n        url: {\r\n            getAll: function (parentId) {\r\n                return '{0}/subsidiary-ledger-accounts/general-ledger-account/{1}'.format(urlPrefix, parentId);\r\n            },\r\n            getAllActive: function (parentId) {\r\n                return '{0}/subsidiary-ledger-accounts/general-ledger-account/{1}/active'.format(urlPrefix, parentId)\r\n            }\r\n        },\r\n        getById: function (id) {\r\n            return apiPromise.get('{0}/subsidiary-ledger-accounts/{1}/'\r\n                .format(urlPrefix, id));\r\n        },\r\n        create: function (parentId, data) {\r\n            return apiPromise.post('{0}/subsidiary-ledger-accounts/general-ledger-account/{1}'\r\n                .format(urlPrefix, parentId), data);\r\n        }\r\n        ,\r\n        update: function (id, data) {\r\n            return apiPromise.put('{0}/subsidiary-ledger-accounts/{1}'\r\n                .format(urlPrefix, id), data);\r\n        }\r\n        ,\r\n        remove: function (id) {\r\n            return apiPromise.delete('{0}/subsidiary-ledger-accounts/{1}'\r\n                .format(urlPrefix, id))\r\n        }\r\n        ,\r\n        activate: function (id) {\r\n            return apiPromise.put('{0}/subsidiary-ledger-accounts/{1}/activate'\r\n                .format(urlPrefix, id));\r\n        }\r\n        ,\r\n        deactivate: function (id) {\r\n            return apiPromise.put('{0}/subsidiary-ledger-accounts/{1}/deactivate'\r\n                .format(urlPrefix, id));\r\n        }\r\n    }\r\n}\r\n\r\naccModule\r\n    .factory('subsidiaryLedgerAccountApi', subsidiaryLedgerAccountApi)\r\n\r\n\r\n",
    "\r\nexport default class {\r\n    constructor(apiPromise) {\r\n        this.urlPrefix = '/acc/api/tags';\r\n        this.apiPromise = apiPromise;\r\n    }\r\n\r\n    create(data){\r\n        return this.apiPromise.post(this.urlPrefix, data);\r\n    }\r\n}\r\n\r\n",
    "\r\nexport default function (ADMdtpProvider, ChartJsProvider) {\r\n    ADMdtpProvider.setOptions({\r\n        calType: 'jalali',\r\n        dtpType: 'date',\r\n        format: 'YYYY/MM/DD',\r\n        //default: 'today',\r\n        autoClose: true\r\n    });\r\n\r\n    ChartJsProvider.setOptions({ defaultFontFamily: \"'IRANSans', 'Segoe UI', 'Helvetica Neue', 'Helvetica', 'Arial, sans-serif'\",\r\n        colors : [ '#803690', '#00ADF9', '#DCDCDC', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360'] });\r\n}\r\n\r\nimport Chart from 'chart.js';\r\nChart.defaults.global.defaultFontFamily=\"'IRANSans'\";\r\nChart.defaults.global.scaleLabel = \"<%=kendo.toString(value, '#,##0;(#,##0)');%>\";\r\nChart.defaults.global.tooltipTemplate = \"<%if (label){%><%=label%>: <%}%><%=kendo.toString(label, '#,##0;(#,##0)')%>\";\r\n",
    "import accModule from '../acc.module';\r\nimport $ from 'jquery';\r\n\r\naccModule.config($httpProvider=> {\r\n    $httpProvider.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\r\n\r\n    $httpProvider.interceptors.push(()=> {\r\n        return {\r\n            'request': (config)=> {\r\n                return config;\r\n            },\r\n            'response': (response)=> {\r\n\r\n\r\n                return response;\r\n            },\r\n            'requestError': (rejection)=> {\r\n                return rejection;\r\n            },\r\n            'responseError': (rejection)=> {\r\n                if (rejection.status == 401 && rejection.data == 'user is not authenticated')\r\n                    return location.reload();\r\n\r\n                return rejection;\r\n            }\r\n        }\r\n    });\r\n});\r\n\r\n$(document).ajaxError((e, response)=> {\r\n    if (response.status == 401 && response.responseText == 'user is not authenticated')\r\n        return location.reload();\r\n});\r\n",
    "import accModule from '../acc.module';\r\nimport devConstants from '../localData/devConstants';\r\n\r\naccModule.config(function (gridFilterCellTypeProvider) {\r\n\r\n    let postingType = {\r\n        data: devConstants.enums.AccountPostingType().data,\r\n        template: `<li ng-repeat=\"item in items\">\r\n                <dev-tag-radio\r\n                        ng-class=\"{'checked': item.key == filter.value}\"\r\n                        ng-model=\"filter.value\"\r\n                        k-value=\"{{item.key}}\"></dev-tag-radio>\r\n                        {{item.display}}\r\n            </li>`\r\n    };\r\n\r\n    let balanceType = {\r\n        data: devConstants.enums.AccountBalanceType().data,\r\n        template: `<li ng-repeat=\"item in items\">\r\n        <dev-tag-radio \r\n            ng-class=\"{'checked': item.key == filter.value}\"\r\n            ng-model=\"filter.value\" \r\n            k-value=\"{{item.key}}\"></dev-tag-radio>\r\n        {{item.display}}\r\n        </li>`\r\n    };\r\n\r\n    let activeType = {\r\n        data: devConstants.enums.Active().data,\r\n        template: `<li ng-repeat=\"item in items\">\r\n        <dev-tag-radio\r\n            ng-class=\"{'checked': item.key == filter.value}\"\r\n            ng-model=\"filter.value\" \r\n            k-value=\"{{item.key}}\"></dev-tag-radio>\r\n        {{item.display}}\r\n        </li>`\r\n    };\r\n\r\n    let journalType = {\r\n        data: devConstants.enums.JournalType().data,\r\n        template: `<li ng-repeat=\"item in items\">\r\n        <dev-tag-radio\r\n            ng-class=\"{'checked': item.key == filter.value}\"\r\n            ng-model=\"filter.value\" \r\n            k-value=\"{{item.key}}\"></dev-tag-radio>\r\n        {{item.display}}\r\n        </li>`\r\n    };\r\n\r\n    let journalStatus = {\r\n        data: devConstants.enums.JournalStatus().data,\r\n        template: `<li ng-repeat=\"item in items\">\r\n        <dev-tag-radio\r\n            ng-class=\"{'checked': item.key == filter.value}\"\r\n            ng-model=\"filter.value\" \r\n            k-value=\"{{item.key}}\"></dev-tag-radio>\r\n        {{item.display}}\r\n        </li>`\r\n    };\r\n\r\n    let chequeCategoryStatus = {\r\n        data: devConstants.enums.ChequeCategoryStatus().data,\r\n        template: `<li ng-repeat=\"item in items\">\r\n        <dev-tag-radio\r\n            ng-class=\"{'checked': item.key == filter.value}\"\r\n            ng-model=\"filter.value\" \r\n            k-value=\"{{item.key}}\"></dev-tag-radio>\r\n        {{item.display}}\r\n        </li>`\r\n    };\r\n\r\n    let generalLedgerAccount = {\r\n        dataSource: {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: devConstants.urls.generalLedgerAccount.all()\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        },\r\n        template: `<li>\r\n               <dev-tag-combo-box\r\n               k-placeholder=\"{{'Select' | translate}}\"\r\n               k-data-text-field=\"display\"\r\n               k-data-value-field=\"id\"\r\n               k-data-source=\"dataSource\"\r\n               ng-model=\"filter.value\"></dev-tag-combo-box>\r\n            </li>`,\r\n        style:{width: '300px'}\r\n    };\r\n\r\n    let subsidiaryLedgerAccount = {\r\n        dataSource: {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: devConstants.urls.subsidiaryLedgerAccount.all()\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        },\r\n        template: `<li>\r\n               <dev-tag-combo-box\r\n               k-placeholder=\"{{'Select' | translate}}\"\r\n               k-data-text-field=\"display\"\r\n               k-data-value-field=\"id\"\r\n               k-data-source=\"dataSource\"\r\n               ng-model=\"filter.value\"></dev-tag-combo-box>\r\n            </li>`,\r\n        style:{width: '300px'}\r\n    };\r\n\r\n    let detailAccount = {\r\n        dataSource: {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: devConstants.urls.detailAccount.all()\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        },\r\n        template: `<li>\r\n               <dev-tag-combo-box\r\n               k-placeholder=\"{{'Select' | translate}}\"\r\n               k-data-text-field=\"display\"\r\n               k-data-value-field=\"id\"\r\n               k-data-source=\"dataSource\"\r\n               ng-model=\"filter.value\"></dev-tag-combo-box>\r\n            </li>`,\r\n        style:{width: '300px'}\r\n    };\r\n\r\n    let bank = {\r\n        dataSource: {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: devConstants.urls.bank.all()\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        },\r\n        template: `<li>\r\n               <dev-tag-combo-box\r\n               k-placeholder=\"{{'Select' | translate}}\"\r\n               k-data-text-field=\"title\"\r\n               k-data-value-field=\"id\"\r\n               k-data-source=\"dataSource\"\r\n               ng-model=\"filter.value\"></dev-tag-combo-box>\r\n            </li>`\r\n\r\n    };\r\n\r\n    gridFilterCellTypeProvider.set({\r\n        postingType: postingType,\r\n        balanceType: balanceType,\r\n        activeType: activeType,\r\n        bank:bank,\r\n        generalLedgerAccount: generalLedgerAccount,\r\n        subsidiaryLedgerAccount: subsidiaryLedgerAccount,\r\n        detailAccount: detailAccount,\r\n        chequeCategoryStatus: chequeCategoryStatus,\r\n        journalType: journalType,\r\n        journalStatus: journalStatus\r\n    });\r\n});",
    "import accModule from '../acc.module';\r\n\r\naccModule.config(menuItemsProvider => {\r\n    \"use strict\";\r\n\r\n    menuItemsProvider\r\n        .add({\r\n            title: 'سرفصل حسابها و سطوح',\r\n            url: '',\r\n            icon: 'fa fa-tasks',\r\n            children: [\r\n                {\r\n                    title: 'حسابهای کل و معین',\r\n                    url: 'general-ledger-accounts'\r\n                },\r\n                {\r\n                    title: 'حساب تفصیل',\r\n                    url: 'detail-accounts'\r\n                },\r\n                {\r\n                    title: 'سطوح',\r\n                    url: 'dimensions'\r\n                }\r\n            ]\r\n        })\r\n        .add({\r\n            title: 'سند حسابداری',\r\n            url: '',\r\n            icon: 'fa fa-book',\r\n            children: [\r\n                {\r\n                    title: 'لیست اسناد حسابداری',\r\n                    url: 'journals',\r\n                    icon: ''\r\n                },\r\n                {\r\n                    title: 'مدیریت اسناد',\r\n                    url: 'journal-management',\r\n                    icon: ''\r\n                },\r\n                {\r\n                    title: 'کپی سند',\r\n                    url: 'journal/copy',\r\n                    icon: 'glyphicon glyphicon-copy'\r\n                },\r\n                {\r\n                    title: 'سند استاندارد',\r\n                    url: 'journal-templates'\r\n                }\r\n            ]\r\n        })\r\n        .add({\r\n            title: 'خزانه داری',\r\n            url: '',\r\n            icon: 'fa fa-money',\r\n            children: [\r\n                {\r\n                    title: 'دسته چک ها',\r\n                    url: 'cheque-categories',\r\n                    icon: ''\r\n                },\r\n                {\r\n                    title: 'بانک ها',\r\n                    url: 'banks',\r\n                    icon: ''\r\n                }\r\n            ]\r\n        })\r\n        .add({\r\n            title: 'گزارشات',\r\n            url: '',\r\n            icon: 'fa fa-pie-chart',\r\n            children: [\r\n                {\r\n                    title: 'مرور حساب',\r\n                    url: 'account-review',\r\n                    icon: ''\r\n                },\r\n                {\r\n                    title: 'گزارشات',\r\n                    url: 'reports',\r\n                    icon: ''\r\n                }\r\n            ]\r\n        });\r\n});",
    "import accModule from '../acc.module';\r\n\r\naccModule.config(($routeProvider, $locationProvider) => {\r\n\r\n    $locationProvider.html5Mode(true);\r\n    $locationProvider.hashPrefix('!');\r\n\r\n    $routeProvider\r\n        .when('/', {\r\n            controller: 'homeController',\r\n            templateUrl: 'partials/views/home.html'\r\n        })\r\n        .when('/general-ledger-accounts', {\r\n            controller: 'generalLedgerAccountsController',\r\n            templateUrl: 'partials/views/generalLedgerAccounts.html'\r\n        })\r\n        .when('/subsidiary-ledger-accounts/:generalLedgerAccountId', {\r\n            controller: 'subsidiaryLedgerAccountsController',\r\n            templateUrl: 'partials/views/subsidiaryLedgerAccounts.html'\r\n        })\r\n        .when('/subsidiary-ledger-account/:generalLedgerAccountId/create', {\r\n            controller: 'subsidiaryLedgerAccountCreateController',\r\n            templateUrl: 'partials/views/subsidiaryLedgerAccountCreate.html'\r\n        })\r\n        .when('/subsidiary-ledger-account/:id/edit', {\r\n            controller: 'subsidiaryLedgerAccountUpdateController',\r\n            templateUrl: 'partials/views/subsidiaryLedgerAccountUpdate.html'\r\n        })\r\n        .when('/detail-accounts', {\r\n            controller: 'detailAccountsController',\r\n            templateUrl: 'partials/views/detailAccounts.html'\r\n        })\r\n        .when('/detail-account/create', {\r\n            controller: 'detailAccountCreateController',\r\n            templateUrl: 'partials/views/detailAccountCreate.html'\r\n        })\r\n        .when('/detail-account/:id/edit', {\r\n            controller: 'detailAccountUpdateController',\r\n            templateUrl: 'partials/views/detailAccountUpdate.html'\r\n        })\r\n        .when('/dimensions', {\r\n            controller: 'dimensionsController',\r\n            templateUrl: 'partials/views/dimensions.html'\r\n        })\r\n        .when('/journals', {\r\n            controller: 'journalsController',\r\n            templateUrl: 'partials/views/journals.html'\r\n        })\r\n        .when('/journal/copy', {\r\n            controller: 'journalCopyController',\r\n            templateUrl: 'partials/views/journalCopy.html'\r\n        })\r\n        .when('/journal-templates', {\r\n            controller: 'journalTemplatesController',\r\n            templateUrl: 'partials/views/journalTemplates.html'\r\n        })\r\n        .when('/journal/:id/edit', {\r\n            controller: 'journalUpdateController',\r\n            templateUrl: 'partials/views/journalUpdate.html'\r\n        })\r\n        .when('/journal/:id/print', {\r\n            controller: 'journalPrintController',\r\n            templateUrl: 'partials/views/journalPrint.html'\r\n        })\r\n        .when('/journal-management', {\r\n            controller: 'journalManagementController',\r\n            templateUrl: 'partials/views/journalManagement.html'\r\n        })\r\n        .when('/cheque-categories', {\r\n            controller: 'chequeCategoriesController',\r\n            templateUrl: 'partials/views/chequeCategories.html'\r\n        })\r\n        .when('/cheque/:id/print', {\r\n            controller: 'chequePrintController',\r\n            templateUrl: 'partials/views/chequePrint.html'\r\n        })\r\n        .when('/banks', {\r\n            controller: 'banksController',\r\n            templateUrl: 'partials/views/banks.html'\r\n        })\r\n        .when('/account-review', {\r\n            controller: 'accountReviewController',\r\n            templateUrl: 'partials/views/accountReview.html'\r\n        })\r\n        .when('/account-review/turnover/:name', {\r\n            controller: 'accountReviewTurnoverController',\r\n            templateUrl: 'partials/views/accountReviewTurnover.html'\r\n        })\r\n        .when('/fiscal-period/new', {\r\n            controller: 'createFiscalPeriodController',\r\n            templateUrl: 'partials/views/createFiscalPeriod.html'\r\n        })\r\n        .when('/reports', {\r\n            controller: 'reportController',\r\n            templateUrl: 'partials/views/report.html'\r\n        })\r\n        .when('/reports/designer/:fileName?', {\r\n            controller: 'reportDesignerController',\r\n            templateUrl: 'partials/views/reportDesigner.html'\r\n        })\r\n        .when('/not-found', {\r\n            templateUrl: 'partials/views/notFound.html'\r\n        })\r\n        .otherwise('/not-found');\r\n});\r\n\r\naccModule.run(\r\n    $route => $route.reload());",
    "import accModule from '../acc.module';\r\nimport 'angular-translate-loader-url';\r\nimport config from '../localData/config';\r\n\r\naccModule.config($translateProvider => {\r\n    if (config.isClientTest()) {\r\n        $translateProvider.useUrlLoader('client/translate.json');\r\n    } else {\r\n        let translate = JSON.parse(localStorage.getItem('translate'));\r\n\r\n        $translateProvider.translations('fa_IR', translate);\r\n        $translateProvider.useStorage('translateStorageService');\r\n    }\r\n\r\n    $translateProvider.preferredLanguage('fa_IR');\r\n    $translateProvider.useSanitizeValueStrategy('escapeParameters');\r\n});",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction accountReviewController($scope, navigate, dimensionCategoryApi, devConstants, formService) {\r\n\r\n    $scope.parameters = localStorage.getItem('account-review-state')\r\n        ? JSON.parse(localStorage.getItem('account-review-state'))\r\n        : {\r\n        minDate: '',\r\n        maxDate: '',\r\n        minNumber: null,\r\n        maxNumber: null,\r\n        notShowZeroRemainder: false,\r\n        isNotPeriodIncluded: false,\r\n        detailAccount: null,\r\n        dimension1: null,\r\n        dimension2: null,\r\n        dimension3: null\r\n    };\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.dimension1DataSource = {};\r\n    $scope.dimension2DataSource = {};\r\n    $scope.dimension3DataSource = {};\r\n    $scope.dimension4DataSource = {};\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result)=> {\r\n            let cats = result.data;\r\n            $scope.dimensionCategories = new Collection(cats).asEnumerable().take(3).toArray();\r\n\r\n            $scope.dimension1DataSource = dimensionDataSourceFactory(cats[0].id);\r\n            $scope.dimension2DataSource = dimensionDataSourceFactory(cats[1].id);\r\n            $scope.dimension3DataSource = dimensionDataSourceFactory(cats[2].id);\r\n        });\r\n\r\n    function dimensionDataSourceFactory(categoryId) {\r\n        return {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: devConstants.urls.dimension.allByCategory(categoryId)\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        };\r\n    }\r\n\r\n    function saveState() {\r\n        let state = JSON.stringify($scope.parameters);\r\n\r\n        localStorage.setItem('account-review-state', state);\r\n    }\r\n\r\n    function getParameters() {\r\n        let parameters = $scope.parameters,\r\n            params = {};\r\n\r\n        if (parameters.minNumber) {\r\n            params.minNumber = parameters.minNumber;\r\n            params.maxNumber = parameters.maxNumber;\r\n        }\r\n\r\n        if (parameters.minDate) {\r\n            params.minDate = parameters.minDate;\r\n            params.maxDate = parameters.maxDate;\r\n        }\r\n\r\n        params.notShowZeroRemainder = parameters.notShowZeroRemainder;\r\n        params.isNotPeriodIncluded = parameters.isNotPeriodIncluded;\r\n\r\n        return params;\r\n    }\r\n\r\n    $scope.executeTurnover = (form,reportName)=> {\r\n        /*if(form.$invalid)\r\n            return formService.setDirty(form);\r\n*/\r\n        saveState();\r\n        let params = getParameters();\r\n\r\n        navigate('accountReviewTurnover', {name: reportName}, params);\r\n    };\r\n\r\n    $scope.detailAccountExecuteTurnovers = (reportName)=> {\r\n        saveState();\r\n\r\n        let params = getParameters();\r\n        params.detailAccountId = $scope.parameters.detailAccount.id;\r\n        params.detailAccountDisplay = $scope.parameters.detailAccount.display;\r\n\r\n        navigate('accountReviewTurnover', {name: reportName}, params);\r\n    };\r\n\r\n    $scope.dimensionExecuteTurnovers = (dimensionName, reportName, index)=> {\r\n        saveState();\r\n\r\n        let params = getParameters();\r\n        params[`${dimensionName}Id`] = $scope.parameters[dimensionName].id;\r\n        params[`${dimensionName}Display`] = $scope.parameters[dimensionName].display;\r\n        params[`${dimensionName}Caption`] = $scope.dimensionCategories[index].title;\r\n\r\n        navigate('accountReviewTurnover', {name: reportName}, params);\r\n    };\r\n}\r\n\r\naccModule.controller('accountReviewController', accountReviewController);\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction accountReviewTurnoverController($scope, navigate, $routeParams, $location, translate,\r\n                                         dimensionCategoryApi,\r\n                                         accountReviewTurnoverGridOptionService,\r\n                                         showJournalDetailModalService) {\r\n    let titles = {\r\n        generalLedgerAccount: translate('Total turnover general ledger account'),\r\n        subsidiaryLedgerAccount: translate('Total turnover subsidiary ledger account'),\r\n        detailAccount: translate('Total turnover detail account'),\r\n        dimension1: `${translate('Total turnover dimension')} ${translate('Dimension1')}`,\r\n        dimension2: `${translate('Total turnover dimension')} ${translate('Dimension2')}`,\r\n        dimension3: `${translate('Total turnover dimension')} ${translate('Dimension2')}`,\r\n        tiny: translate('Tiny turnover journals')\r\n    };\r\n\r\n    let reportName = $scope.reportName = $routeParams.name;\r\n    let parameters = $location.search();\r\n\r\n    $scope.commands = [\r\n        {\r\n            order: 0,\r\n            key: 'tiny',\r\n            display: translate('Tiny turnover journals')\r\n        },\r\n        {\r\n            order: 1,\r\n            key: 'generalLedgerAccount',\r\n            display: translate('General ledger account')\r\n        },\r\n        {\r\n            order: 2,\r\n            key: 'subsidiaryLedgerAccount',\r\n            display: translate('Subsidiary ledger account')\r\n        },\r\n        {\r\n            order: 3,\r\n            key: 'detailAccount',\r\n            display: translate('Detail account')\r\n        },\r\n        {\r\n            order: 4,\r\n            key: 'dimension1',\r\n            display: translate('Dimension1')\r\n        },\r\n        {\r\n            order: 5,\r\n            key: 'dimension2',\r\n            display: translate('Dimension2')\r\n        },\r\n        {\r\n            order: 6,\r\n            key: 'dimension3',\r\n            display: translate('Dimension3')\r\n        }\r\n    ];\r\n\r\n    $scope.title = titles[$routeParams.name];\r\n\r\n    $scope.titleParameters = getTitleParameters();\r\n\r\n    $scope.gridOption = accountReviewTurnoverGridOptionService[$routeParams.name];\r\n    $scope.gridOption.extra = {filter: getParameters()};\r\n    $scope.current = false;\r\n\r\n    $scope.execute = (key) => {\r\n        let params = angular.extend({}, parameters);\r\n        delete params[`${key}Id`];\r\n        delete params[`${key}Display`];\r\n\r\n        params[`${reportName}Id`] = $scope.current[`${reportName}Id`];\r\n        params[`${reportName}Display`] = `${$scope.current[`${reportName}Code`]} ${$scope.current[`${reportName}Title`]}`;\r\n\r\n        navigate('accountReviewTurnover', {name: key}, params);\r\n    };\r\n\r\n    $scope.onCurrentChanged = (current) => {\r\n        if (!current) $scope.current = false;\r\n\r\n        $scope.current = current;\r\n    };\r\n\r\n    $scope.showJournal = () => {\r\n        showJournalDetailModalService\r\n            .show({\r\n                id: $scope.current.id\r\n            });\r\n    };\r\n\r\n    function getTitleParameters() {\r\n        let titleParameters = [];\r\n\r\n        if (parameters.generalLedgerAccountId)\r\n            titleParameters.push({\r\n                name: translate('General ledger account'),\r\n                value: parameters.generalLedgerAccountDisplay\r\n            });\r\n\r\n        if (parameters.subsidiaryLedgerAccountId)\r\n            titleParameters.push({\r\n                name: translate('Subsidiary ledger account'),\r\n                value: parameters.subsidiaryLedgerAccountDisplay\r\n            });\r\n\r\n        if (parameters.detailAccountId)\r\n            titleParameters.push({\r\n                name: translate('Detail account'),\r\n                value: parameters.detailAccountDisplay\r\n            });\r\n\r\n        if (parameters.dimension1Id)\r\n            titleParameters.push({\r\n                name: translate('Dimension1'),\r\n                value: parameters.dimension1Display\r\n            });\r\n\r\n        if (parameters.dimension2Id)\r\n            titleParameters.push({\r\n                name: translate('Dimension2'),\r\n                value: parameters.dimension2Display\r\n            });\r\n\r\n        if (parameters.dimension3Id)\r\n            titleParameters.push({\r\n                name: translate('Dimension3'),\r\n                value: parameters.dimension3Display\r\n            });\r\n\r\n        if (parameters.minNumber)\r\n            titleParameters.push({\r\n                name: translate('Number'),\r\n                value: `[${parameters.minNumber},${parameters.maxNumber}]`\r\n            });\r\n\r\n        if (parameters.minDate)\r\n            titleParameters.push({\r\n                name: translate('Date'),\r\n                value: `[${parameters.minDate},${parameters.maxDate}]`\r\n            });\r\n\r\n        if (eval(parameters.notShowZeroRemainder))\r\n            titleParameters.push({\r\n                name: translate('Not show zero remiander')\r\n            });\r\n\r\n        if (eval(parameters.isNotPeriodIncluded))\r\n            titleParameters.push({\r\n                name: translate('Is not period included')\r\n            });\r\n\r\n        return titleParameters;\r\n    }\r\n\r\n    function getParameters() {\r\n        let params = {};\r\n\r\n        if (parameters.generalLedgerAccountId)\r\n            params.generalLedgerAccountId = parameters.generalLedgerAccountId;\r\n\r\n        if (parameters.subsidiaryLedgerAccountId)\r\n            params.subsidiaryLedgerAccountId = parameters.subsidiaryLedgerAccountId;\r\n\r\n        if (parameters.detailAccountId)\r\n            params.detailAccountId = parameters.detailAccountId;\r\n\r\n        if (parameters.dimension1Id)\r\n            params.dimension1Id = parameters.dimension1Id;\r\n\r\n        if (parameters.dimension2Id)\r\n            params.dimension2Id = parameters.dimension2Id;\r\n\r\n        if (parameters.dimension3Id)\r\n            params.dimension3Id = parameters.dimension3Id;\r\n\r\n        if (parameters.minNumber) {\r\n            params.minNumber = parameters.minNumber;\r\n            params.maxNumber = parameters.maxNumber;\r\n        }\r\n\r\n        if (parameters.minDate) {\r\n            params.minDate = parameters.minDate;\r\n            params.maxDate = parameters.maxDate;\r\n        }\r\n\r\n        params.notShowZeroRemainder = parameters.notShowZeroRemainder;\r\n        params.isNotPeriodInclude = parameters.isNotPeriodInclude;\r\n\r\n        return params;\r\n    }\r\n}\r\n\r\n\r\nfunction accountReviewTurnoverGridOptionService(translate, devConstants) {\r\n    let options = {};\r\n\r\n    let amountColumns = [\r\n        {\r\n            name: 'sumBeforeRemainder',\r\n            title: translate('Before remainder'),\r\n            type: 'number',\r\n            width: '15%',\r\n            template: '{{item.sumBeforeRemainder | number}}',\r\n            aggregates: ['sum'],\r\n            footerTemplate: '{{aggregates.sumBeforeRemainder.sum | number}}'\r\n        },\r\n        {\r\n            name: 'sumDebtor',\r\n            title: translate('Debtor'),\r\n            type: 'number',\r\n            width: '15%',\r\n            template: '{{item.sumDebtor | number}}',\r\n            aggregates: ['sum'],\r\n            footerTemplate: '{{aggregates.sumDebtor.sum | number}}'\r\n        },\r\n        {\r\n            name: 'sumCreditor',\r\n            title: translate('Creditor'),\r\n            type: 'number',\r\n            width: '15%',\r\n            template: '{{item.sumCreditor | number}}',\r\n            aggregates: ['sum'],\r\n            footerTemplate: '{{aggregates.sumCreditor.sum | number}}'\r\n        },\r\n        {\r\n            name: 'sumRemainder',\r\n            title: translate('Remainder'),\r\n            type: 'number',\r\n            width: '15%',\r\n            template: '{{item.sumRemainder | number}}',\r\n            aggregates: ['sum'],\r\n            footerTemplate: '{{aggregates.sumRemainder.sum | number}}'\r\n        }\r\n    ];\r\n\r\n    options.generalLedgerAccount = {\r\n        columns: [\r\n            {\r\n                name: 'generalLedgerAccountCode',\r\n                title: translate('General ledger account'),\r\n                type: 'string',\r\n                width: '10%'\r\n            },\r\n            {\r\n                name: 'generalLedgerAccountTitle',\r\n                title: translate('Title'),\r\n                type: 'string',\r\n                width: '30%'\r\n            },\r\n            ...amountColumns\r\n        ],\r\n        commands: [],\r\n        readUrl: devConstants.urls.accountReview.getAllGeneralLedgerAccount(),\r\n        selectable: true\r\n    };\r\n\r\n    options.subsidiaryLedgerAccount = {\r\n        columns: [\r\n            {\r\n                name: 'subsidiaryLedgerAccountCode',\r\n                title: translate('Subsidiary ledger account'),\r\n                type: 'string',\r\n                width: '7%'\r\n            },\r\n            {\r\n                name: 'generalLedgerAccountCode',\r\n                title: translate('General ledger account'),\r\n                type: 'string',\r\n                width: '5%'\r\n            },\r\n            {name: 'subsidiaryLedgerAccountTitle', title: translate('Title'), type: 'string', width: '28%'},\r\n            ...amountColumns\r\n        ],\r\n        commands: [],\r\n        readUrl: devConstants.urls.accountReview.getAllSubsidiaryLedgerAccount(),\r\n        selectable: true\r\n    };\r\n\r\n    options.detailAccount = {\r\n        columns: [\r\n            {\r\n                name: 'detailAccountCode',\r\n                title: translate('Detail account'),\r\n                type: 'string',\r\n                width: '10%'\r\n            },\r\n            {\r\n                name: 'detailAccountTitle',\r\n                title: translate('Title'),\r\n                type: 'string',\r\n                width: '30%'\r\n            },\r\n            ...amountColumns\r\n        ],\r\n        commands: [],\r\n        readUrl: devConstants.urls.accountReview.getAllDetailAccount(),\r\n        selectable: true\r\n    };\r\n\r\n    options.dimension1 = {\r\n        columns: [\r\n            {\r\n                name: 'dimension1Code',\r\n                title: translate('Dimension1'),\r\n                type: 'string',\r\n                width: '10%'\r\n            },\r\n            {\r\n                name: 'dimension1Title',\r\n                title: translate('Title'),\r\n                type: 'string',\r\n                width: '30%'\r\n            },\r\n            ...amountColumns\r\n        ],\r\n        commands: [],\r\n        readUrl: devConstants.urls.accountReview.getAllDimension1(),\r\n        selectable: true\r\n    };\r\n\r\n    options.dimension2 = {\r\n        columns: [\r\n            {\r\n                name: 'dimension2Code',\r\n                title: translate('Dimension2'),\r\n                type: 'string',\r\n                width: '10%'\r\n            },\r\n            {\r\n                name: 'dimension2Title',\r\n                title: translate('Title'),\r\n                type: 'string',\r\n                width: '30%'\r\n            },\r\n            ...amountColumns\r\n        ],\r\n        commands: [],\r\n        readUrl: devConstants.urls.accountReview.getAllDimension2(),\r\n        selectable: true\r\n    };\r\n\r\n    options.dimension3 = {\r\n        columns: [\r\n            {\r\n                name: 'dimension3Code',\r\n                title: translate('Dimension3'),\r\n                type: 'string',\r\n                width: '10%'\r\n            },\r\n            {\r\n                name: 'dimension3Title',\r\n                title: translate('Title'),\r\n                type: 'string',\r\n                width: '30%'\r\n            },\r\n            ...amountColumns\r\n        ],\r\n        commands: [],\r\n        readUrl: devConstants.urls.accountReview.getAllDimension3(),\r\n        selectable: true\r\n    };\r\n\r\n    options.tiny = {\r\n        columns: [\r\n            {\r\n                name: 'number',\r\n                title: translate('Number'),\r\n                type: 'number',\r\n                width: '50px'\r\n            },\r\n            {\r\n                name: 'date',\r\n                title: translate('Date'),\r\n                type: 'string',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'dimension3Code',\r\n                //headerTemplate: kendo.template('${kendo.dimensionCategories[2].title}'),\r\n                type: 'string',\r\n                width: '70px'\r\n            },\r\n            {\r\n                name: 'dimension2Code',\r\n                //headerTemplate: kendo.template('${kendo.dimensionCategories[1].title}'),\r\n                type: 'string',\r\n                width: '70px'\r\n            },\r\n            {\r\n                name: 'dimension1Code',\r\n                //headerTemplate: kendo.template('${kendo.dimensionCategories[0].title}'),\r\n                type: 'string',\r\n                width: '70px'\r\n            },\r\n            {\r\n                name: 'detailAccountCode',\r\n                title: translate('Detail account'),\r\n                type: 'string',\r\n                width: '70px'\r\n            },\r\n            {\r\n                name: 'subsidiaryLedgerAccountCode',\r\n                title: translate('Subsidiary ledger account'),\r\n                type: 'string',\r\n                width: '50px'\r\n            },\r\n            {\r\n                name: 'generalLedgerAccountCode',\r\n                title: translate('General ledger account'),\r\n                type: 'string',\r\n                width: '50px'\r\n            },\r\n            {\r\n                name: 'sumDebtor',\r\n                title: translate('Debtor'),\r\n                type: 'number',\r\n                width: '15%',\r\n                format: '{0:#,##}',\r\n                aggregates: ['sum'],\r\n                footerTemplate: '{{aggregates.sumDebtor.sum | number}}'\r\n            },\r\n            {\r\n                name: 'sumCreditor',\r\n                title: translate('Creditor'),\r\n                type: 'number',\r\n                width: '15%',\r\n                format: '{0:#,##}',\r\n                aggregates: ['sum'],\r\n                footerTemplate: '{{aggregates.sumCreditor.sum | number}}'\r\n            },\r\n            {\r\n                name: 'article', title: translate('Article'), type: 'string', width: '10%',\r\n                template: '<span title=\"${data.article}\">${data.article}</span>'\r\n            },\r\n        ],\r\n        commands: [],\r\n        readUrl: devConstants.urls.accountReview.getAllTiny(),\r\n        selectable: true\r\n    };\r\n\r\n    return options;\r\n}\r\n\r\naccModule\r\n    .controller('accountReviewTurnoverController', accountReviewTurnoverController)\r\n    .factory('accountReviewTurnoverGridOptionService', accountReviewTurnoverGridOptionService);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction banksController($scope, logger, confirm, bankApi, translate, devConstants) {\r\n\r\n    let gridOption = $scope.gridOption = {\r\n        columns: [\r\n            {name: 'title', title: translate('Title'), type: 'string',\r\n                template: `<span ng-if=\"!item.isEditing\">{{item.title}}</span>\r\n                    <form name=\"form\">\r\n                    <input ng-if=\"item.isEditing\" class=\"form-control\" name=\"title\" ng-model=\"item.title\" required/>\r\n                    <div ng-messages=\"form.title.$error\" ng-if=\"form.title.$dirty\">\r\n                        <label ng-message=\"required\" class=\"error\">{{'This field is required'|translate}}</label>\r\n                    </div>\r\n                    </form>`}\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                icon: 'fa fa-edit',\r\n                canShow: current => !current.isEditing,\r\n                action: current => {\r\n                    current.originalTitle = current.title;\r\n                    current.isEditing = true;\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                icon: 'fa fa-trash',\r\n                canShow: current => !current.isEditing,\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove Bank'),\r\n                        translate('Are you sure ?'))\r\n                        .then(function () {\r\n                            bankApi.remove(current.id)\r\n                                .then(()=> {\r\n                                    $scope.gridOption.refresh();\r\n                                    logger.success();\r\n                                });\r\n                        });\r\n                }\r\n            },\r\n            {\r\n                title: translate('Save'),\r\n                icon: 'fa fa-floppy-o',\r\n                canShow: current => current.isEditing,\r\n                action: current => {\r\n                    if(current.isNew)\r\n                        return bankApi.create(current)\r\n                            .then(result=> {\r\n                               current.id = result.id;\r\n                               current.isNew= false;\r\n                               current.isEditing = false;\r\n                            });\r\n                    bankApi.update(current.id, current)\r\n                        .then(()=> current.isEditing = false);\r\n                }\r\n            },\r\n            {\r\n                title: translate('Cancel'),\r\n                icon: 'fa fa-times',\r\n                canShow: current  => current.isEditing,\r\n                action: current => {\r\n                    if(current.isNew)\r\n                        return gridOption.removeItem(current);\r\n\r\n                    current.isEditing = false;\r\n                    current.title = current.originalTitle;\r\n                }\r\n            }\r\n        ],\r\n        readUrl: devConstants.urls.bank.all()\r\n    };\r\n\r\n    $scope.create = () => {\r\n        gridOption.addItem({title: '', isEditing: true, isNew: true});\r\n    }\r\n\r\n\r\n}\r\n\r\naccModule.controller('banksController', banksController);",
    "import accModule from '../acc.module';\r\n\r\nfunction chequeCategoriesController($scope, logger, chequeCategoryApi, confirm, devConstants, translate, navigate,\r\n                                    chequeCategoryCreateModalService,\r\n                                    chequeCategoryUpdateModalService) {\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'bankId', title: translate('Bank'), width: '20%', type: 'bank', template: '{{item.bank}}'},\r\n            {name: 'totalPages', title: translate('Total pages'), type: 'number', width: '120px'},\r\n            {\r\n                name: 'detailAccountId',\r\n                title: translate('Detail account'),\r\n                type: 'detailAccount',\r\n                template: '{{item.detailAccount}}'\r\n            },\r\n            {\r\n                name: 'status',\r\n                title: translate('Status'),\r\n                type: 'chequeCategoryStatus',\r\n                template: '{{item.statusDisplay}}',\r\n                width: '10%'\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                icon: 'fa fa-edit',\r\n                action: function (current) {\r\n                    chequeCategoryUpdateModalService.show({id: current.id})\r\n                        .then(() => {\r\n                            logger.success();\r\n                            $scope.gridOption.refresh();\r\n                        });\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                icon: 'fa fa-trash',\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove Cheque category'),\r\n                        translate('Are you sure ?'))\r\n                        .then(() => {\r\n                            chequeCategoryApi.remove(current.id)\r\n                                .then(function () {\r\n                                    logger.success();\r\n                                    $scope.gridOption.refresh();\r\n                                })\r\n                                .catch(errors => logger.error(errors.join('<br/>')));\r\n                        })\r\n\r\n                }\r\n            }\r\n        ],\r\n        readUrl: devConstants.urls.chequeCategory.all(),\r\n        selectable: true,\r\n        gridSize: '200px'\r\n    };\r\n\r\n    $scope.chequeGridOption = {\r\n        columns: [\r\n            {name: 'number', title: translate('Number'), width: '10%', type: 'number'},\r\n            {name: 'date', title: translate('Date'), type: 'date', width: '10%'},\r\n            {name: 'description', title: translate('Description'), type: 'string', width: '30%'},\r\n            {\r\n                name: 'amount',\r\n                title: translate('Amount'),\r\n                type: 'number',\r\n                width: '10%',\r\n                format: '{0:#,##}',\r\n                template: '{{item.amount|number}}'\r\n            }\r\n        ],\r\n        commands: [{\r\n            title: translate('Print'),\r\n            icon: 'fa fa-print',\r\n            action: current => navigate('chequePrint', {id: current.id})\r\n        }],\r\n        gridSize: '200px',\r\n        readUrl: ''\r\n    };\r\n\r\n    $scope.onSelectCategory = current => {\r\n        $scope.chequeGridOption.readUrl = devConstants.urls.cheque.all(current.id);\r\n    };\r\n\r\n    $scope.create = () => {\r\n        chequeCategoryCreateModalService.show()\r\n            .then(() => {\r\n                logger.success();\r\n                $scope.gridOption.refresh();\r\n            });\r\n    }\r\n}\r\n\r\naccModule.controller('chequeCategoriesController', chequeCategoriesController);\r\n",
    "\"use strict\"\r\n\r\nexport default function ($scope, chequeApi, $routeParams) {\r\n    $scope.cheque = {}\r\n    $scope.canShow = false;\r\n\r\n    chequeApi.getById($routeParams.id).then(result => {\r\n        $scope.cheque = result;\r\n        $scope.canShow = true;\r\n    });\r\n}",
    "\"use strict\";\r\n\r\nexport default class createFiscalPeriodController {\r\n    constructor($scope, formService, fiscalPeriodApi, navigate) {\r\n        this.$scope = $scope;\r\n        this.formService = formService;\r\n        this.fiscalPeriodApi = fiscalPeriodApi;\r\n        this.navigate = navigate;\r\n\r\n        $scope.fiscalPeriod = {\r\n            minDate: '',\r\n            maxDate: ''\r\n        };\r\n\r\n        $scope.isSaving = false;\r\n        $scope.save = this.save.bind(this);\r\n\r\n        $scope.errors = [];\r\n\r\n    }\r\n\r\n    save(form) {\r\n        if (form.$invalid)\r\n            return this.formService.setDirty(form);\r\n        this.$scope.isSaving = true;\r\n\r\n        this.fiscalPeriodApi.create(this.$scope.fiscalPeriod)\r\n            .then(result => {\r\n                this.$scope.$emit('fiscal-period-changed', result);\r\n                this.navigate('home');\r\n            })\r\n            .catch(err => this.$scope.errors = err)\r\n            .finally(()=> this.$scope.isSaving = false);\r\n    }\r\n}",
    "import accModule from '../acc.module';\r\n\r\nfunction detailAccountsController($scope, logger, translate, confirm, navigate,\r\n                                  detailAccountApi,\r\n                                  detailAccountCreateModalService,\r\n                                  detailAccountUpdateModalService) {\r\n    \"use strict\";\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'code', title: translate('Code'), width: '120px', type: 'string'},\r\n            {name: 'title', title: translate('Title'), type: 'string'},\r\n            {\r\n                name: 'isActive',\r\n                title: translate('Is active ?'),\r\n                type: 'activeType',\r\n                width: '150px',\r\n                template: `<i class=\"fa\"\r\n                          ng-class=\"{'fa-check text-navy': item.isActive,\r\n                                     'fa-times text-danger': !item.isActive}\">\r\n                       </i>`\r\n            },\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                name: 'edit detail account',\r\n                icon: 'fa fa-edit',\r\n                action: function (current) {\r\n                    detailAccountUpdateModalService.show({id: current.id})\r\n                        .then(() => $scope.gridOption.refresh());\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                icon: 'fa fa-trash',\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove Detail account'),\r\n                        translate('Are you sure ?'))\r\n                        .then(function () {\r\n                            detailAccountApi.remove(current.id)\r\n                                .then(function () {\r\n                                    logger.success();\r\n                                    $scope.gridOption.refresh();\r\n                                })\r\n                                .catch((errors) => $scope.errors = errors)\r\n                                .finally(() => $scope.isSaving = false);\r\n                        })\r\n\r\n                }\r\n            }\r\n        ],\r\n        readUrl: detailAccountApi.url.getAll\r\n    };\r\n\r\n    $scope.create = () => detailAccountCreateModalService.show()\r\n        .then(() => $scope.gridOption.refresh());\r\n}\r\n\r\naccModule.controller('detailAccountsController', detailAccountsController);",
    "import accModule from '../acc.module';\r\n\r\nfunction dimensionsController($scope, logger, translate, confirm, devConstants, $timeout,\r\n                              dimensionCategoryApi, dimensionApi,\r\n                              dimensionCreateModalService,\r\n                              dimensionUpdateModalService) {\r\n    $scope.errors = [];\r\n    $scope.dimensionCategories = [];\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {\r\n                name: 'title',\r\n                title: translate('Title'),\r\n                type: 'string',\r\n                template: `<span ng-if=\"!item.isEditing\">{{item.title}}</span>\r\n                    <form name=\"form\">\r\n                    <input ng-if=\"item.isEditing\" class=\"form-control\" name=\"title\" ng-model=\"item.title\" required/>\r\n                    <div ng-messages=\"form.title.$error\" ng-if=\"form.title.$dirty\">\r\n                        <label ng-message=\"required\" class=\"error\">{{'This field is required'|translate}}</label>\r\n                    </div>\r\n                    </form>`\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                icon: 'fa fa-edit',\r\n                canShow: current => !current.isEditing,\r\n                action: current => {\r\n                    current.originalTitle = current.title;\r\n                    current.isEditing = true;\r\n                }\r\n            },\r\n            {\r\n                title: translate('Save'),\r\n                icon: 'fa fa-floppy-o',\r\n                canShow: current => current.isEditing,\r\n                action: current => {\r\n                    if (!current.title) return;\r\n\r\n                    dimensionCategoryApi.update(current.id, current)\r\n                        .then(() => current.isEditing = false);\r\n                }\r\n            },\r\n            {\r\n                title: translate('Cancel'),\r\n                icon: 'fa fa-times',\r\n                canShow: current => current.isEditing,\r\n                action: current => {\r\n                    current.title = current.originalTitle;\r\n                    current.isEditing = false;\r\n                }\r\n            }\r\n        ],\r\n        selectable: true,\r\n        filterable: false,\r\n        sortable: false,\r\n        gridSize: '150px',\r\n        readUrl: dimensionCategoryApi.url.getAll,\r\n        mapper: item => item.isEditig = false\r\n    };\r\n\r\n    $scope.current = false;\r\n    $scope.gridDimensions = false;\r\n\r\n    $scope.onCurrentChanged = (current) => {\r\n        $scope.current = current == null ? false : current;\r\n        $scope.dimensionGridOption.readUrl = dimensionApi.url.getAll(current.id);\r\n    };\r\n\r\n    $scope.createDimension = () => {\r\n        dimensionCreateModalService.show({categoryId: $scope.current.id})\r\n            .then(() => {\r\n                $scope.dimensionGridOption.refresh();\r\n                logger.success();\r\n            });\r\n    };\r\n\r\n    $scope.dimensionGridOption = {\r\n        columns: [\r\n            {name: 'code', title: translate('Code'), width: '120px', type: 'string'},\r\n            {name: 'title', title: translate('Title'), type: 'string'}\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                icon: 'fa fa-edit',\r\n                action: function (current) {\r\n                    dimensionUpdateModalService.show({id: current.id})\r\n                        .then(() => {\r\n                            $scope.dimensionGridOption.refresh();\r\n                            logger.success();\r\n                        });\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                icon: 'fa fa-trash',\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove Dimension'),\r\n                        translate('Are you sure ?'))\r\n                        .then(() => {\r\n                            dimensionApi.remove(current.id)\r\n                                .then(function () {\r\n                                    $scope.dimensionGridOption.refresh();\r\n                                    logger.success();\r\n                                })\r\n                                .catch((err) => $scope.errors = err);\r\n                        })\r\n\r\n                }\r\n            }\r\n        ],\r\n        readUrl: '',\r\n        gridSize: '200px'\r\n    };\r\n}\r\n\r\naccModule.controller('dimensionsController', dimensionsController);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction generalLedgerAccountsController($scope, logger, translate, confirm,\r\n                                         generalLedgerAccountApi,\r\n                                         subsidiaryLedgerAccountApi,\r\n                                         subsidiaryLedgerAccountEntryModalService,\r\n                                         generalLedgerAccountCreateModalService,\r\n                                         generalLedgerAccountUpdateModalService) {\r\n\r\n\r\n    let columns = [\r\n        {name: 'code', title: translate('Code'), width: '120px', type: 'string'},\r\n        {name: 'title', title: translate('Title'), type: 'string'},\r\n        {\r\n            name: 'postingType',\r\n            title: translate('Posting type'),\r\n            type: 'postingType',\r\n            width: '150px',\r\n            template: '{{item.postingTypeDisplay}}'\r\n        },\r\n        {\r\n            name: 'balanceType',\r\n            title: translate('Balance type'),\r\n            type: 'balanceType',\r\n            width: '150px',\r\n            template: '{{item.balanceTypeDisplay}}'\r\n        },\r\n        {\r\n            name: 'isActive',\r\n            title: translate('Is active ?'),\r\n            type: 'activeType',\r\n            width: '150px',\r\n            template: `<i class=\"fa\"\r\n                          ng-class=\"{'fa-check text-navy': item.isActive,\r\n                                     'fa-times text-danger': !item.isActive}\">\r\n                       </i>`\r\n        }\r\n    ];\r\n\r\n    let commands = [\r\n        {\r\n            title: translate('Edit'),\r\n            name: 'edit general ledger account',\r\n            icon: 'fa fa-edit',\r\n            action: function (current) {\r\n                generalLedgerAccountUpdateModalService.show({id: current.id})\r\n                    .then(function () {\r\n                        $scope.gridOption.refresh();\r\n                    });\r\n            }\r\n        },\r\n        {\r\n            title: translate('Remove'),\r\n            icon: 'fa fa-trash',\r\n            action: function (current) {\r\n                confirm(\r\n                    translate('Remove General ledger account'),\r\n                    translate('Are you sure ?'))\r\n                    .then(function () {\r\n                        generalLedgerAccountApi.remove(current.id)\r\n                            .then(function () {\r\n                                logger.success();\r\n                                $scope.gridOption.refresh();\r\n                            })\r\n                            .catch((errors) => $scope.errors = errors)\r\n                            .finally(() => $scope.isSaving = false);\r\n                    })\r\n\r\n            }\r\n        }\r\n    ];\r\n\r\n    $scope.current = false;\r\n\r\n    $scope.gridOption = {\r\n        columns: columns,\r\n        commands: commands,\r\n        readUrl: generalLedgerAccountApi.url.getAll,\r\n        selectable: true,\r\n        gridSize: '200px'\r\n    };\r\n\r\n    $scope.selectGeneralLedgerAccount = current => {\r\n        $scope.gridOptionSubsidiaryLedgerAccount.readUrl =\r\n            subsidiaryLedgerAccountApi.url.getAll(current.id);\r\n        $scope.current = current;\r\n    };\r\n\r\n    $scope.createGeneralLedgerAccount = function () {\r\n        generalLedgerAccountCreateModalService.show()\r\n            .then(function () {\r\n                $scope.gridOption.refresh();\r\n            });\r\n    };\r\n\r\n    $scope.gridOptionSubsidiaryLedgerAccount = {\r\n        columns: [\r\n            {name: 'code', title: translate('Code'), type: 'string'},\r\n            {name: 'title', title: translate('Title'), type: 'string', width: '40%'},\r\n            {\r\n                name: 'isActive',\r\n                title: translate('Is active ?'),\r\n                type: 'activeType',\r\n                template: `<i class=\"fa\"\r\n                          ng-class=\"{'fa-check text-navy': item.isActive,\r\n                                     'fa-times text-danger': !item.isActive}\">\r\n                       </i>`\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                name: 'editSubsidiaryLedgerAccount',\r\n                icon: 'fa fa-edit',\r\n                action: current => {\r\n                    subsidiaryLedgerAccountEntryModalService.show({\r\n                        generalLedgerAccount: $scope.current,\r\n                        subsidiaryLedgerAccountId: current.id,\r\n                        editMode: 'edit'\r\n                    })\r\n                        .then(() => $scope.gridOptionSubsidiaryLedgerAccount.refresh());\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                icon: 'fa fa-trash',\r\n                action: (current) => {\r\n                    confirm(\r\n                        translate('Remove Subsidiary ledger account'),\r\n                        translate('Are you sure ?'))\r\n                        .then(() => {\r\n                            subsidiaryLedgerAccountApi.remove(current.id)\r\n                                .then(() => {\r\n                                    logger.success();\r\n                                    $scope.gridOptionSubsidiaryLedgerAccount.refresh();\r\n                                })\r\n                                .catch((errors) => $scope.errors = errors);\r\n                        });\r\n\r\n                }\r\n            }\r\n        ],\r\n        readUrl: '',\r\n        gridSize: '200px'\r\n    };\r\n\r\n    $scope.createSubsidiaryLedgerAccount = () => {\r\n        subsidiaryLedgerAccountEntryModalService.show({\r\n            generalLedgerAccount: $scope.current,\r\n            editMode: 'create'\r\n        })\r\n            .then(() => $scope.gridOptionSubsidiaryLedgerAccount.refresh());\r\n    };\r\n}\r\n\r\naccModule\r\n    .controller('generalLedgerAccountsController', generalLedgerAccountsController);",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction homeController($scope, currentService, navigate, journalApi, translate,\r\n                        journalCreateModalControllerService,\r\n                        journalAdvancedSearchModalService) {\r\n\r\n    let current = currentService.get();\r\n\r\n    if (!current.fiscalPeriod)\r\n        return navigate('createFiscalPeriod');\r\n\r\n    $scope.select = c => {\r\n        var x = c;\r\n        console.log(c);\r\n    };\r\n\r\n    $scope.save = () => $scope.isWaiting = !$scope.isWaiting;\r\n\r\n    journalApi.getGroupedByMouth()\r\n        .then(result => {\r\n            let items = new Collection(result.data).asEnumerable();\r\n\r\n            let colors = ['#803690', '#00ADF9', '#DCDCDC', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360'];\r\n            $scope.labels = items.select(item => item.monthName).toArray();\r\n\r\n            $scope.labelForDisplay = new Collection(colors).asEnumerable()\r\n                .take($scope.labels.length)\r\n                .select(c => ({color: c, label: $scope.labels[colors.indexOf(c)]}))\r\n                .toArray();\r\n\r\n            $scope.data = items.select(item => parseInt(item.count)).toArray();\r\n        });\r\n\r\n    journalApi.incomesAndOutcomes()\r\n        .then(result => {\r\n            let items = new Collection(result).asEnumerable()\r\n\r\n            let incomes = items\r\n                .where(item => item.amountType == 'income')\r\n                .select(item => item.amount)\r\n                .toArray();\r\n\r\n            let outcomes = items\r\n                .where(item => item.amountType == 'outcome')\r\n                .select(item => item.amount)\r\n                .toArray();\r\n\r\n            $scope.incomeAndOutcomes = [\r\n                incomes, outcomes\r\n            ];\r\n\r\n            $scope.months = items\r\n                .distinct(item => item.monthName)\r\n                .select(item => item.monthName)\r\n                .toArray();\r\n\r\n            let income = new Collection(incomes).asEnumerable().sum(),\r\n                outcome = new Collection(outcomes).asEnumerable().sum(),\r\n                total = income + outcome,\r\n                incomePercent = (income * 100) / total,\r\n                outcomePercent = (outcome * 100) / total;\r\n\r\n            $scope.totalIncomeAndOutcome = {income, outcome, incomePercent, outcomePercent};\r\n        });\r\n\r\n    $scope.incomeAndOutcomes = [];\r\n    $scope.months = [];\r\n\r\n    $scope.series = [translate('Income'), translate('Outcome')];\r\n\r\n    $scope.datasetOverride = [{yAxisID: 'y-axis-1'}, {yAxisID: 'y-axis-2'}];\r\n\r\n    $scope.options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    id: 'y-axis-1',\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left'\r\n                },\r\n                {\r\n                    id: 'y-axis-2',\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'right'\r\n                }\r\n            ]\r\n        }\r\n    };\r\n\r\n    $scope.data = [];\r\n    $scope.labels = [];\r\n\r\n    journalApi.getTotalInfo().then(result => $scope.totalInfo = result);\r\n\r\n    $scope.journalCreate = () => {\r\n        journalCreateModalControllerService.show()\r\n            .then((result) => {\r\n                logger.success();\r\n                navigate('journalUpdate', {\r\n                    id: result.id\r\n                });\r\n            });\r\n    };\r\n\r\n    $scope.journalSearch = () => {\r\n        journalAdvancedSearchModalService.show()\r\n            .then((result) => {\r\n                navigate('journals', null, result);\r\n            });\r\n    };\r\n\r\n    $scope.goToJournal = () => {\r\n        if (!$scope.journalNumber) return;\r\n\r\n        journalApi.getByNumber($scope.journalNumber)\r\n            .then(result => navigate('journalUpdate', {id: result.id}));\r\n    };\r\n\r\n    /* $scope.data = [\r\n     {\r\n     row: 1,\r\n     da: 1,\r\n     sla: 100,\r\n     gla: 131,\r\n     article: 'بابت هزینه ایاب و ذهاب',\r\n     debtor: 10000,\r\n     creditor: 0\r\n     },\r\n     {\r\n     row: 1,\r\n     da: 2,\r\n     sla: 100,\r\n     gla: 131,\r\n     article: 'بابت هزینه ایاب و ذهاب',\r\n     debtor: 10000,\r\n     creditor: 0\r\n     },\r\n     {\r\n     row: 1,\r\n     da: 3,\r\n     sla: 100,\r\n     gla: 131,\r\n     article: 'بابت هزینه ایاب و ذهاب',\r\n     debtor: 10000,\r\n     creditor: 0\r\n     }\r\n     ];\r\n\r\n     let detailAccountDataSource = {\r\n     type: \"json\",\r\n     serverFiltering: true,\r\n     transport: {\r\n     read: {\r\n     url: devConstants.urls.detailAccount.all()\r\n     }\r\n     },\r\n     schema: {\r\n     data: 'data'\r\n     }\r\n     };\r\n\r\n     let articleEditor= `<dev-tag-editor ng-model=\"item.article\"></dev-tag-editor>`;\r\n\r\n     $scope.columns = [\r\n     {name: 'row', title: '#', editTemplate: '{{item.row}}'},\r\n     {\r\n     name: 'da',\r\n     title: 'تفصیل',\r\n     editTemplate: `<dev-tag-combo-box\r\n     ng-change=\"changeValue(item.da)\"\r\n     name=\"generalLedgerAccountId\"\r\n     id=\"generalLedgerAccountId\"\r\n     k-placeholder=\"{{'Select ...'|translate}}\"\r\n     k-data-value-field=\"id\"\r\n     k-data-text-field=\"display\"\r\n     k-data-source=\"column.dataSource\"\r\n     k-on-change=\"generalLedgerAccountOnChange\"\r\n     ng-model=\"item.da\"\r\n     required></dev-tag-combo-box>`,\r\n     dataSource: detailAccountDataSource\r\n     },\r\n     {name: 'sla', title: 'معین',\r\n     editTemplate: '<input style=\"height: 30px\" type=\"text\" class=\"form-control\" ng-model=\"item.sla\">'},\r\n     {name: 'gla', title: 'کل',\r\n     editTemplate: '<input style=\"height: 30px\" type=\"text\" class=\"form-control\" ng-model=\"item.gla\">'},\r\n     {name: 'article', title: 'آرتیکل',\r\n     editTemplate: `<input\r\n     type=\"text\"\r\n     required\r\n     class=\"form-control\"\r\n     name=\"article\"\r\n     ng-model=\"item.article\"\r\n     popover=\"{{item.article}}\"\r\n     popover-trigger=\"focus\"\r\n     popover-placement=\"bottom\"\r\n     tooltip=\"{{'This field is required'| translate}}\"\r\n     tooltip-placement=\"bottom\"\r\n     tooltip-trigger=\"mouseenter\"\r\n     tooltip-enable=\"subForm.article.$invalid\"/>`\r\n     },\r\n     {name: 'debtor', title: 'بدهکار',\r\n     editTemplate: `<dev-tag-numeric\r\n     style=\"height: 30px\"\r\n     ng-model=\"item.debtor\"\r\n     popover=\"{{item.debtor|number}}\"\r\n     popover-trigger=\"focus\" class=\"form-control\"\r\n     popover-placement=\"bottom\"></dev-tag-numeric>`},\r\n     {name: 'creditor', title: 'بستانکار',\r\n     editTemplate: `<dev-tag-numeric\r\n     style=\"height: 30px\"\r\n     ng-model=\"item.creditor\"\r\n     popover=\"{{item.creditor|number}}\"\r\n     popover-trigger=\"focus\" class=\"form-control\"\r\n     popover-placement=\"bottom\"></dev-tag-numeric>`},\r\n\r\n     ];\r\n\r\n     $scope.defaultItem = {\r\n     row: 1,\r\n     da: null,\r\n     sla: null,\r\n     gla: null,\r\n     article: '',\r\n     debtor: 0,\r\n     creditor: 0\r\n     };*/\r\n}\r\n\r\naccModule.controller('homeController', homeController);",
    "import accModule from '../acc.module';\r\n\r\nfunction journalCopyController($scope, translate, journalApi, navigate, devConstants, confirm) {\r\n    $scope.errors = [];\r\n\r\n    $scope.periodDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.period.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.periodOnChange = (current)=> {\r\n        $scope.gridOption.readUrl = devConstants.urls.journal.getAllByPeriod(current.id);\r\n    };\r\n\r\n    $scope.current =false;\r\n    $scope.onCurrentChanged = current => $scope.current = current;\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'temporaryNumber', title: translate('Temporary number'), width: '20%', type: 'number'},\r\n            {name: 'temporaryDate', title: translate('Temporary date'), type: 'date', width: '20%'},\r\n            {\r\n                name: 'description', title: translate('Description'), type: 'string', width: '50%',\r\n                template: '<span title=\"{{item.description}}\">{{item.description}}</span>'\r\n            }\r\n        ],\r\n        commands: [],\r\n        selectable: true\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.submit = (current)=> {\r\n\r\n        confirm(\r\n            translate('Are you sure ?'),\r\n            translate('Copy journal')\r\n        ).then(()=> {\r\n            $scope.isSaving = true;\r\n\r\n            journalApi.copy(current.id)\r\n                .then((result)=> {\r\n                    confirm(\r\n                        translate('Do you want to edit created journal ?'),\r\n                        translate('Successful'),\r\n                        'success'\r\n                    ).then(()=> {\r\n                        navigate('journalUpdate', {id: result.id});\r\n                    });\r\n                })\r\n                .finally(()=> $scope.isSaving = false)\r\n        });\r\n    };\r\n\r\n    $scope.editCreatedJournal = ()=> {\r\n        navigate('journalUpdate', {id: $scope.model.createdJournalId});\r\n    };\r\n}\r\n\r\naccModule\r\n    .controller('journalCopyController', journalCopyController);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalManagementController($scope, logger, confirm, devConstants, translate, $timeout,\r\n                                     showJournalDetailModalService,\r\n                                     journalBookkeepingService) {\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'monthName', title: translate('Month'), type: 'string'},\r\n            {name: 'count', title: translate('Count'), type: 'string'},\r\n            {name: 'minNumber', title: translate('From number'), type: 'string'},\r\n            {name: 'maxNumber', title: translate('To number'), type: 'string'},\r\n            {name: 'minDate', title: translate('From date'), type: 'string'},\r\n            {name: 'maxDate', title: translate('To date'), type: 'string'}\r\n        ],\r\n        commands: [],\r\n        readUrl: devConstants.urls.journal.getGroupedByMouth(),\r\n        current: null,\r\n        selectable: true,\r\n        filterable: false,\r\n        sortable: false,\r\n        pageable: false,\r\n        gridSize: '200px'\r\n    };\r\n\r\n    $scope.canShowJournals = false;\r\n\r\n    $scope.journalGridOption = {\r\n        columns: [\r\n            {name: 'temporaryNumber', title: translate('Temporary number'), type: 'number', width: '10%'},\r\n            {name: 'temporaryDate', title: translate('Temporary date'), type: 'date', width: '10%'},\r\n           /* {name: 'number', title: translate('Number'), type: 'number', width: '10%'},\r\n            {name: 'date', title: translate('Date'), type: 'date', width: '10%'},*/\r\n            {\r\n                name: 'isFixed', title: translate('Fixed ?'), type: 'boolean', width: '10%',\r\n                template: '<i class=\"fa fa-lock\" ng-if=\"item.isFixed\"></i>'\r\n            },\r\n            {name: 'sumAmount', title: translate('Amount'), type: 'number', width: '10%', template: '{{item.sumAmount|number}}'},\r\n            {\r\n                name: 'hasAttachment', title: translate('Attachment ?'), type: 'boolean', width: '10%',\r\n                template: '<i class=\"fa fa-paperclip\" ng-if=\"item.hasAttachment\"></i>'\r\n            },\r\n            {name: 'countOfRows', title: translate('Rows'), type: 'number', width: '10%'},\r\n            {\r\n                name: 'description', title: translate('Description'), type: 'string', width: '20%',\r\n                template: '<span  title=\"{{item.description}}\">{{item.description}}</span>'\r\n            }\r\n        ],\r\n        commands: [],\r\n        selectable: true,\r\n        readUrl: '',\r\n        gridSize: '200px'\r\n    };\r\n\r\n    $scope.current = false;\r\n\r\n    $scope.onSelectMonth = current => {\r\n        $scope.current = current;\r\n        $scope.journalGridOption.readUrl = devConstants.urls.journal.getByMonth(current.month);\r\n    };\r\n\r\n    $scope.currentJournal= false;\r\n\r\n    $scope.onSelectJournal = current => {\r\n        $scope.currentJournal = current;\r\n    };\r\n\r\n    $scope.bookkeeping = () => {\r\n        let current = $scope.currentJournal;\r\n\r\n        if (current.number)\r\n            return logger.error(translate('This journal already bookkeeped'));\r\n\r\n        journalBookkeepingService.show({id: current.id})\r\n            .then(()=> {\r\n                logger.success();\r\n                $scope.journalGridOption.refresh();\r\n            });\r\n    };\r\n\r\n    $scope.showJournal = ()=> {\r\n        let current = $scope.currentJournal;\r\n\r\n        showJournalDetailModalService\r\n            .show({\r\n                id: current.id\r\n            });\r\n    };\r\n}\r\n\r\naccModule.controller('journalManagementController', journalManagementController);\r\n",
    "import accModule from '../acc.module';\r\nimport $ from 'jquery';\r\n\r\nfunction journalPrintController($scope, $routeParams, journalApi) {\r\n\r\n    let id = $routeParams.id;\r\n    $scope.data = {};\r\n    $scope.canShowReport = false;\r\n\r\n    journalApi.getJournalReportJson(id)\r\n        .then((result)=> {\r\n            $scope.data = result;\r\n            $scope.canShowReport = true;\r\n        });\r\n\r\n}\r\n\r\naccModule.controller('journalPrintController', journalPrintController);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalTemplatesController($scope, translate, confirm, navigate, journalTemplateApi, devConstants, prompt, logger, $timeout) {\r\n    $scope.errors = [];\r\n    $scope.canShowJournalGrid = false;\r\n\r\n    $scope.periodDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.period.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.periodOnChange = (current)=> {\r\n        $scope.journalGridOption.readUrl = devConstants.urls.journal.getAllByPeriod(current.id);\r\n    };\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {\r\n                name: 'title', title: translate('Title'), width: '70%', type: 'string',\r\n                template: '<span title=\"{{item.title}}\">{{item.title}}</span>'\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('New Journal'),\r\n                action: (current)=> {\r\n                    confirm(\r\n                        translate('Are you sure ?'),\r\n                        translate('New Journal')\r\n                    ).then(()=> {\r\n                        journalTemplateApi.journalCreate(current.id)\r\n                            .then((result)=> {\r\n                                confirm(\r\n                                    translate('Do you want to edit created journal ?'),\r\n                                    translate('Successful'),\r\n                                    'success'\r\n                                ).then(()=> {\r\n                                    navigate('journalUpdate', {id: result.id});\r\n                                });\r\n                            })\r\n                            .catch((errors)=> $scope.errors = errors);\r\n                    })\r\n                }\r\n            }\r\n        ],\r\n        readUrl: devConstants.urls.journalTemplate.getAll(),\r\n        gridSize: '200px'\r\n    };\r\n\r\n    $scope.journalGridOption = {\r\n        columns: [\r\n            {name: 'temporaryNumber', title: translate('Number'), width: '10%', type: 'number'},\r\n            {name: 'temporaryDate', title: translate('Date'), type: 'date', width: '20%'},\r\n            {\r\n                name: 'description', title: translate('Description'), type: 'string', width: '50%',\r\n                template: '<span title=\"{{item.description}}\">{{item.description}}</span>'\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Copy to journal template'),\r\n                icon: 'fa fa-copy',\r\n                action: (current)=> {\r\n                    prompt({\r\n                        title: translate('Copy to journal template'),\r\n                        text: translate('Enter Title of journal template'),\r\n                    }).then((inputValue)=> {\r\n                        journalTemplateApi.create(current.id, {title: inputValue})\r\n                            .then(function () {\r\n                                logger.success();\r\n                                $scope.gridOption.refresh();\r\n                            });\r\n                    })\r\n                }\r\n            }\r\n        ],\r\n        readUrl: '',\r\n        gridSize: '200px'\r\n    };\r\n}\r\n\r\naccModule.controller('journalTemplatesController', journalTemplatesController);\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction journalUpdateController($scope, logger, confirm, translate, navigate, $routeParams, $rootScope, devConstants,\r\n                                 journalApi, journalLineApi, subsidiaryLedgerAccountApi, dimensionCategoryApi,\r\n                                 journalLineCreateControllerModalService,\r\n                                 journalLineUpdateControllerModalService,\r\n                                 journalBookkeepingService,\r\n                                 journalAttachImageService,\r\n                                 writeChequeOnJournalLineEntryService,\r\n                                 tagApi,\r\n                                 formService) {\r\n\r\n    let id = $routeParams.id;\r\n\r\n    $scope.errors = [];\r\n\r\n    $scope.journalStatueForTitle = {\r\n        icon: '',\r\n        color: '',\r\n        title: '',\r\n    };\r\n\r\n    $scope.journal = {\r\n        temporaryNumber: null,\r\n        temporaryDate: null,\r\n        number: null,\r\n        date: null,\r\n        description: '',\r\n        tagIds: [],\r\n        journalType: null\r\n    };\r\n\r\n    $scope.journalTypeData = devConstants.enums.JournalType().data;\r\n\r\n    $scope.canShowNumberAndDate = false;\r\n\r\n    function fetch() {\r\n        journalApi.getById(id)\r\n            .then(result => {\r\n                $scope.journal = result;\r\n\r\n                $scope.canShowNumberAndDate = result.journalStatus != 'Temporary';\r\n\r\n                let status = $scope.journalStatueForTitle;\r\n\r\n                if ($scope.journal.isInComplete) {\r\n                    status.icon = 'warning';\r\n                    status.color = 'red';\r\n                    status.title = translate('InComplete journal');\r\n                }\r\n                else {\r\n                    if ($scope.journal.journalStatus == 'Fixed') {\r\n                        status.icon = 'lock';\r\n                        status.color = 'blue';\r\n                        status.title = $scope.journal.journalStatusDisplay;\r\n                    } else {\r\n                        status.icon = 'check';\r\n                        status.color = 'green';\r\n                        status.title = $scope.journal.journalStatusDisplay;\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    fetch();\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {\r\n                name: 'row', title: '#', width: '70px', type: 'number',\r\n                filterable: false\r\n            },\r\n            {\r\n                name: 'detailAccountId',\r\n                title: translate('Detail account'),\r\n                type: 'detailAccount',\r\n                template: '{{item.detailAccountCode}}',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'subsidiaryLedgerAccountId',\r\n                title: translate('Subsidiary ledger account'),\r\n                type: 'subsidiaryLedgerAccount',\r\n                template: '{{item.subsidiaryLedgerAccountCode}}',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'generalLedgerAccountId',\r\n                title: translate('General ledger account'),\r\n                type: 'generalLedgerAccount',\r\n                template: '{{item.generalLedgerAccountCode}}',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'article', title: translate('Article'), type: 'string',\r\n                width: '30%',\r\n                template: '<span title=\"{{item.article}}\">{{item.article}}</span>'\r\n            },\r\n            {\r\n                name: 'debtor', title: translate('Debtor'), width: '120px', type: 'number',\r\n                template: '{{item.debtor | number}}',\r\n                aggregates: ['sum'],\r\n                footerTemplate: \"{{aggregates.debtor.sum | number}}\"\r\n            },\r\n            {\r\n                name: 'creditor', title: translate('Creditor'), width: '120px', type: 'number',\r\n                template: '{{item.creditor | number}}',\r\n                aggregates: ['sum'],\r\n                footerTemplate: \"{{aggregates.creditor.sum | number}}\"\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                icon: 'fa fa-edit',\r\n                action: function (current) {\r\n                    journalLineUpdateControllerModalService\r\n                        .show({\r\n                            journalId: id,\r\n                            id: current.id\r\n                        })\r\n                        .then(() => $scope.gridOption.refresh());\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                icon: 'fa fa-trash',\r\n                action: function (current) {\r\n                    confirm(\r\n                        translate('Remove General ledger account'),\r\n                        translate('Are you sure ?'))\r\n                        .then(function () {\r\n                            journalLineApi.remove(current.id)\r\n                                .then(function () {\r\n                                    logger.success();\r\n                                    $scope.gridOption.refresh();\r\n                                })\r\n                                .catch((errors) =>\r\n                                    logger.error(errors.join('<b/>')));\r\n                        })\r\n\r\n                }\r\n            }\r\n        ],\r\n        selectable: true,\r\n        filterable: false,\r\n        readUrl: journalLineApi.url.getAll(id),\r\n        gridSize: '300px'\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form) => {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        Collection.removeAll($scope.errors);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        journalApi.update(id, $scope.journal)\r\n            .then(() => {\r\n                logger.success();\r\n            })\r\n            .catch((errors) => $scope.errors = errors)\r\n            .finally(() => $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.createJournalLine = () => {\r\n        journalLineCreateControllerModalService\r\n            .show({journalId: id})\r\n            .then(isInComplete => {\r\n                $scope.gridOption.refresh();\r\n                $scope.journal.isInComplete = isInComplete;\r\n            });\r\n    };\r\n\r\n    $scope.bookkeeping = () => {\r\n        journalBookkeepingService.show({id: id})\r\n            .then(() => {\r\n                logger.success();\r\n                fetch();\r\n            });\r\n    };\r\n\r\n    $scope.attachImage = () => {\r\n        journalAttachImageService.show({id: id})\r\n            .then(fileName => {\r\n                $scope.journal.attachmentFileName = fileName;\r\n                logger.success();\r\n            });\r\n    };\r\n\r\n    $scope.print = () => navigate('journalPrint', {id: id});//showReport(`/report/journal/${id}`);\r\n\r\n    $scope.writeCheque = () => {\r\n        $rootScope.blockUi.block();\r\n\r\n        let current = $scope.journalLineCurrent;\r\n        subsidiaryLedgerAccountApi.getById(current.subsidiaryLedgerAccountId)\r\n            .then((result) => {\r\n                $rootScope.blockUi.unBlock();\r\n\r\n                if (result.isBankAccount) {\r\n                    writeChequeOnJournalLineEntryService.show({\r\n                        journalLineId: current.id,\r\n                        detailAccountId: current.detailAccountId,\r\n                        detailAccountDisplay: current.detailAccountDisplay,\r\n                        amount: current.creditor,\r\n                        description: current.article,\r\n                        date: $scope.journal.date\r\n                    }).then(() => {\r\n                        $scope.gridOption.refresh();\r\n                        logger.success();\r\n                    });\r\n                }\r\n                else {\r\n                    logger.error(translate('The current subsidiaryLedgerAccount is not bank account'));\r\n                }\r\n            });\r\n\r\n\r\n    };\r\n    $scope.journalLineCurrent = false;\r\n    $scope.journalLineCurrentChanged = (current) => {\r\n        $scope.journalLineCurrent = current;\r\n    };\r\n\r\n    $scope.dimensionCategories = {};\r\n\r\n    dimensionCategoryApi.getAllLookup()\r\n        .then((result) => {\r\n            let cats = result.data;\r\n            $scope.dimensionCategories = cats;\r\n        });\r\n\r\n    $scope.tagsDataSource = new kendo.data.DataSource({\r\n        batch: true,\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.tag.getAll()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    });\r\n\r\n    $scope.onSaveTag = value => {\r\n      return tagApi.create({title: value});\r\n    };\r\n}\r\n\r\naccModule.controller('journalUpdateController', journalUpdateController);\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction journalsController($scope, translate, journalApi, navigate, logger,\r\n                            journalCreateModalControllerService,\r\n                            journalAdvancedSearchModalService,\r\n                            journalsExtraFilterResolve) {\r\n\r\n    $scope.searchParameters = false;\r\n    []\r\n\r\n    $scope.gridOption = {\r\n        name: 'journals',\r\n        columns: [\r\n            {\r\n                name: 'journalStatus',\r\n                title: translate('Status'),\r\n                type: 'journalStatus',\r\n                width: '120px',\r\n                template: `<i title=\"{{item.statusTitle}}\" \r\n                            class=\"fa fa-{{item.statusIcon}}\"\r\n                            style=\"color: {{item.statusColor}};\"></i>`\r\n            },\r\n            {name: 'temporaryNumber', title: translate('Number'), width: '120px', type: 'number'},\r\n            {name: 'temporaryDate', title: translate('Date'), type: 'date', width: '120px',},\r\n           /* {name: 'number', title: translate('Number'), width: '100px', type: 'number'},\r\n            {name: 'date', title: translate('Date'), type: 'date', width: '100px',},*/\r\n            {\r\n                name: 'description', title: translate('Description'), type: 'string', width: '30%',\r\n                template: '<span title=\"{{item.description}}\">{{item.description}}</span>'\r\n            },\r\n            {name: 'createdBy', title: translate('User'), width: '100px', type: 'string'}\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                icon: 'fa fa-edit',\r\n                action: function (current) {\r\n                    navigate('journalUpdate', {\r\n                        id: current.id\r\n                    });\r\n                }\r\n            }\r\n        ],\r\n        readUrl: journalApi.url.getAll,\r\n        mapper: (d) => {\r\n            d.statusTitle = d.journalStatusDisplay;\r\n            if (d.isInComplete) {\r\n                d.statusIcon = 'warning';\r\n                d.statusColor = 'red';\r\n                d.statusTitle = translate('InComplete journal');\r\n            }\r\n            else {\r\n                if (d.journalStatus == 'Fixed') {\r\n                    d.statusIcon = 'lock';\r\n                    d.statusColor = 'blue';\r\n                } else {\r\n                    d.statusIcon = 'check';\r\n                    d.statusColor = 'green';\r\n                }\r\n            }\r\n        },\r\n        resolveExtraFilter: journalsExtraFilterResolve,\r\n        setExtraFilter: (extra) => {\r\n            $scope.searchParameters = extra;\r\n        }\r\n    };\r\n\r\n    $scope.create = () => {\r\n        journalCreateModalControllerService.show()\r\n            .then((result) => {\r\n                logger.success();\r\n                navigate('journalUpdate', {\r\n                    id: result.id\r\n                });\r\n            });\r\n    };\r\n\r\n    $scope.advancedSearch = () => {\r\n        journalAdvancedSearchModalService.show()\r\n            .then((result) => {\r\n                $scope.searchParameters = result;\r\n\r\n                $scope.$broadcast('{0}/execute-advanced-search'.format($scope.gridOption.name),\r\n                    result.resolve(result.data));\r\n            });\r\n    };\r\n\r\n    $scope.removeParameters = () => {\r\n        $scope.searchParameters = false;\r\n        $scope.$broadcast('{0}/execute-advanced-search'\r\n            .format($scope.gridOption.name), null);\r\n    };\r\n\r\n    $scope.$on('$routeChangeStart', (next, current) => {\r\n        $scope.gridOption.saveState($scope.searchParameters);\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalsController', journalsController)\r\n    .factory('journalsExtraFilterResolve', () => {\r\n        return function (filterData) {\r\n            if (!filterData) return null;\r\n\r\n            let instance = angular.extend({}, filterData);\r\n\r\n            instance.generalLedgerAccounts = new Collection(filterData.generalLedgerAccounts)\r\n                .asEnumerable()\r\n                .select((g) => g.id)\r\n                .toArray();\r\n\r\n            instance.subsidiaryLedgerAccounts = new Collection(filterData.subsidiaryLedgerAccounts)\r\n                .asEnumerable()\r\n                .select((s) => s.id)\r\n                .toArray();\r\n\r\n            instance.detailAccounts = new Collection(filterData.detailAccounts)\r\n                .asEnumerable()\r\n                .select((d) => d.id)\r\n                .toArray();\r\n\r\n            instance.dimension1s = new Collection(filterData.dimension2s)\r\n                .asEnumerable()\r\n                .select((d) => d.id)\r\n                .toArray();\r\n\r\n            instance.dimension2s = new Collection(filterData.dimension2s)\r\n                .asEnumerable()\r\n                .select((d) => d.id)\r\n                .toArray();\r\n\r\n            instance.dimension3s = new Collection(filterData.dimension3s)\r\n                .asEnumerable()\r\n                .select((d) => d.id)\r\n                .toArray();\r\n\r\n            instance.dimension4s = new Collection(filterData.dimension4s)\r\n                .asEnumerable()\r\n                .select((d) => d.id)\r\n                .toArray();\r\n\r\n            instance.chequeNumbers = new Collection(filterData.chequeNumbers)\r\n                .asEnumerable()\r\n                .select((c) => c.id)\r\n                .toArray();\r\n\r\n\r\n            return instance;\r\n        }\r\n    });",
    "import Collection from 'dev.collection';\r\n\r\nexport default function ($scope, devConstants, dimensionCategoryApi, reportApi, translate) {\r\n\r\n    $scope.reports = devConstants.reports;\r\n    $scope.mode = 'view';\r\n    $scope.data = [];\r\n    $scope.selectedReport = false;\r\n    $scope.fileName = false;\r\n    $scope.reportTitle = '';\r\n\r\n    $scope.select = report => $scope.selectedReport = report;\r\n    $scope.isActiveFirstTab = true;\r\n\r\n    $scope.viewerTabs = [];\r\n\r\n    $scope.addViewerTab = () => {\r\n        deactivateAllTab();\r\n\r\n        let report = $scope.selectedReport,\r\n            params = resolveFilter($scope.journalSearch);\r\n\r\n        reportApi[report.func](params)\r\n            .then(result => {\r\n                $scope.data = result;\r\n                $scope.viewerTabs.push({title: report.text, isActive: true, fileName: report.fileName});\r\n            });\r\n    };\r\n\r\n    $scope.closeViewerTab = tab => Collection.remove($scope.viewerTabs, tab);\r\n\r\n    $scope.design = report => {\r\n        let params = resolveFilter($scope.journalSearch);\r\n        $scope.fileName = report.fileName;\r\n        $scope.reportTitle = report.text;\r\n\r\n        if (!report.func) {\r\n            $scope.mode = 'design';\r\n            return;\r\n        }\r\n\r\n        reportApi[report.func](params)\r\n            .then(result => {\r\n                $scope.data = result;\r\n                $scope.mode = 'design';\r\n            });\r\n    };\r\n\r\n    $scope.onExitDesign = () => {\r\n        $scope.mode = 'view';\r\n        $scope.isActiveFirstTab = true;\r\n    };\r\n\r\n    $scope.closeDesignerTab = tab => {\r\n        Collection.remove($scope.designerTabs, tab);\r\n        $scope.isActiveFirstTab = true;\r\n    }\r\n\r\n    function deactivateAllTab() {\r\n        $scope.isActiveFirstTab = false;\r\n        $scope.viewerTabs.forEach(t => t.isActive = false);\r\n    }\r\n\r\n    $scope.execute = () => resolveFilter($scope.journalSearch);\r\n    //search parameter cals\r\n\r\n    $scope.journalSearch = {\r\n        title: '',\r\n        minNumber: null,\r\n        maxNumber: null,\r\n        minDate: null,\r\n        maxDate: null,\r\n        generalLedgerAccounts: [],\r\n        subsidiaryLedgerAccounts: [], //combination of generalLedgerAccount and subsidiaryLedgerAccount\r\n        detailAccounts: [],\r\n        dimension1s: [],\r\n        dimension2s: [],\r\n        dimension3s: [],\r\n        dimension4s: [],\r\n        chequeNumbers: [],\r\n        minChequeDate: null,\r\n        maxChequeDate: null,\r\n        chequeDescription: '',\r\n        isNotPeriodIncluded: false\r\n    };\r\n\r\n    $scope.generalLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.generalLedgerAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.subsidiaryLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.subsidiaryLedgerAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.dimension1DataSource = {};\r\n    $scope.dimension2DataSource = {};\r\n    $scope.dimension3DataSource = {};\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result) => {\r\n            let cats = result.data;\r\n            $scope.dimensionCategories = cats;\r\n\r\n            $scope.dimension1DataSource = dimensionDataSourceFactory(cats[0].id);\r\n            $scope.dimension2DataSource = dimensionDataSourceFactory(cats[1].id);\r\n            $scope.dimension3DataSource = dimensionDataSourceFactory(cats[2].id);\r\n        });\r\n\r\n    function dimensionDataSourceFactory(categoryId) {\r\n        return {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: devConstants.urls.dimension.allByCategory(categoryId)\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        };\r\n    }\r\n\r\n    $scope.chequeDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.cheque.allUseds()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    function resolveFilter(filterData) {\r\n\r\n        let instance = angular.extend({}, filterData);\r\n\r\n        instance.generalLedgerAccounts = new Collection(filterData.generalLedgerAccounts)\r\n            .asEnumerable()\r\n            .select((g) => g.id)\r\n            .toArray();\r\n\r\n        instance.subsidiaryLedgerAccounts = new Collection(filterData.subsidiaryLedgerAccounts)\r\n            .asEnumerable()\r\n            .select((s) => s.id)\r\n            .toArray();\r\n\r\n        instance.detailAccounts = new Collection(filterData.detailAccounts)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.dimension1s = new Collection(filterData.dimension2s)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.dimension2s = new Collection(filterData.dimension2s)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.dimension3s = new Collection(filterData.dimension3s)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.dimension4s = new Collection(filterData.dimension4s)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.chequeNumbers = new Collection(filterData.chequeNumbers)\r\n            .asEnumerable()\r\n            .select((c) => c.id)\r\n            .toArray();\r\n\r\n\r\n        return instance;\r\n    }\r\n\r\n}\r\n\r\n",
    "export default function ($scope,$routeParams) {\r\n    $scope.fileName = $routeParams.fileName;\r\n}\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction subsidiaryLedgerAccountCreateController($scope, logger, navigate, $routeParams,\r\n                                                 devConstants, formService,\r\n                                                 subsidiaryLedgerAccountApi,\r\n                                                 dimensionCategoryApi) {\r\n\r\n    let generalLedgerAccountId = $routeParams.generalLedgerAccountId;\r\n\r\n    $scope.errors = [];\r\n    $scope.assignmentStatus = devConstants.enums.AssignmentStatus().data;\r\n\r\n    $scope.subsidiaryLedgerAccount = {\r\n        generalLedgerAccountId: generalLedgerAccountId,\r\n        code: '',\r\n        title: '',\r\n        detailAccountAssignmentStatus: null,\r\n        isBankAccount: false,\r\n        dimension1AssignmentStatus: null,\r\n        dimension2AssignmentStatus: null,\r\n        dimension3AssignmentStatus: null,\r\n    };\r\n\r\n    $scope.dimensionCategories = [];\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result)=> {\r\n            $scope.dimensionCategories = result.data;\r\n        });\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n        if (form.$invalid) {\r\n            formService.setDirty(form);\r\n            return;\r\n        }\r\n\r\n        $scope.isSaving = true;\r\n\r\n        subsidiaryLedgerAccountApi.create(\r\n            generalLedgerAccountId,\r\n            $scope.subsidiaryLedgerAccount)\r\n            .then(() => {\r\n                logger.success();\r\n                navigate(\r\n                    'subsidiaryLedgerAccounts',\r\n                    {generalLedgerAccountId: generalLedgerAccountId});\r\n            }).catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    }\r\n}\r\n\r\naccModule\r\n    .controller('subsidiaryLedgerAccountCreateController', subsidiaryLedgerAccountCreateController);",
    "import accModule from '../acc.module';\r\n\r\nfunction subsidiaryLedgerAccountUpdateController($scope, logger, navigate, devConstants,\r\n                                                 $routeParams, formService,\r\n                                                 subsidiaryLedgerAccountApi,\r\n                                                 dimensionCategoryApi) {\r\n    let id = $routeParams.id;\r\n\r\n    $scope.errors = [];\r\n    $scope.assignmentStatus = new devConstants.enums.AssignmentStatus().data\r\n    $scope.dimensionCategories = [];\r\n\r\n    $scope.subsidiaryLedgerAccount = {\r\n        code: '',\r\n        title: '',\r\n        detailAccountAssignmentStatus: null,\r\n        isBankAccount: false,\r\n        dimension1AssignmentStatus: null,\r\n        dimension2AssignmentStatus: null,\r\n        dimension3AssignmentStatus: null,\r\n        isActive: true\r\n    };\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result)=> {\r\n            $scope.dimensionCategories = result.data;\r\n        });\r\n\r\n    subsidiaryLedgerAccountApi.getById(id)\r\n        .then((result)=>\r\n            $scope.subsidiaryLedgerAccount = result);\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n\r\n        if (form.$invalid) {\r\n            formService.setDirty(form);\r\n            return;\r\n        }\r\n\r\n        $scope.isSaving = true;\r\n\r\n        subsidiaryLedgerAccountApi\r\n            .update(id, $scope.subsidiaryLedgerAccount)\r\n            .then(()=> {\r\n                logger.success();\r\n                navigate('subsidiaryLedgerAccounts', {\r\n                    generalLedgerAccountId: $scope.subsidiaryLedgerAccount.generalLedgerAccountId\r\n                });\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    }\r\n\r\n    $scope.isActivating = false;\r\n\r\n    $scope.activate = ()=> {\r\n        $scope.isActivating = true;\r\n\r\n        subsidiaryLedgerAccountApi.activate(id)\r\n            .then(()=> {\r\n                logger.success();\r\n                $scope.subsidiaryLedgerAccount.isActive = true;\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isActivating = false);\r\n    };\r\n\r\n\r\n    $scope.isDeactivating = false;\r\n\r\n    $scope.deactivate = ()=> {\r\n        $scope.isDeactivating = true;\r\n\r\n        subsidiaryLedgerAccountApi.deactivate(id)\r\n            .then(()=> {\r\n                logger.success();\r\n                $scope.subsidiaryLedgerAccount.isActive = false;\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isDeactivating = false);\r\n    };\r\n}\r\n\r\naccModule.controller(\r\n    'subsidiaryLedgerAccountUpdateController',\r\n    subsidiaryLedgerAccountUpdateController);",
    "import accModule from '../acc.module';\r\n\r\nfunction subsidiaryLedgerAccountsController($scope, logger, confirm, navigate, $routeParams, translate,\r\n                                            subsidiaryLedgerAccountApi) {\r\n\r\n    let generalLedgerAccountId = $routeParams.generalLedgerAccountId;\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'code', title: translate('Code'), width: '200px', type: 'string'},\r\n            {name: 'title', title: translate('Title'), type: 'string'},\r\n            {\r\n                name: 'isActive',\r\n                title: translate('Is active ?'),\r\n                type: 'activeType',\r\n                width: '170px',\r\n                template: '<i class=\"glyphicon glyphicon-${data.isActive ? \"ok-circle\" : \"remove-circle\"}\"' +\r\n                'style=\"font-size: 20px;color:${data.isActive ? \"green\" : \"red\"}\">' +\r\n                '</i>'\r\n            }\r\n        ],\r\n        commands: [\r\n            {\r\n                title: translate('Edit'),\r\n                name: 'editSubsidiaryLedgerAccount',\r\n                action: (current) => {\r\n                    navigate('subsidiaryLedgerAccountUpdate', {\r\n                        id: current.id\r\n                    });\r\n                }\r\n            },\r\n            {\r\n                title: translate('Remove'),\r\n                action: (current) => {\r\n                    confirm(\r\n                        translate('Remove Subsidiary ledger account'),\r\n                        translate('Are you sure ?'))\r\n                        .then(()=> {\r\n                            subsidiaryLedgerAccountApi.remove(current.id)\r\n                                .then(()=> {\r\n                                    logger.success();\r\n                                    $scope.gridOption.refresh();\r\n                                })\r\n                                .catch((errors)=> $scope.errors = errors);\r\n                        });\r\n\r\n                }\r\n            }\r\n        ],\r\n        readUrl: subsidiaryLedgerAccountApi.url.getAll(generalLedgerAccountId)\r\n    };\r\n\r\n    $scope.create = ()=> {\r\n        navigate('subsidiaryLedgerAccountCreate', {\r\n            generalLedgerAccountId: generalLedgerAccountId\r\n        });\r\n    }\r\n}\r\n\r\naccModule\r\n    .controller('subsidiaryLedgerAccountsController', subsidiaryLedgerAccountsController);",
    "import accModule from '../acc.module';\r\n\r\nfunction alertTag() {\r\n    let alertType = {\r\n        warning: {icon: 'warning-sign'},\r\n        success: {icon: 'ok-sign'},\r\n        danger: {icon: 'remove-sign'},\r\n        info: {icon: 'info=sign'}\r\n    }\r\n    return {\r\n        restrict: 'E',\r\n        template: '<div class=\"alert alert-{{type}}\" role=\"alert\" style=\"margin-top: 10px\"' +\r\n        'ng-if=\"show\">' +\r\n        '<span class=\"glyphicon glyphicon-{{icon}}\"></span>' +\r\n        '<label>{{text}}</label>' +\r\n        '</div>',\r\n        scope: {\r\n            show: '='\r\n        },\r\n        link: function (scope, element, attrs) {\r\n            scope.text = attrs.text;\r\n            scope.type = attrs.type;\r\n            scope.icon = alertType[scope.type].icon;\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagAlert', alertTag);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction blockUi() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/blockUi.html',\r\n        transclude: true,\r\n        link: function (scope, element, attrs) {\r\n\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagBlockUi', blockUi);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction button() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/button-template.html',\r\n        replace: true,\r\n        scope: {\r\n            isWaiting: '=',\r\n            icon: '@',\r\n            styleType: '@',\r\n            title: '@'\r\n        },\r\n        link: function (scope, element, attrs) {\r\n\r\n        }\r\n    };\r\n}\r\n\r\n\r\naccModule.directive('devTagButton', button);",
    "import Chart from 'chart.js';\r\nimport Collection from 'dev.collection';\r\n\r\nexport default function () {\r\n    return {\r\n        restrict: 'E',\r\n        template: '<canvas width=\"400\" height=\"400\"></canvas>',\r\n        replace: true,\r\n        link: (scope, element, attrs) => {\r\n            let ctx = element,\r\n                colors = [\r\n                    '#07f3a4',\r\n                    '#98f3d4',\r\n                    '#e0f3ec',\r\n                    '#ff6384',\r\n                    '#eaadba',\r\n                    '#f5dae0',\r\n                    '#ffce56',\r\n                    '#f7e4b7',\r\n                    '#f3ead6',\r\n                    '#36a2eb',\r\n                    '#88c0e6',\r\n                    '#b3d8f1'\r\n                ],\r\n                labels = eval(`scope.${attrs.kLabels}`),\r\n                usableColors = new Collection(colors)\r\n                    .asEnumerable()\r\n                    .take(labels.length)\r\n                    .toArray(),\r\n                data = {\r\n                    labels: labels,\r\n                    datasets: [\r\n                        {\r\n                            data: eval(`scope.${attrs.kDataSource}`),\r\n                            backgroundColor: usableColors,\r\n                            hoverBackgroundColor: usableColors\r\n                        }\r\n                    ]\r\n                },\r\n                chart = new Chart(ctx, {\r\n                    type: 'doughnut',\r\n                    data: data,\r\n                    //options: options\r\n                });\r\n        }\r\n    }\r\n}",
    "import accModule from '../acc.module';\r\n\r\nfunction checkBox() {\r\n\r\n    return {\r\n        transclude: true,\r\n        restrict: 'E',\r\n        require: 'ngModel',\r\n        templateUrl: 'partials/templates/checkbox-template.html',\r\n        link: (scope, element, attrs, ngModel) => {\r\n            let $element = $(element),\r\n                icheckbox = $element.find('.icheckbox_square-green');\r\n\r\n            $element.click(function () {\r\n                scope.$apply(()=> {\r\n                    if(ngModel.$viewValue) {\r\n                        icheckbox.removeClass('checked');\r\n                        ngModel.$setViewValue(false);\r\n                    }\r\n                    else {\r\n                        icheckbox.addClass('checked');\r\n                        ngModel.$setViewValue(true);\r\n                    }\r\n                });\r\n            });\r\n\r\n            ngModel.$render = function () {\r\n                if (ngModel.$viewValue) {\r\n                    icheckbox.addClass(\"checked\");\r\n                } else {\r\n                    icheckbox.removeClass(\"checked\");\r\n                }\r\n            };\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagCheckBox', checkBox);",
    "import accModule from '../acc.module';\r\nimport 'kendo-core';\r\nimport 'kendo-data';\r\nimport 'kendo-list';\r\nimport 'kendo-popup';\r\nimport 'kendo-combobox';\r\n\r\nfunction combobox() {\r\n    return {\r\n        require: 'ngModel',\r\n        restrict: 'E',\r\n        replace: true,\r\n        template: '<input  style=\"width: 100%;\" />',\r\n        link: function (scope, element, attrs, ngModel) {\r\n            let options = {\r\n                placeholder: attrs.kPlaceholder,\r\n                dataTextField: attrs.kDataTextField,\r\n                dataValueField: attrs.kDataValueField,\r\n                valuePrimitive: true,\r\n                filter: \"contains\",\r\n                autoBind: false,\r\n                minLength: 3,\r\n                dataSource: eval(`scope.${attrs.kDataSource}`),\r\n                select: function (e) {\r\n                    let dataItem = this.dataItem(e.item.index());\r\n                    ngModel.$setViewValue(dataItem[scope.dataValueField]);\r\n                    if (scope[attrs.kOnChanged])\r\n                        scope[attrs.kOnChanged](dataItem);\r\n\r\n                    scope.$apply();\r\n                },\r\n                dataBound: function (e) {\r\n                    if (scope[attrs.kOnDataBound])\r\n                        scope[attrs.kOnDataBound](e);\r\n                }\r\n            };\r\n\r\n            if (attrs.kCascadeFrom){\r\n                options.cascadeFrom = attrs.kCascadeFrom;\r\n                options.cascadeFromField = attrs.kCascadeFrom;\r\n            }\r\n\r\n            let combo = $(element).kendoComboBox(options).data(\"kendoComboBox\");\r\n\r\n            scope.$watch(attrs.ngModel, newValue => {\r\n                combo.value(newValue);\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagComboBox', combobox);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction content() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/content-template.html',\r\n        transclude: true,\r\n        replace: true,\r\n        scope: {},\r\n        link: function (scope, element, attrs) {\r\n            let $element = $(element),\r\n                title_template = `<div class=\"ibox-title panel-primary\">\r\n                                    <h5>${attrs.devAttrTitle}</h5>     \r\n                                 </div>`,\r\n                content = $element.children();\r\n\r\n            if ($element.find('.ibox-title').length == 0)\r\n                $element.prepend(title_template);\r\n\r\n            if ($element.find('.ibox-content').length == 0){\r\n                content = $('<div class=\"ibox-content\"></div>').append(content);\r\n                $element.append(content);\r\n            }\r\n\r\n        }\r\n    };\r\n}\r\n\r\naccModule\r\n    .directive('devTagContent', content)\r\n    .directive('devTagContentHeading', function () {\r\n        return {\r\n            restrict: 'E',\r\n            template: `<div class=\"ibox-title panel-primary\" ng-transclude></div>`,\r\n            transclude: true,\r\n            replace: true\r\n        };\r\n    })\r\n    .directive('devTagContentBody', function () {\r\n        return {\r\n            restrict: 'E',\r\n            template: `<div class=\"ibox-content\" ng-transclude></div>`,\r\n            transclude: true,\r\n            replace: true\r\n        };\r\n    })\r\n    .directive('devTagContentFooter', function () {\r\n        return {\r\n            restrict: 'E',\r\n            template: `<div class=\"ibox-footer\" ng-transclude></div>`,\r\n            transclude: true,\r\n            replace: true\r\n        };\r\n    });\r\n",
    "\"use strict\";\r\n\r\nexport function contentCover(){\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/content-cover.html',\r\n        scope: false,\r\n        transclude: true,\r\n        replace: true,\r\n        link:  (scope, element, attrs) => {\r\n\r\n        }\r\n    };\r\n}\r\n\r\nexport function contentCoverForm(){\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/content-cover-form.html',\r\n        scope: false,\r\n        transclude: true,\r\n        replace: true,\r\n        link:  (scope, element, attrs) => {\r\n\r\n        }\r\n    };\r\n}\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\n\r\nfunction customValidator() {\r\n    return {\r\n        restrict: 'A',\r\n        require: 'ngModel',\r\n        link: function (scope, element, attr, ctrl) {\r\n\r\n            function customValidator(ngModelValue) {\r\n                if (ngModelValue == 0)\r\n                    ctrl.$setValidity('notZero', false);\r\n                else\r\n                    ctrl.$setValidity('notZero', true);\r\n\r\n                return ngModelValue;\r\n            }\r\n\r\n            ctrl.$parsers.push(customValidator);\r\n        }\r\n    }\r\n}\r\n\r\naccModule.directive('notZero', customValidator);",
    "import accModule from '../acc.module';\r\n\r\nfunction datepicker() {\r\n    return {\r\n        require: 'ngModel',\r\n        restrict: 'E',\r\n        template: '<adm-dtp ng-model=\"ngModel\"></adm-dtp>',\r\n        scope: {ngModel: '='}\r\n    };\r\n}\r\n\r\naccModule.directive('devTagDatepicker', datepicker);",
    "import $ from 'jquery';\r\nimport accModule from '../acc.module';\r\nimport 'kendo-core';\r\nimport 'kendo-data';\r\nimport 'kendo-list';\r\nimport 'kendo-popup';\r\nimport 'kendo-dropdownlist';\r\n\r\nfunction dropdownlist($timeout) {\r\n    return {\r\n        restrict: 'E',\r\n        require: 'ngModel',\r\n        template: '<select></select>',\r\n        replace: true,\r\n        link: function (scope, element, attrs, ngModel) {\r\n            $timeout(() => {\r\n                let option = {\r\n                    dataSource: scope[attrs.kDataSource],\r\n                    change(e){\r\n                        let item = e.sender.dataItem(),\r\n                        value = (attrs.kDataValueField && attrs.kDataValueField != '')\r\n                            ? item[attrs.kDataValueField]\r\n                            : item;\r\n\r\n                        scope.$apply(() => {\r\n                            ngModel.$setViewValue(value);\r\n\r\n                            if (scope[attrs.kOnChanged])\r\n                                scope[attrs.kOnChanged](item);\r\n                        });\r\n                    }\r\n                };\r\n\r\n                if (attrs.kOptionLabel && attrs.kOptionLabel != '')\r\n                    option.optionLabel = attrs.kOptionLabel;\r\n\r\n                if (attrs.kDataTextField && attrs.kDataTextField != '')\r\n                    option.dataTextField = attrs.kDataTextField;\r\n\r\n                if (attrs.kDataValueField && attrs.kDataValueField != '')\r\n                    option.dataValueField = attrs.kDataValueField;\r\n\r\n                let dropdown = $(element).kendoDropDownList(option)\r\n                    .data('kendoDropDownList');\r\n\r\n                scope.$watch(attrs.ngModel, newValue => dropdown.value(newValue));\r\n            });\r\n\r\n\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagDropdownlist', dropdownlist);",
    "import accModule from '../acc.module';\r\n\r\naccModule.directive('focusMe', function ($timeout, $parse) {\r\n    return {\r\n        link: function (scope, element, attrs) {\r\n            var model = $parse(attrs.focusMe);\r\n            scope.$watch(model, function (value) {\r\n                console.log('value=', value);\r\n                if (value === true) {\r\n                    $timeout(function () {\r\n                        element[0].focus();\r\n                    }, 3000);\r\n                }\r\n            });\r\n            element.bind('blur', function () {\r\n                console.log('blur')\r\n                model.assign(scope, false);\r\n            })\r\n        }\r\n    };\r\n});\r\n",
    "import Collection from 'dev.collection';\r\nimport Guid from 'dev.guid';\r\nimport 'dataTables';\r\n\r\nexport default function (apiPromise, $timeout) {\r\n    return {\r\n        restrict: 'E',\r\n        transclude: true,\r\n        templateUrl: 'partials/templates/grid-template.html',\r\n        scope: {\r\n            option: '=',\r\n            detailOption: '=',\r\n            onCurrentChanged: '&'\r\n        },\r\n        link: (scope, element, attrs) => {\r\n            let extra = scope.option.extra || null;\r\n\r\n            let option = scope.option;\r\n            scope.gridId = Guid.new();\r\n\r\n\r\n            scope.columns = scope.option.columns;\r\n            scope.grid = {\r\n                sortable: (option.sortable == undefined) ? true : option.sortable,\r\n                filterable: (option.filterable == undefined) ? true : option.filterable,\r\n                selectable: option.selectable\r\n            };\r\n            scope.data = [];\r\n            scope.total = 0;\r\n            scope.pageOption = {};\r\n            scope.isWaiting = false;\r\n            scope.pageable = (option.pageable == undefined)\r\n                ? true\r\n                : option.pageable;\r\n\r\n            let commands = scope.option.commands;\r\n\r\n            if (commands && commands.length > 0)\r\n                scope.columns.push({commands});\r\n\r\n            scope.current = false;\r\n            scope.select = current => {\r\n                if (!option.selectable)\r\n                    return;\r\n                scope.current = current;\r\n                scope.onCurrentChanged({current});\r\n            };\r\n            scope.option.refresh = () => scope.pageOption.refresh();\r\n            scope.option.addItem = newItem => scope.data.unshift(newItem);\r\n            scope.option.removeItem = item => Collection.remove(scope.data, item);\r\n\r\n            function fetch(page) {\r\n                if (!option.readUrl) return;\r\n\r\n                parameters = angular.extend({}, parameters, page);\r\n\r\n                scope.isWaiting = true;\r\n\r\n                apiPromise.get(option.readUrl, parameters)\r\n                    .then(result => {\r\n                        let data = result.data;\r\n\r\n                        if (option.mapper)\r\n                            data.forEach(scope.option.mapper);\r\n\r\n                        if (scope.detailTemplate)\r\n                            data.forEach(item => item.expanded = false);\r\n\r\n                        scope.data = data;\r\n                        scope.total = result.total;\r\n                        scope.aggregates = result.aggregates;\r\n\r\n                        let selector = `#${scope.gridId}`;\r\n                        let table;\r\n\r\n                        if ($.fn.dataTable.isDataTable(selector)) {\r\n                            table = $(selector).DataTable();\r\n                        }\r\n                        else {\r\n                            table = $(selector).DataTable({\r\n                                responsive: true,\r\n                                \"scrollY\": scope.option.gridSize || '500px',\r\n                                paging: false,\r\n                                searching: false,\r\n                                ordering: false,\r\n                                \"bInfo\": false\r\n                            });\r\n                        }\r\n\r\n                        $timeout(() => {\r\n                            /* var $table = $('table.scroll'),\r\n                             $bodyCells = $table.find('tbody tr:first').children(),\r\n                             colWidth;\r\n\r\n                             colWidth = $bodyCells.map(function () {\r\n                             return $(this).width();\r\n                             }).get();\r\n\r\n                             // Set the width of thead columns\r\n                             $table.find('thead tr').children().each(function (i, v) {\r\n                             $(v).width(colWidth[i]);\r\n                             });*/\r\n\r\n                            table = $(selector).DataTable();\r\n                        });\r\n\r\n                        scope.isWaiting = false;\r\n                    });\r\n            }\r\n\r\n            scope.fetch = fetch;\r\n\r\n            scope.addFilter = addFilter;\r\n            scope.removeFilter = removeFilter;\r\n            scope.addSort = addSort;\r\n            scope.removeSort = removeSort;\r\n\r\n            let filter = {logic: 'and', filters: []},\r\n                sort = [],\r\n                parameters = {filter, sort, extra};\r\n\r\n            function addFilter(filterParam) {\r\n                let filters = filter.filters;\r\n\r\n                let sameFieldFilters = new Collection(filters).asEnumerable()\r\n                    .where(f => f.field == filterParam.field)\r\n                    .toArray();\r\n\r\n                sameFieldFilters.forEach(f => Collection.remove(filters, f));\r\n\r\n                filters.push(filterParam);\r\n\r\n                scope.pageOption.reset();\r\n            }\r\n\r\n            function removeFilter(field) {\r\n                let filters = filter.filters;\r\n\r\n                let sameFieldFilters = new Collection(filters).asEnumerable()\r\n                    .where(f => f.field == field)\r\n                    .toArray();\r\n\r\n                sameFieldFilters.forEach(f => Collection.remove(filters, f));\r\n\r\n                scope.pageOption.reset();\r\n            }\r\n\r\n            function addSort(sortParam) {\r\n                sort.push(sortParam);\r\n                scope.pageOption.reset();\r\n            }\r\n\r\n            function removeSort() {\r\n                Collection.removeAll(sort);\r\n                scope.columns.forEach(c => c.removeSort && c.removeSort());\r\n            }\r\n\r\n            function checkHasDetail() {\r\n                let detailTemplate = $(element).find('dev-tag-grid-detail').html();\r\n                if (!detailTemplate) return;\r\n\r\n                scope.detailTemplate = detailTemplate;\r\n                scope.expand = item => item.expanded = !item.expanded;\r\n\r\n                $(element).find('dev-tag-grid-detail').remove();\r\n            }\r\n\r\n            checkHasDetail();\r\n\r\n            scope.$watch('option.readUrl', () =>\r\n            scope.pageOption.reset && scope.pageOption.reset());\r\n\r\n            // if (scope.option.gridSize)\r\n            //     $(element).find('tbody').css('height', scope.option.gridSize);\r\n        }\r\n    }\r\n}\r\n\r\n",
    "\r\nexport default function () {\r\n    return{\r\n        restrict: 'E',\r\n        transclude: true,\r\n        templateUrl: 'partials/templates/grid-editable-template.html',\r\n        scope: {\r\n            data: '=devAttrData',\r\n            columns: '=devAttrColumns',\r\n            defaultItem: '=devAttrDefaultItem'\r\n        },\r\n        link:(scope, element, attrs)=> {\r\n            let defaultItem = angular.extend({}, scope.defaultItem);\r\n\r\n            scope.changeValue = (item)=> {\r\n                scope.data.push(item);\r\n                scope.defaultItem = angular.extend({}, defaultItem);\r\n            };\r\n        }\r\n    }\r\n}\r\n",
    "\r\nexport default function () {\r\n    return{\r\n        restrict: 'A',\r\n        transclude: true,\r\n        replace: true,\r\n        templateUrl: 'partials/templates/grid-editable-row-template.html',\r\n        scope: {\r\n            columns: '=devAttrColumns',\r\n            item: '=devAttrItem',\r\n            changeValue: '&devAttrChangeValue'\r\n        },\r\n        link:(scope, element, attrs)=> {\r\n\r\n        }\r\n    }\r\n}\r\n\r\n",
    "export default function (gridFilterCellType) {\r\n    return {\r\n        templateUrl: 'partials/templates/grid-filter-template.html',\r\n        restrict: 'E',\r\n        scope: {\r\n            addFilter: '&devAttrAddFilter',\r\n            removeFilter: '&devAttrRemoveFilter',\r\n            column: '=devAttrColumn'\r\n        },\r\n        link: (scope, element, attrs) => {\r\n            let baseTemplate = `<li class=\"divider\"></li>\r\n            <li role=\"menuitem\" style=\"text-align: center\">\r\n                <button ng-click=\"executeFilter($event)\" class=\"btn btn-primary btn-rounded btn-outline\" style=\"display: inline;\">\r\n                    <i class=\"fa fa-check\"></i>\r\n                    {{'Filter'|translate}}\r\n                </button>\r\n\r\n                <button  ng-click=\"remove($event)\" class=\"btn btn-white btn-rounded btn-outline\" style=\"display: inline\">\r\n                    <i class=\"fa fa-times\"></i>\r\n                    {{'Remove filter'|translate}}\r\n                </button>\r\n            </li>`;\r\n\r\n            scope.filterStyle = {};\r\n            scope.dropdownStyle = {};\r\n            scope.filterable = scope.column.filterable == null ? true : scope.column.filterable;\r\n\r\n            scope.filter = {\r\n                field: scope.column.name,\r\n                operator: 'eq',\r\n                value: null\r\n            };\r\n\r\n            scope.status = {\r\n                isOpen: false\r\n            };\r\n\r\n            let cellType = gridFilterCellType[scope.column.type];\r\n            scope.template = cellType.template + baseTemplate;\r\n            scope.items = cellType.data;\r\n            scope.dataSource = cellType.dataSource;\r\n            scope.dropdownStyle = cellType.style;\r\n\r\n            if (scope.column.type == 'string')\r\n                scope.filter.operator = 'contains';\r\n\r\n            scope.executeFilter = (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                scope.status.isOpen = !scope.status.isOpen;\r\n\r\n                scope.addFilter({filter: scope.filter});\r\n                scope.filterStyle = {color: '#18a689'};\r\n            };\r\n\r\n            scope.remove = e => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                scope.status.isOpen = !scope.status.isOpen;\r\n\r\n                if (!scope.filter.field) return;\r\n\r\n                scope.filter.value = null;\r\n                scope.removeFilter({field: scope.filter.field});\r\n                scope.filterStyle = {};\r\n            };\r\n        }\r\n    }\r\n}\r\n",
    "export default function () {\r\n    return {\r\n        template: `<i class=\"fa  pointer\"\r\n                        ng-if=\"sortable\"\r\n                        ng-class=\"{'fa-sort-alpha-asc': sort.dir == '' || sort.dir == 'desc',\r\n                        'fa-sort-alpha-desc': sort.dir == 'asc'}\"\r\n                        style=\"font-size: 15px;\"\r\n                        ng-style=\"sortStyle\"\r\n                        ng-click=\"change()\"></i>`,\r\n        restrict: 'E',\r\n        scope: {\r\n            addSort: '&devAttrAddSort',\r\n            removeSort: '&devAttrRemoveSort',\r\n            column: '=devAttrColumn'\r\n        },\r\n        link: (scope, element, attrs) => {\r\n            let field = scope.column.name;\r\n\r\n            scope.sort = {field: '', dir: ''};\r\n            scope.sortable = scope.column.sortable == null ? true : scope.column.sortable;\r\n\r\n            scope.change = () => {\r\n                let preDir = '';\r\n\r\n                if (scope.sort.dir == '')\r\n                    preDir = 'asc';\r\n                else preDir = scope.sort.dir == 'asc' ? 'desc' : 'asc';\r\n\r\n\r\n                scope.removeSort();\r\n\r\n                scope.sort.field = field;\r\n                scope.sort.dir = preDir;\r\n\r\n                scope.sortStyle = {color: '#18a689'};\r\n\r\n                scope.addSort({sort: scope.sort});\r\n            };\r\n\r\n            scope.column.removeSort = () => {\r\n                scope.sort = {field: '', dir: ''};\r\n                scope.sortStyle = {};\r\n            };\r\n        }\r\n    }\r\n}\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalSearchParameters(dimensionCategoryApi) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/journal-search-parameters.html',\r\n        scope: {\r\n            searchParameters: '=',\r\n            removeParameters: '&'\r\n        },\r\n        link: function (scope, element, attrs) {\r\n            scope.dimensionCategorie = [];\r\n\r\n            dimensionCategoryApi.getAllLookup()\r\n                .then((result)=> scope.dimensionCategories = result.data);\r\n\r\n            scope.remove = (e)=> {\r\n                e.preventDefault();\r\n                scope.removeParameters();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\naccModule.directive('devTagJournalSearchParameters', journalSearchParameters);",
    "import $ from 'jquery';\r\nimport accModule from '../acc.module';\r\n\r\nfunction header(currentService, devConstants) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/header-template.html',\r\n        replace: true,\r\n        scope: true,\r\n        link: function (scope, element, attrs) {\r\n            scope.currentUser = localStorage.getItem('currentUser');\r\n\r\n            let current = currentService.get();\r\n\r\n            scope.current = {\r\n                branch: current.branch,\r\n                mode: devConstants.enums.AccMode().getDisplay(current.mode),\r\n                fiscalPeriod: current.fiscalPeriod\r\n            };\r\n\r\n            $(element).find('.dropdown')\r\n            $('input').click(function () {\r\n                $('.dropdown').addClass('open');\r\n                $('.dropdown').addClass('test-class');\r\n            });\r\n\r\n            scope.$on('mode-changed', (e, mode) => {\r\n                currentService.setMode(mode.key);\r\n                scope.current.mode = mode.display;\r\n            });\r\n\r\n            scope.$on('fiscal-period-changed', (e, fiscalPeriod) => {\r\n                currentService.setFiscalPeriod(fiscalPeriod.id);\r\n                scope.current.period = fiscalPeriod.display;\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction togglemenu() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/togglemenu-template.html',\r\n        replace: true,\r\n        scope: {\r\n            menuitems: '=',\r\n            toggleobservable: '='\r\n        },\r\n        transclude: true,\r\n        link: function (scope, element, attrs) {\r\n            $(\"#menu-toggle\").click(function (e) {\r\n                e.preventDefault();\r\n                $(\"#wrapper\").toggleClass(\"toggled\");\r\n            });\r\n\r\n            createMenu(scope.menuitems, element);\r\n        }\r\n    }\r\n}\r\n\r\nfunction createMenu(menuItems, element) {\r\n    menuItems.forEach(function (item) {\r\n        var $el = $(element).find('.gw-nav');\r\n        var icon = item.icon || 'file';\r\n\r\n        var li = $('<li class=\"init-arrow-down\"></li>');\r\n        li.append('<a href=\"{0}\"></a>'.format(item.url));\r\n        li.find('a').append('<span class=\"webfont-menu\" aria-hidden=\"true\">' +\r\n            '<span class=\"glyphicon glyphicon-{0}\"></span>'.format(icon) +\r\n            '</span>'.format(icon));\r\n\r\n        li.find('a').append('<span class=\"gw=menu-text\">{0}</span>'.format(item.title));\r\n\r\n        if (item.children.length > 0) {\r\n            li.find('a').append('<b class=\"gw-arrow icon-arrow-up8\"></b>');\r\n            li.append('<ul class=\"gw-submenu\"></ul>');\r\n\r\n            item.children.forEach(function (child) {\r\n                var liChild = $('<li></li>');\r\n                var icon = child.icon || 'file';\r\n\r\n                liChild.append('<a href=\"{0}\"></a>'.format(child.url));\r\n                /* liChild.find('a')\r\n                 .append('<span class=\"webfont-submenu glyphicon glyphicon-{0}\"></span>'\r\n                 .format(icon));*/\r\n\r\n                liChild.find('a').append(child.title);\r\n\r\n                li.find('ul').append(liChild);\r\n            });\r\n        }\r\n        ;\r\n\r\n        $el.append(li);\r\n    });\r\n\r\n    menuCreateExpandAndActiveBehavior($(element));\r\n}\r\n\r\nfunction menuCreateExpandAndActiveBehavior($element) {\r\n    var $ele = function (selector) {\r\n        return $element.find(selector);\r\n    };\r\n\r\n    $ele('.gw-nav > li > a').click(function (e) {\r\n        var hrefAttr = $(this).attr('href');\r\n        if (hrefAttr == undefined || hrefAttr == null || hrefAttr == '')\r\n            e.preventDefault();\r\n\r\n        var gw_nav = $ele('.gw-nav');\r\n        gw_nav.find('li').removeClass('active');\r\n        $ele('.gw-nav > li > ul > li').removeClass('active');\r\n\r\n        var checkElement = $(this).parent();\r\n        var ulDom = checkElement.find('.gw-submenu')[0];\r\n\r\n        if (ulDom == undefined) {\r\n            checkElement.addClass('active');\r\n            $ele('.gw-nav').find('li').find('ul:visible').slideUp();\r\n            return;\r\n        }\r\n        if (ulDom.style.display != 'block') {\r\n            gw_nav.find('li').find('ul:visible').slideUp();\r\n            gw_nav.find('li.init-arrow-up').removeClass('init-arrow-up').addClass('arrow-down');\r\n            gw_nav.find('li.arrow-up').removeClass('arrow-up').addClass('arrow-down');\r\n            checkElement.removeClass('init-arrow-down');\r\n            checkElement.removeClass('arrow-down');\r\n            checkElement.addClass('arrow-up');\r\n            checkElement.addClass('active');\r\n            checkElement.find('ul').slideDown(300);\r\n        } else {\r\n            checkElement.removeClass('init-arrow-up');\r\n            checkElement.removeClass('arrow-up');\r\n            checkElement.removeClass('active');\r\n            checkElement.addClass('arrow-down');\r\n            checkElement.find('ul').slideUp(300);\r\n\r\n        }\r\n    });\r\n    $('.gw-nav > li > ul > li > a').click(function () {\r\n        $ele(this).parent().parent().removeClass('active');\r\n        $ele('.gw-nav > li > ul > li').removeClass('active');\r\n        $(this).parent().addClass('active')\r\n    });\r\n};\r\n\r\naccModule\r\n    .directive('devTagHeader', header)\r\n    .directive('devTagTogglemenu', togglemenu);\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\nimport 'kendo-core';\r\nimport 'kendo-data';\r\nimport 'kendo-list';\r\nimport 'kendo-popup';\r\nimport 'kendo-multiselect';\r\n\r\nlet translate = JSON.parse(localStorage.getItem('translate')),\r\n    create = translate['Create'],\r\n    tag = translate['Tag'];\r\n\r\nfunction multiSelect($window) {\r\n    return {\r\n        require: 'ngModel',\r\n        restrict: 'E',\r\n        replace: true,\r\n        template: '<select style=\"width: 100%\"></select>',\r\n        link: function (scope, element, attrs, ngModel) {\r\n\r\n            let hasNoDataTemplate = attrs.hasOwnProperty('showNoDataTemplate');\r\n\r\n            $window.addValue = function (widgetId, value) {\r\n                var dataSource = scope[attrs.kDataSource];\r\n                dataSource.add({title: value});\r\n                scope[attrs.onCreated](value)\r\n                    .then(result => {\r\n                        multiSelect.value(multiSelect.value().concat([result.id]));\r\n                        ngModel.$setViewValue(multiSelect.value());\r\n                    });\r\n            };\r\n\r\n            let template = `<div>\r\n                <button class=\"btn btn-primary\" \r\n                onclick=\"addValue('#: instance.element[0].id #', '#: instance.input.val() #')\">\r\n                    <i class=\"fa fa-plus\"></i>\r\n                    ${create} \"#: instance.input.val() #\"\r\n                </button>\r\n                </div>`;\r\n\r\n            let options = {\r\n                    placeholder: attrs.kPlaceholder,\r\n                    dataTextField: attrs.kDataTextField,\r\n                    dataValueField: attrs.kDataValueField,\r\n                    valuePrimitive: true,\r\n                    filter: \"contains\",\r\n                    autoBind: false,\r\n                    minLength: 3,\r\n                    dataSource: scope[attrs.kDataSource],\r\n                    noDataTemplate: hasNoDataTemplate ? template : null,\r\n                    select: function (e) {\r\n                        let dataItem = e.dataItem,\r\n                            model = ngModel.$viewValue || [];\r\n\r\n                        model.push(dataItem[attrs.kDataValueField]);\r\n                        ngModel.$setViewValue(model);\r\n\r\n                        if (scope[attrs.kOnChanged])\r\n                            scope[attrs.kOnChanged](dataItem);\r\n\r\n                        scope.$apply();\r\n                    },\r\n                    deselect: function (e) {\r\n                        let dataItem = e.dataItem,\r\n                            model = ngModel.$viewValue || [];\r\n\r\n                        Collection.remove(model, dataItem[attrs.kDataValueField]);\r\n                        ngModel.$setViewValue(model);\r\n\r\n                        if (scope[attrs.kOnChanged])\r\n                            scope[attrs.kOnChanged](dataItem);\r\n\r\n                        scope.$apply();\r\n                    }\r\n                },\r\n                multiSelect = $(element).kendoMultiSelect(options).data(\"kendoMultiSelect\");\r\n\r\n            scope.$watch(attrs.ngModel, newValue => {\r\n                multiSelect.value(newValue);\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagMultiSelect', multiSelect);\r\n\r\n",
    "\r\n export default  function($compile) {\r\n    return {\r\n        restrict: 'A',\r\n        link: function(scope, element, attrs) {\r\n            scope.$watch(attrs.ngHtmlCompile, function(newValue, oldValue) {\r\n                element.html(newValue);\r\n                $compile(element.contents())(scope);\r\n            });\r\n        }\r\n    }\r\n};\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction NgKendoGrid($compile) {\r\n    return {\r\n        restrict: 'E',\r\n        transclude: true,\r\n        template: '<div kendo-grid options=\"kGridOptions\" ng-transclude></div>',\r\n        scope: {\r\n            kOptions: '='\r\n        },\r\n        link: (scope, element, attrs)=> {\r\n            scope.kGridOptions = scope.kOptions;\r\n        },\r\n        compile: (tElem, tAttrs)=> {\r\n\r\n\r\n            return {\r\n                pre: (scope, element, attrs)=> {\r\n\r\n\r\n                    let template = $(element).find('.col').html();\r\n                    let result = $compile(template)(scope);\r\n                    scope.kGridOptions = scope.kOptions;\r\n\r\n                },\r\n                post: (scope, element, attrs)=> {\r\n\r\n                    let grid = $(element).find('div').data(\"kendoGrid\");\r\n                }\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n}\r\n\r\naccModule.directive('devTagNgKendoGrid', NgKendoGrid);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction numeric() {\r\n    return {\r\n        restrict: 'E',\r\n        template: '<input type=\"number\" class=\"form-control\" /> ',\r\n        replace: true\r\n    }\r\n}\r\n\r\naccModule.directive('devTagNumeric', numeric);",
    "\r\nexport default function () {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/paging-template.html',\r\n        replace: true,\r\n        scope: {\r\n            'setPage': '&devAttrSetPage',\r\n            'total': '=devAttrTotal',\r\n            'option': '=devAttrOption'\r\n        },\r\n        link: (scope, element, attrs) => {\r\n            scope.currentPage = 1;\r\n            scope.pageSizes = [10, 20, 50, 100];\r\n            scope.pageSize = 20;\r\n\r\n            scope.change = () => {\r\n                let page = {\r\n                    skip: (scope.currentPage - 1 ) * scope.pageSize,\r\n                    take: scope.pageSize\r\n                };\r\n                scope.setPage({page});\r\n            };\r\n\r\n            scope.option.reset = () => {\r\n                scope.currentPage = 1;\r\n                scope.change();\r\n            };\r\n\r\n            scope.option.refresh = scope.change;\r\n\r\n            scope.$watch('pageSize', ()=> scope.option.reset());\r\n\r\n            scope.change();\r\n        }\r\n    }\r\n}\r\n",
    "import $ from 'jquery';\r\n\r\nexport default function (devConstants) {\r\n    return {\r\n        restrict: 'E',\r\n        template: '<div></div>',\r\n        replace: true,\r\n        scope: {\r\n            kDataSource: '='\r\n        },\r\n        link: (scope, element, attrs) => {\r\n            $(element).kendoPanelBar({\r\n                dataSource: new kendo.data.HierarchicalDataSource({\r\n                    data: devConstants.reports\r\n                })\r\n            });\r\n        }\r\n    }\r\n}",
    "import accModule from '../acc.module';\r\n\r\nfunction radio() {\r\n\r\n    return {\r\n        transclude: true,\r\n        restrict: 'E',\r\n        require: 'ngModel',\r\n        replace: true,\r\n        template: `<div class=\"iradio_square-green\" style=\"position: relative;\"><span ng-transclude></span></div>`,\r\n        link: (scope, element, attrs, ngModel) => {\r\n            let $element = $(element),\r\n                iradio = $element.find('.iradio_square-green');\r\n\r\n            $element.attr('k-value', attrs.kValue);\r\n\r\n            $element.click(function () {\r\n                let value = $element.attr('k-value');\r\n                scope.$apply(() => ngModel.$setViewValue(value));\r\n            });\r\n\r\n\r\n            /*$element.find('input').val(attrs.devAttrValue);\r\n             $element.find('input').attr('ng-model', attrs.ngModel);\r\n\r\n             $element.iCheck({\r\n             checkboxClass: 'icheckbox_square-green',\r\n             radioClass: 'iradio_square-green'\r\n             });\r\n\r\n             $element.on('ifChanged', e => {\r\n             ngModel.$setViewValue(e.target.value);\r\n             scope.$apply();\r\n             });\r\n\r\n             ngModel.$render = function () {\r\n             if (ngModel.$viewValue) {\r\n             $element.find('.iradio_square-green').addClass(\"checked\");\r\n             } else {\r\n             $element.find('.iradio_square-green').removeClass(\"checked\");\r\n             }\r\n             };*/\r\n\r\n            /*scope.$watch(attrs.ngModel, newValue => {\r\n             if(newValue)\r\n             $element.find('.icheckbox_square-green').addClass('checked');\r\n             else\r\n             $element.find('.icheckbox_square-green').removeClass('checked');\r\n             });*/\r\n\r\n            /*return $timeout(function() {\r\n             var value;\r\n             value = $attrs['value'];\r\n\r\n             $scope.$watch($attrs['ngModel'], newValue =>{\r\n             $(element).iCheck('update');\r\n             });\r\n\r\n             $(element).iCheck({\r\n             checkboxClass: 'icheckbox_square-green',\r\n             radioClass: 'iradio_square-green'\r\n\r\n             }).on('ifChanged', function(e) {\r\n             if ($(element).attr('type') === 'checkbox' && $attrs['ngModel']) {\r\n             $scope.$apply(function() {\r\n             return ngModel.$setViewValue(e.target.checked);\r\n             });\r\n             }\r\n             if ($(element).attr('type') === 'radio' && $attrs['ngModel']) {\r\n             return $scope.$apply(function() {\r\n             return ngModel.$setViewValue(value);\r\n             });\r\n             }\r\n             });\r\n             });*/\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagRadio', radio);",
    "import accModule from '../acc.module';\r\nimport {addVariable} from '../utilities/stimulsoft';\r\n\r\n\r\nfunction reportDesigner(currentService, reportApi) {\r\n    return {\r\n        restrict: 'E',\r\n        template: '<div id=\"contentDesigner\" style=\"direction: ltr\"></div>',\r\n        scope: {\r\n            reportData: '=',\r\n            reportFileName: '@',\r\n            reportDataSourceName: '@',\r\n            reportTitle: '@'\r\n        },\r\n        link: (scope, element, attrs) => {\r\n            let report = new Stimulsoft.Report.StiReport(),\r\n                designer = new Stimulsoft.Designer.StiDesigner(null, 'StiDesigner', false),\r\n                current = currentService.get(),\r\n                data = {};\r\n\r\n            if (scope.reportFileName)\r\n                report.loadFile(`/luca/client/reportFiles/${scope.reportFileName}`);\r\n\r\n            designer.renderHtml(\"contentDesigner\");\r\n\r\n            designer.onSaveReport = e => {\r\n                e.preventDefault = true;\r\n\r\n                let jsonReport = e.report.saveToJsonString();\r\n                reportApi.save({fileName: e.fileName, data: jsonReport});\r\n            };\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'today',\r\n                alias: 'Today',\r\n                category: 'general',\r\n                value: '1395/01/01',\r\n            }));\r\n\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'currentUser',\r\n                alias: 'Current user',\r\n                category: 'general',\r\n                value: current.user.name\r\n            }));\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'branchLogo',\r\n                alias: 'Branch Logo',\r\n                category: \"general\",\r\n                value: current.branch.logo\r\n            }));\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'branchTitle',\r\n                alias: 'Branch title',\r\n                category: \"general\",\r\n                value: current.branch.title\r\n            }));\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'reportTitle',\r\n                alias: 'Report title',\r\n                category: \"general\",\r\n                value: scope.reportTitle\r\n            }));\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'reportParameters',\r\n                alias: 'Report parameters',\r\n                category: \"general\",\r\n                value: scope.reportParameters\r\n            }));\r\n\r\n            data[scope.reportDataSourceName] = scope.reportData;\r\n\r\n            report.regData(\"data\", \"data\", data);\r\n            report.dictionary.synchronize();\r\n            designer.report = report;\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagReportDesigner', reportDesigner);",
    "import accModule from '../acc.module';\r\nimport Guid from 'dev.guid';\r\nimport {viewerConfig, addVariable, addTranslates} from '../utilities/stimulsoft';\r\n\r\nlet config = viewerConfig();\r\n\r\n\r\nfunction reportViewer(currentService) {\r\n    return {\r\n        restrict: 'E',\r\n        template: '<div id=\"contentViewer\" style=\"direction: ltr\"></div>',\r\n        scope: {\r\n            reportData: '=',\r\n            reportFileName: '@',\r\n            reportTitle: '@',\r\n            reportParameters: '@',\r\n            reportDataSourceName: '@'\r\n        },\r\n        link: function (scope, element, attrs) {\r\n            let id = Guid.new(),\r\n                data = {},\r\n                current = currentService.get(),\r\n                report = new Stimulsoft.Report.StiReport(),\r\n                viewer = new Stimulsoft.Viewer.StiViewer(config, \"StiViewer\" + id, false);\r\n\r\n            $(element).find('div').attr('id', id);\r\n\r\n            report.loadFile(`/luca/api/reports/file/${scope.reportFileName}`);\r\n            viewer.renderHtml(id);\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'today',\r\n                alias: 'Today',\r\n                category: \"general\",\r\n                value: current.today\r\n            }));\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'currentUser',\r\n                alias: 'Current user',\r\n                category: 'general',\r\n                value: current.user.name\r\n            }));\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'branchLogo',\r\n                alias: 'Branch Logo',\r\n                category: \"general\",\r\n                value: current.branch.logo\r\n            }));\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'branchTitle',\r\n                alias: 'Branch title',\r\n                category: \"general\",\r\n                value: current.branch.name\r\n            }));\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'reportTitle',\r\n                alias: 'Report title',\r\n                category: \"general\",\r\n                value: scope.reportTitle\r\n            }));\r\n\r\n            report.dictionary.variables.add(addVariable({\r\n                name: 'reportParameters',\r\n                alias: 'Report parameters',\r\n                category: \"general\",\r\n                value: scope.reportParameters\r\n            }));\r\n\r\n            addTranslates(report);\r\n\r\n            data[scope.reportDataSourceName] = scope.reportData;\r\n\r\n            report.regData(\"data\", \"data\", data);\r\n            viewer.report = report;\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagReportViewer', reportViewer);",
    "export default function () {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/shell.header-template.html',\r\n        replace: true,\r\n        link: (scope, element, attrs) => {\r\n            scope.toggleSidebar = () =>  scope.$emit('toggle-sidebar');\r\n        }\r\n    }\r\n}\r\n\r\n",
    "\"use strict\";\r\n\r\nexport default function shell($rootScope, menuItems, translate, currentService, $cookies, devConstants, $timeout) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/shell.html',\r\n        //scope: true,\r\n        link: function (scope, element, attrs) {\r\n\r\n            let current = currentService.get();\r\n\r\n            scope.user = current.user;\r\n            scope.branch = current.branch;\r\n            scope.current = current;\r\n\r\n            scope.fiscalPeriodDataSource = {\r\n                type: \"json\",\r\n                serverFiltering: true,\r\n                transport: {\r\n                    read: {\r\n                        url: devConstants.urls.period.all()\r\n                    }\r\n                },\r\n                schema: {\r\n                    data: 'data'\r\n                }\r\n            };\r\n            scope.modes = devConstants.enums.AccMode().data;\r\n\r\n            scope.$watch('current.fiscalPeriod', newValue => currentService.setFiscalPeriod(newValue));\r\n            scope.$watch('current.mode', newValue => currentService.setMode(newValue));\r\n\r\n            $timeout(() => $rootScope.canShowStatusSection = true);\r\n\r\n            $('.collapse-link').click(function () {\r\n                var ibox = $(this).closest('div.ibox');\r\n                var button = $(this).find('i');\r\n                var content = ibox.find('div.ibox-content');\r\n                content.slideToggle(200);\r\n                button.toggleClass('fa-chevron-up').toggleClass('fa-chevron-down');\r\n                ibox.toggleClass('').toggleClass('border-bottom');\r\n                setTimeout(function () {\r\n                    ibox.resize();\r\n                    ibox.find('[id^=map-]').resize();\r\n                }, 50);\r\n            });\r\n\r\n            // Close ibox function\r\n            $('.close-link').click(function () {\r\n                var content = $(this).closest('div.ibox');\r\n                content.remove();\r\n            });\r\n\r\n\r\n            $rootScope.blockUi = {\r\n                isBlocking: false,\r\n                message: translate('Please wait ...'),\r\n                block: (message) => {\r\n                    $rootScope.blockUi.message = message\r\n                        ? message\r\n                        : translate('Please wait ...');\r\n\r\n                    $rootScope.blockUi.isBlocking = true;\r\n                },\r\n                unBlock: () => {\r\n                    $rootScope.blockUi.isBlocking = false;\r\n                }\r\n            }\r\n        }\r\n    };\r\n}",
    "export default function () {\r\n    return {\r\n        restrict: 'E',\r\n        template: `<li>\r\n                <a href=\"/\">\r\n                    <i class=\"{{devIcon}}\"></i>\r\n                    <span class=\"nav-label\">{{devTitle}}</span>\r\n                </a>\r\n            </li>`,\r\n        replace: true,\r\n        transclude: true,\r\n        scope: {\r\n            devHref: '@',\r\n            devIcon: '@',\r\n            devTitle: '@'\r\n        },\r\n        link: (scope, element, attrs, ctrl, transculde) => {\r\n            debugger;\r\n            var x = 1;\r\n            console.log('sadfasd');\r\n        }\r\n    }\r\n}\r\n\r\nexport function sidebarItemChild() {\r\n    return {\r\n        restrict: 'E',\r\n        template: ``,\r\n        replace: true,\r\n        transclude: true,\r\n        scope: {\r\n            devHref: '@',\r\n            devIcon: '@',\r\n            devTitle: '@'\r\n        },\r\n        link: (scope, element, attrs, ctrl, transculde) => {\r\n            debugger;\r\n            var x = 1;\r\n            console.log('sadfasd');\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n",
    "import 'metisMenu';\r\n\r\nexport default function (menuItems, $timeout) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/shell.sidebar-template.html',\r\n        replace: true,\r\n        link: (scope, element, attrs) => {\r\n            scope.items = menuItems;\r\n\r\n            let sideMenu = $(element).find('#side-menu');\r\n\r\n            $timeout(()=> sideMenu.metisMenu());\r\n\r\n            scope.$on('toggle-sidebar', () => {\r\n                $(\"body\").toggleClass(\"mini-navbar\");\r\n                SmoothlyMenu();\r\n            });\r\n\r\n            function SmoothlyMenu() {\r\n                if (!$('body').hasClass('mini-navbar') || $('body').hasClass('body-small')) {\r\n                    // Hide menu in order to smoothly turn on when maximize menu\r\n                    sideMenu.hide();\r\n                    // For smoothly turn on menu\r\n                    setTimeout(\r\n                        function () {\r\n                            sideMenu.fadeIn(500);\r\n                        }, 100);\r\n                } else if ($('body').hasClass('fixed-sidebar')) {\r\n                    sideMenu.hide();\r\n                    setTimeout(\r\n                        function () {\r\n                            sideMenu.fadeIn(500);\r\n                        }, 300);\r\n                } else {\r\n                    // Remove all inline style from jquery fadeIn function to reset menu state\r\n                    sideMenu.removeAttr('style');\r\n                }\r\n            }\r\n        },\r\n        /*compile: (tElem, tAttr) => {\r\n            return {\r\n                pre: (scope, element, attrs) => {\r\n                    scope.items = menuItems;\r\n                },\r\n                post(scope, element, attrs){\r\n                    let ele = tElem;\r\n                    $(element).find('#side-menu').metisMenu();\r\n                }\r\n            }\r\n        }*/\r\n    }\r\n}\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction subContent() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/subContent.html',\r\n        transclude: true,\r\n        replace: true,\r\n        scope: {},\r\n        link: function (scope, element, attrs) {\r\n            scope.title = attrs.title;\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagSubContent', subContent);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction textEditor() {\r\n    return {\r\n        require: 'ngModel',\r\n        restrict: 'E',\r\n        replace: true,\r\n        template: '<textarea class=\"form-control\"></textarea>'\r\n    };\r\n}\r\n\r\nfunction textBox() {\r\n    return {\r\n        require: 'ngModel',\r\n        restrict: 'E',\r\n        replace: true,\r\n        template: '<input type=\"text\" class=\"form-control\"/>'\r\n    };\r\n}\r\n\r\naccModule\r\n    .directive('devTagEditor', textEditor)\r\n    .directive('devTagTextBox', textBox);",
    "import accModule from '../acc.module';\r\n//import $ from 'jquery';\r\n//import 'jquery.filedrop';\r\n\r\nimport Dropzone from 'dropzone';\r\n\r\nfunction uploader() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/uploader.html',\r\n        replace: true,\r\n        scope: {\r\n            before: '&',\r\n            uploaded: '&'\r\n        },\r\n        link: (scope, element, attrs) => {\r\n            let config = {\r\n                    url: '/upload',\r\n                    method: 'post',\r\n                    maxFilesize: 2,\r\n                    clickable: '#upload',\r\n\r\n                },\r\n                dropzone = new Dropzone(element[0], config);\r\n\r\n            dropzone.on('success', function (file, response) {\r\n                scope.uploaded({fileName: response.fullName});\r\n                scope.$apply();\r\n            });\r\n\r\n            dropzone.on('error', function (error) {\r\n                console.log(error);\r\n            });\r\n            /*$(element).filedrop({\r\n             url: '/upload',\r\n             dragOver: ()=> {\r\n             let $elm = $(element).find('.place_drag');\r\n             $elm.addClass('place_drag_uploader');\r\n             $elm.find('.hover_upload_list').addClass('webfont_file');\r\n             },\r\n             dragLeave: ()=> {\r\n             let $elm = $(element).find('.place_drag');\r\n             $elm.removeClass('place_drag_uploader');\r\n             $elm.find('.hover_upload_list').removeClass('webfont_file');\r\n             $elm.find('.place_drag_text1').show();\r\n             },\r\n             uploadStarted: ()=> {\r\n             let $elm = $(element).find('.place_drag');\r\n             $elm.removeClass('place_drag_uploader');\r\n             $elm.find('.hover_upload_list').removeClass('webfont_file');\r\n             $elm.find('.place_drag_text1').hide();\r\n\r\n             $rootScope.blockUi.block();\r\n             scope.$apply();\r\n\r\n             scope.before();\r\n             },\r\n             uploadFinished: (i, file, response, time)=> {\r\n             scope.uploaded(response);\r\n             $rootScope.blockUi.unBlock();\r\n             scope.$apply();\r\n             },\r\n             error: (err, file) => {\r\n             $rootScope.blockUi.unBlock();\r\n             scope.$apply();\r\n\r\n             switch (err) {\r\n             case 'BrowserNotSupported':\r\n             logger.error('browser does not support HTML5 drag and drop');\r\n             break;\r\n             case 'TooManyFiles':\r\n             // user uploaded more than 'maxfiles'\r\n             break;\r\n             case 'FileTooLarge':\r\n             // program encountered a file whose size is greater than 'maxfilesize'\r\n             // FileTooLarge also has access to the file which was too large\r\n             // use file.name to reference the filename of the culprit file\r\n             break;\r\n             case 'FileTypeNotAllowed':\r\n             // The file type is not in the specified list 'allowedfiletypes'\r\n             break;\r\n             case 'FileExtensionNotAllowed':\r\n             // The file extension is not in the specified list 'allowedfileextensions'\r\n             break;\r\n             default:\r\n             break;\r\n             }\r\n             },\r\n             });*/\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagUploader', uploader);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction validationSummary() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'partials/templates/validationSummary.html',\r\n        replace: true,\r\n        scope: {\r\n            errors: '='\r\n        }\r\n    };\r\n}\r\n\r\naccModule.directive('devTagValidationSummary', validationSummary);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction amount() {\r\n    return (input)=> {\r\n        if (!input)\r\n            return '';\r\n\r\n        return kendo.toString(input, 'n0');\r\n    }\r\n}\r\n\r\nfunction digtToWord() {\r\n    return window.digitToWord;\r\n}\r\naccModule.filter('amount', amount);\r\n\r\naccModule.filter('digitToWord', digtToWord)",
    "let isClientTest = ()=> {\r\n    let isClientTest = localStorage.getItem('isClientTest');\r\n\r\n    return isClientTest == null ? false : true;\r\n}\r\n\r\n\r\nlet baseTemplateUrl = ()=> {\r\n    return isClientTest() ? 'partials/' : '';\r\n}\r\n\r\nlet config = {\r\n    isClientTest: isClientTest,\r\n    baseTemplateUrl: baseTemplateUrl\r\n};\r\n\r\nexport default config;",
    "import enums from './enums';\r\nimport urls from './urls';\r\nimport config from './config';\r\nimport accModule from '../acc.module';\r\n\r\nlet reports = JSON.parse(localStorage.getItem('reports'));\r\n\r\nlet devConstants = {\r\n    enums: enums,\r\n    urls: urls,\r\n    config: config,\r\n    reports: reports\r\n};\r\n\r\naccModule.constant('devConstants', devConstants);\r\n\r\nexport default devConstants;",
    "import Collection from 'dev.collection';\r\n\r\nclass Enum {\r\n\r\n    constructor(enums) {\r\n        this.data = enums;\r\n    }\r\n\r\n    getDisplay(key) {\r\n        return new Collection(this.data)\r\n            .asEnumerable()\r\n            .single(e=>e.key == key)\r\n            .display;\r\n    }\r\n\r\n    getKey(name) {\r\n        return new Collection(this.data)\r\n            .asEnumerable()\r\n            .single(e=>e.name == name)\r\n            .key;\r\n    }\r\n\r\n    getKeys() {\r\n        let names = Array.from(arguments);\r\n\r\n        return new Collection(names)\r\n            .asEnumerable()\r\n            .select(name=> this.getKey(name))\r\n            .toArray();\r\n    }\r\n\r\n    get() {\r\n        return this.data;\r\n    }\r\n}\r\n\r\nexport default Enum;",
    "﻿import Enum from './enumType';\r\nlet enums = {};\r\n\r\nenums.AccountPostingType = () => {\r\n    return new Enum([\r\n        {key: 'balanceSheet', display: 'تراز نامه ای'},\r\n        {key: 'benefitAndLoss', display: 'سود و زیانی'},\r\n        {key: 'entezami', display: 'انتظامی'}\r\n    ]);\r\n};\r\n\r\nenums.AccountBalanceType = () => {\r\n    return new Enum([\r\n        {key: 'debit', display: 'بدهکار'},\r\n        {key: 'credit', display: 'بستانکار'}\r\n    ]);\r\n}\r\n\r\nenums.AssignmentStatus = () => {\r\n    return new Enum([\r\n        {key: 'Required', display: 'اجباری است'},\r\n        {key: 'NotRequired', display: 'انتخابی است'},\r\n        {key: 'DoesNotHave', display: 'ندارد'}\r\n    ]);\r\n}\r\n\r\nenums.JournalType = () => {\r\n    return new Enum([\r\n        {key: 'Opening', display: 'افتتاحیه'},\r\n        {key: 'Closing', display: 'اختتامیه'},\r\n        {key: 'FixedAsset', display: 'اموال'},\r\n        {key: 'Payroll', display: 'حقوق'},\r\n        {key: 'Special', display: 'ویژه'}\r\n    ]);\r\n}\r\n\r\nenums.JournalStatus = () => {\r\n    return new Enum([\r\n        {key: 'Temporary', display: 'موقت'},\r\n        {key: 'BookKeeped', display: 'ثبت دفترداری'},\r\n        {key: 'Fixed', display: 'ثبت قطعی'}\r\n    ]);\r\n};\r\n\r\nenums.Active = () => {\r\n    return new Enum([\r\n        {key: true, name: 'showActiveItems', display: 'نمایش فعال ها'},\r\n        {key: false, name: 'showInactiveItems', display: 'نمایش غیر فعال ها'}\r\n    ]);\r\n};\r\n\r\nenums.ChequeCategoryStatus = ()=> {\r\n    return new Enum([\r\n        {key: 'Open', display: 'باز'},\r\n        {key: 'Closed', display: 'بسته'}\r\n    ]);\r\n};\r\n\r\nenums.AccMode = () => {\r\n    return new Enum([\r\n        {key: 'create', display: 'تنظیم اسناد'},\r\n        {key: 'audit', display: 'رسیدگی اسناد'}\r\n    ]);\r\n};\r\n\r\nenums.getMonth = function () {\r\n    return new Enum([\r\n        {key: 1, display: \"فروردین\"},\r\n        {key: 2, display: \"اردیبهشت\"},\r\n        {key: 3, display: \"خرداد\"},\r\n        {key: 4, display: \"تیر\"},\r\n        {key: 5, display: \"مرداد\"},\r\n        {key: 6, display: \"شهریور\"},\r\n        {key: 7, display: \"مهر\"},\r\n        {key: 8, display: \"آبان\"},\r\n        {key: 9, display: \"آذر\"},\r\n        {key: 10, display: \"دی\"},\r\n        {key: 11, display: \"بهمن\"},\r\n        {key: 12, display: \"اسفند\"}\r\n    ]);\r\n};\r\n\r\nexport default enums;\r\n\r\n",
    "let rootUrl = ()=> '/acc/api';\r\n\r\nlet generalLedgerAccount = {\r\n    all: ()=> '{0}/general-ledger-accounts'.format(rootUrl())\r\n};\r\n\r\nlet subsidiaryLedgerAccount = {\r\n    all: ()=> '{0}/subsidiary-ledger-accounts'.format(rootUrl()),\r\n    allByGeneralLedgerAccount: (generalLedgerAccountId)=>\r\n        '{0}/subsidiary-ledger-accounts/general-ledger-account/{1}'\r\n            .format(rootUrl(), generalLedgerAccountId)\r\n};\r\n\r\nlet detailAccount = {\r\n    all: ()=> '{0}/detail-accounts'.format(rootUrl())\r\n};\r\n\r\nlet dimensionCategory = {\r\n    all: ()=> `${rootUrl()}/dimension-categories`\r\n};\r\n\r\nlet dimension = {\r\n    allByCategory: (categoryId)=> '{0}/dimensions/category/{1}'.format(rootUrl(), categoryId)\r\n};\r\n\r\nlet period = {\r\n    all: ()=> '{0}/fiscal-periods'.format(rootUrl())\r\n};\r\n\r\nlet chequeCategory = {\r\n    all: ()=> '{0}/cheque-categories'.format(rootUrl()),\r\n    allOpens: (detailAccountId)=> '{0}/cheque-categories/detail-account/{1}/opens'.format(rootUrl(), detailAccountId)\r\n};\r\n\r\nlet bank = {\r\n    all: ()=> '{0}/banks'.format(rootUrl())\r\n};\r\n\r\nlet cheque = {\r\n    all: (categoryId)=> '{0}/cheques/category/{1}'.format(rootUrl(), categoryId),\r\n    allwhites: (categoryId)=> '{0}/cheques/category/{1}/whites'.format(rootUrl(), categoryId),\r\n    allUseds: ()=> '{0}/cheques/useds'.format(rootUrl())\r\n};\r\n\r\nlet journal = {\r\n    getGroupedByMouth: ()=> '{0}/journals/summary/grouped-by-month'.format(rootUrl()),\r\n    getByMonth: (month)=> '{0}/journals/month/{1}'.format(rootUrl(), month),\r\n    getAllByPeriod: (periodId)=> '{0}/journals/period/{1}'.format(rootUrl(), periodId)\r\n};\r\n\r\nlet journalTemplate = {\r\n    getAll: ()=> '{0}/journal-templates'.format(rootUrl())\r\n};\r\n\r\nlet accountReview = {\r\n    getAllGeneralLedgerAccount: ()=> `${rootUrl()}/account-review/general-ledger-account`,\r\n    getAllSubsidiaryLedgerAccount: ()=> `${rootUrl()}/account-review/subsidiary-ledger-account`,\r\n    getAllDetailAccount: ()=> `${rootUrl()}/account-review/detail-account`,\r\n    getAllDimension1: ()=> `${rootUrl()}/account-review/dimension-1`,\r\n    getAllDimension2: ()=> `${rootUrl()}/account-review/dimension-2`,\r\n    getAllDimension3: ()=> `${rootUrl()}/account-review/dimension-3`,\r\n    getAllTiny: ()=> `${rootUrl()}/account-review/tiny`\r\n};\r\n\r\nlet tag = {\r\n    getAll: ()=> `${rootUrl()}/tags`\r\n};\r\n\r\nlet apiUrls = {\r\n    generalLedgerAccount: generalLedgerAccount,\r\n    subsidiaryLedgerAccount: subsidiaryLedgerAccount,\r\n    detailAccount: detailAccount,\r\n    dimensionCategory: dimensionCategory,\r\n    dimension: dimension,\r\n    period: period,\r\n    chequeCategory: chequeCategory,\r\n    bank: bank,\r\n    cheque: cheque,\r\n    journal: journal,\r\n    journalTemplate: journalTemplate,\r\n    accountReview: accountReview,\r\n    tag: tag\r\n};\r\n\r\nexport default apiUrls;",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction chequeCategoryCreateModalController($scope, $modalInstance, formService, chequeCategoryApi, logger, devConstants) {\r\n    \"use strict\";\r\n\r\n    $scope.errors = [];\r\n    $scope.chequeCategory = {\r\n        bankId: '',\r\n        detailAccountId: null,\r\n        totalPages: null,\r\n        firstPageNumber: null\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        Collection.removeAll($scope.errors);\r\n        $scope.isSaving = true;\r\n\r\n        chequeCategoryApi.create($scope.chequeCategory)\r\n            .then(function (result) {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.lastPageNumber = ()=> {\r\n        let model = $scope.chequeCategory;\r\n\r\n        return (model.firstPageNumber && model.totalPages)\r\n            ? model.firstPageNumber + model.totalPages - 1\r\n            : null\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.bankDataSource = {\r\n        type: 'json',\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.bank.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    }\r\n}\r\n\r\nfunction chequeCategoryCreateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: chequeCategoryCreateModalController,\r\n        templateUrl: 'partials/modals/chequeCategoryCreate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('chequeCategoryCreateModalController', chequeCategoryCreateModalController)\r\n    .factory('chequeCategoryCreateModalService', chequeCategoryCreateModalService);\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction chequeCategoryUpdateModalController($scope, $modalInstance, formService, chequeCategoryApi, logger, data, devConstants) {\r\n    \"use strict\";\r\n\r\n    let id = data.id;\r\n    $scope.errors = [];\r\n    $scope.chequeCategory = {\r\n        bankId: '',\r\n        detailAccountId: null,\r\n        totalPages: null,\r\n        firstPageNumber: null\r\n    }\r\n\r\n    chequeCategoryApi.getById(id)\r\n        .then((result)=> $scope.chequeCategory = result);\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        Collection.removeAll($scope.errors);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        chequeCategoryApi.update($scope.chequeCategory)\r\n            .then(function (result) {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.lastPageNumber = ()=> {\r\n        let model = $scope.chequeCategory;\r\n\r\n        return (model.firstPageNumber && model.totalPages)\r\n            ? model.firstPageNumber + model.totalPages - 1\r\n            : null\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.bankDataSource = {\r\n        type: 'json',\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.bank.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    }\r\n}\r\n\r\nfunction chequeCategoryUpdateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: chequeCategoryUpdateModalController,\r\n        templateUrl: 'partials/modals/chequeCategoryUpdate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('chequeCategoryUpdateModalController', chequeCategoryUpdateModalController)\r\n    .factory('chequeCategoryUpdateModalService', chequeCategoryUpdateModalService);\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction detailAccountCreateModalController($scope, $modalInstance, formService, detailAccountApi, logger) {\r\n    \"use strict\";\r\n\r\n    $scope.errors = [];\r\n    $scope.detailAccount = {\r\n        title: '',\r\n        code: '',\r\n        description: ''\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        Collection.removeAll($scope.errors);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        detailAccountApi.create($scope.detailAccount)\r\n            .then((result) => {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction detailAccountCreateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: detailAccountCreateModalController,\r\n        templateUrl: 'partials/modals/detailAccountCreate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('detailAccountCreateModalController', detailAccountCreateModalController)\r\n    .factory('detailAccountCreateModalService', detailAccountCreateModalService);",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction detailAccountUpdateModalController($scope, $modalInstance, formService, detailAccountApi, logger, data) {\r\n    \"use strict\";\r\n\r\n    let id = data.id;\r\n\r\n    $scope.errors = [];\r\n    detailAccountApi.getById(id)\r\n        .then(result => $scope.detailAccount = result);\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        Collection.removeAll($scope.errors);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        detailAccountApi.update(id, $scope.detailAccount)\r\n            .then((result) => {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors) => $scope.errors = errors)\r\n            .finally(() => $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = () => $modalInstance.dismiss();\r\n}\r\n\r\nfunction detailAccountUpdateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: detailAccountUpdateModalController,\r\n        templateUrl: 'partials/modals/detailAccountUpdate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('detailAccountUpdateModalController', detailAccountUpdateModalController)\r\n    .factory('detailAccountUpdateModalService', detailAccountUpdateModalService);",
    "import accModule from '../acc.module';\r\nimport config from '../localData/config';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction dimensionCreateModalController(data,\r\n                                        $scope, $modalInstance, dimensionApi, formService) {\r\n    \"use strict\";\r\n\r\n    $scope.errors = [];\r\n    $scope.dimension = {\r\n        title: '',\r\n        code: '',\r\n        description: ''\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        Collection.removeAll($scope.errors);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        dimensionApi.create(data.categoryId, $scope.dimension)\r\n            .then(function (result) {\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch(function (errors) {\r\n                $scope.errors = errors;\r\n            }).finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = function () {\r\n        $modalInstance.dismiss();\r\n    };\r\n}\r\n\r\nfunction dimensionCreateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: dimensionCreateModalController,\r\n        templateUrl: 'partials/modals/dimensionCreate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('dimensionCreateModalController', dimensionCreateModalController)\r\n    .factory('dimensionCreateModalService', dimensionCreateModalService);",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction dimensionUpdateModalController(data, $scope, $modalInstance, dimensionApi, formService) {\r\n    \"use strict\";\r\n\r\n    $scope.errors = [];\r\n    $scope.dimension = {\r\n        title: '',\r\n        code: '',\r\n        description: ''\r\n    }\r\n\r\n\r\n    dimensionApi.getById(data.id)\r\n        .then((result)=> $scope.dimension = result);\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        Collection.removeAll($scope.errors);\r\n\r\n        $scope.isSaving = true;\r\n\r\n\r\n        dimensionApi.update(data.id, $scope.dimension)\r\n            .then(function (result) {\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction dimensionUpdateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: dimensionUpdateModalController,\r\n        templateUrl: 'partials/modals/dimensionUpdate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('dimensionUpdateModalController', dimensionUpdateModalController)\r\n    .factory('dimensionUpdateModalService', dimensionUpdateModalService);",
    "import accModule from '../acc.module';\r\nimport devConstants from '../localData/devConstants';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction generalLedgerAccountCreateModalController($scope, $modalInstance, generalLedgerAccountApi, logger, formService) {\r\n\r\n    $scope.errors = [];\r\n    $scope.generalLedgerAccount = {\r\n        title: '',\r\n        code: '',\r\n        postingType: null,\r\n        balanceType: null,\r\n        description: ''\r\n    }\r\n\r\n    $scope.isSaving = false;\r\n    $scope.save = function (form) {\r\n        if (form.$invalid) {\r\n            formService.setDirty(form);\r\n            return;\r\n        }\r\n\r\n        Collection.removeAll($scope.errors);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        generalLedgerAccountApi.create($scope.generalLedgerAccount)\r\n            .then(function (result) {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = function () {\r\n        $modalInstance.dismiss();\r\n    };\r\n\r\n    $scope.accountPostingType = devConstants.enums.AccountPostingType();\r\n    $scope.accountBalanceType = devConstants.enums.AccountBalanceType();\r\n}\r\n\r\nfunction generalLedgerAccountCreateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: generalLedgerAccountCreateModalController,\r\n        templateUrl: 'partials/modals/generalLedgerAccountCreate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('generalLedgerAccountCreateModalController', generalLedgerAccountCreateModalController)\r\n    .factory('generalLedgerAccountCreateModalService', generalLedgerAccountCreateModalService);\r\n\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\nimport devConstants from '../localData/devConstants';\r\nimport config from '../localData/config';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction generalLedgerAccountUpdateModalController($scope,\r\n                                                   $modalInstance,\r\n                                                   data,\r\n                                                   generalLedgerAccountApi,\r\n                                                   logger, formService) {\r\n\r\n    $scope.errors = [];\r\n    $scope.generalLedgerAccount = {\r\n        title: '',\r\n        code: '',\r\n        postingType: null,\r\n        balanceType: null,\r\n        description: ''\r\n    };\r\n\r\n    generalLedgerAccountApi.getById(data.id)\r\n        .then(function (result) {\r\n            $scope.generalLedgerAccount = result;\r\n        });\r\n\r\n    $scope.isSaving = false;\r\n    $scope.save = function (form) {\r\n\r\n        if (form.$invalid) {\r\n            formService.setDirty(form);\r\n            return;\r\n        }\r\n\r\n        Collection.removeAll($scope.errors);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        generalLedgerAccountApi.update(data.id, $scope.generalLedgerAccount)\r\n            .then(function (result) {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch(function (errors) {\r\n                $scope.errors = errors;\r\n            })\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.activate = function () {\r\n        if ($scope.generalLedgerAccount.isActive)\r\n            return;\r\n\r\n        generalLedgerAccountApi.activate($scope.generalLedgerAccount.id)\r\n            .then(function () {\r\n                $scope.generalLedgerAccount.isActive = true;\r\n                logger.success();\r\n            })\r\n            .catch(function () {\r\n                $scope.errors = err.errors;\r\n            })\r\n    }\r\n\r\n    $scope.deactivate = function () {\r\n        if (!$scope.generalLedgerAccount.isActive)\r\n            return;\r\n\r\n        generalLedgerAccountApi.deactivate($scope.generalLedgerAccount.id)\r\n            .then(function () {\r\n                $scope.generalLedgerAccount.isActive = false;\r\n                logger.success();\r\n            })\r\n            .catch(function () {\r\n                $scope.errors = err.errors;\r\n            })\r\n    }\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n\r\n    $scope.accountPostingType = devConstants.enums.AccountPostingType();\r\n    $scope.accountBalanceType = devConstants.enums.AccountBalanceType();\r\n}\r\n\r\nfunction generalLedgerAccountUpdateModalService(modalBase) {\r\n    return modalBase({\r\n        controller: generalLedgerAccountUpdateModalController,\r\n        templateUrl: 'partials/modals/generalLedgerAccountUpdate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller(\r\n        'generalLedgerAccountUpdateModalController',\r\n        generalLedgerAccountUpdateModalController)\r\n    .factory(\r\n        'generalLedgerAccountUpdateModalService',\r\n        generalLedgerAccountUpdateModalService);\r\n\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction journalAdvancedSearchModalController($scope, $modalInstance, translate, devConstants,\r\n                                              dimensionCategoryApi) {\r\n    $scope.journalSearch = {\r\n        title: '',\r\n        minNumber: null,\r\n        maxNumber: null,\r\n        minDate: null,\r\n        maxDate: null,\r\n        generalLedgerAccounts: [],\r\n        subsidiaryLedgerAccounts: [], //combination of generalLedgerAccount and subsidiaryLedgerAccount\r\n        detailAccounts: [],\r\n        dimension1s: [],\r\n        dimension2s: [],\r\n        dimension3s: [],\r\n        dimension4s: [],\r\n        chequeNumbers: [],\r\n        minChequeDate: null,\r\n        maxChequeDate: null,\r\n        chequeDescription: '',\r\n        amount: {\r\n            value: null,\r\n            operator: null,\r\n        },\r\n        isNotPeriodIncluded: false\r\n    };\r\n\r\n    $scope.amountOperators = [\r\n        {key: 'eq ', display: translate('Equal to')},\r\n        {key: 'gte', display: translate(\"Greater than or equal to\")},\r\n        {key: 'gt ', display: translate(\"Greater than\")},\r\n        {key: 'lte', display: translate(\"Less than or equal to\")},\r\n        {key: 'lt ', display: translate(\"Less than\")}\r\n    ];\r\n\r\n    $scope.execute = () => {\r\n        let result = {\r\n            resolve: resolveFilter,\r\n            data: $scope.journalSearch\r\n        };\r\n\r\n        $modalInstance.close(result);\r\n    };\r\n\r\n    $scope.close = () => $modalInstance.dismiss();\r\n\r\n    $scope.generalLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.generalLedgerAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.subsidiaryLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.subsidiaryLedgerAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.dimension1DataSource = {};\r\n    $scope.dimension2DataSource = {};\r\n    $scope.dimension3DataSource = {};\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result) => {\r\n            let cats = result.data;\r\n            $scope.dimensionCategories = cats;\r\n\r\n            $scope.dimension1DataSource = dimensionOptionFactory(cats[0].id);\r\n            $scope.dimension2DataSource = dimensionOptionFactory(cats[1].id);\r\n            $scope.dimension3DataSource = dimensionOptionFactory(cats[2].id);\r\n        });\r\n\r\n    function dimensionOptionFactory(categoryId) {\r\n        return {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: devConstants.urls.dimension.allByCategory(categoryId)\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        };\r\n    }\r\n\r\n    $scope.chequeDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.cheque.allUseds()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    function resolveFilter(filterData) {\r\n\r\n        let instance = angular.extend({}, filterData);\r\n\r\n        instance.generalLedgerAccounts = new Collection(filterData.generalLedgerAccounts)\r\n            .asEnumerable()\r\n            .select((g) => g.id)\r\n            .toArray();\r\n\r\n        instance.subsidiaryLedgerAccounts = new Collection(filterData.subsidiaryLedgerAccounts)\r\n            .asEnumerable()\r\n            .select((s) => s.id)\r\n            .toArray();\r\n\r\n        instance.detailAccounts = new Collection(filterData.detailAccounts)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.dimension1s = new Collection(filterData.dimension2s)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.dimension2s = new Collection(filterData.dimension2s)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.dimension3s = new Collection(filterData.dimension3s)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.dimension4s = new Collection(filterData.dimension4s)\r\n            .asEnumerable()\r\n            .select((d) => d.id)\r\n            .toArray();\r\n\r\n        instance.chequeNumbers = new Collection(filterData.chequeNumbers)\r\n            .asEnumerable()\r\n            .select((c) => c.id)\r\n            .toArray();\r\n\r\n\r\n        return instance;\r\n    }\r\n}\r\n\r\nfunction journalAdvancedSearchModalService(modalBase) {\r\n    return modalBase({\r\n        controller: journalAdvancedSearchModalController,\r\n        templateUrl: 'partials/modals/journalAdvancedSearch.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalAdvancedSearchModalController', journalAdvancedSearchModalController)\r\n    .factory('journalAdvancedSearchModalService', journalAdvancedSearchModalService);\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalAttachImageController($scope, $modalInstance, data, journalApi) {\r\n\r\n    let journalId = data.id;\r\n    let errors = $scope.errors = [];\r\n\r\n    $scope.uploaded = (fileName)=> {\r\n        journalApi.attachImage(journalId, {fileName: fileName})\r\n            .then(()=> $modalInstance.close(fileName))\r\n            .catch((err)=> errors = err);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction journalAttachImageService(modalBase) {\r\n    return modalBase({\r\n        controller: journalAttachImageController,\r\n        templateUrl: 'partials/modals/journalAttachImage.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalAttachImageController', journalAttachImageController)\r\n    .factory('journalAttachImageService', journalAttachImageService);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction journalBookkeepingController($scope, $modalInstance, formService,\r\n                                      data, journalApi) {\r\n\r\n    let journalId = data.id;\r\n\r\n    $scope.errors = [];\r\n    $scope.bookkeeping = {\r\n        number: null,\r\n        date: ''\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        journalApi.bookkeeping(journalId, $scope.bookkeeping)\r\n            .then((result)=> $modalInstance.close())\r\n            .catch((errors)=> $scope.errors = errors)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction journalBookkeepingService(modalBase) {\r\n    return modalBase({\r\n        controller: journalBookkeepingController,\r\n        templateUrl: 'partials/modals/journalBookkeeping.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalBookkeepingController', journalBookkeepingController)\r\n    .factory('journalBookkeepingService', journalBookkeepingService);\r\n\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction journalCreateModalController($scope, $modalInstance, journalApi, logger, formService) {\r\n\r\n    $scope.errors = [];\r\n    $scope.journal = {\r\n        temporaryNumber: null,\r\n        temporaryDate: null,\r\n        description: ''\r\n    };\r\n\r\n    $scope.isDefaultNumberAndDate = false;\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = function (form) {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        Collection.removeAll($scope.errors);\r\n\r\n        $scope.isSaving = true;\r\n\r\n        if ($scope.isDefaultNumberAndDate) {\r\n            $scope.journal.temporaryNumber = null;\r\n            $scope.journal.temporaryDate = null;\r\n        }\r\n\r\n        journalApi.create($scope.journal)\r\n            .then((result) => {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch((errors) => {\r\n                $scope.errors = errors;\r\n            })\r\n            .finally(() => $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = () => $modalInstance.dismiss();\r\n}\r\n\r\nfunction journalCreateModalControllerService(modalBase) {\r\n    return modalBase({\r\n        controller: journalCreateModalController,\r\n        templateUrl: 'partials/modals/journalCreate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalCreateModalController', journalCreateModalController)\r\n    .factory('journalCreateModalControllerService', journalCreateModalControllerService);\r\n\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction journalLineCreateOrUpdateController($scope, $modalInstance, $timeout, formService, $q,\r\n                                             journalLineApi, dimensionCategoryApi, logger, devConstants, data) {\r\n\r\n    let journalId = data.journalId;\r\n    let id = data.id;\r\n    let editMode = $scope.editMode = id == undefined ? 'create' : 'update';\r\n\r\n    $scope.generalLedgerAccountShouldBeFocus = true;\r\n\r\n    $scope.errors = [];\r\n    $scope.dimensionCategories = [];\r\n    $scope.journalLine = {\r\n        generalLedgerAccountId: null,\r\n        subsidiaryLedgerAccountId: null,\r\n        detailAccountId: null,\r\n        dimension1Id: null,\r\n        dimension2Id: null,\r\n        dimension3Id: null,\r\n        article: '',\r\n        amount: null,\r\n        balanceType: ''\r\n    };\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.dimension1DataSource = null;\r\n    $scope.dimension2DataSource = null;\r\n    $scope.dimension3DataSource = null;\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then((result) => {\r\n            let cats = result.data;\r\n            $scope.dimensionCategories = cats;\r\n\r\n            $scope.dimension1DataSource = dimensionDataSourceFactory(cats[0].id);\r\n            $scope.dimension2DataSource = dimensionDataSourceFactory(cats[1].id);\r\n            $scope.dimension3DataSource = dimensionDataSourceFactory(cats[2].id);\r\n        });\r\n\r\n    if (editMode == 'update')\r\n        journalLineApi.getById(id)\r\n            .then((result) => {\r\n                result.amount = 0;\r\n                result.balanceType = '';\r\n\r\n                if (result.creditor > 0) {\r\n                    result.amount = result.creditor;\r\n                    result.balanceType = 'creditor';\r\n                }\r\n\r\n                if (result.debtor > 0) {\r\n                    result.amount = result.debtor;\r\n                    result.balanceType = 'debtor';\r\n                }\r\n\r\n                $scope.journalLine = result\r\n            });\r\n\r\n    let resetForm = (form) => {\r\n\r\n        $scope.journalLine = {\r\n            generalLedgerAccountId: null,\r\n            subsidiaryLedgerAccount: null,\r\n            detailAccountId: null,\r\n            description: '',\r\n            amount: null,\r\n            balanceType: ''\r\n        };\r\n\r\n        $timeout(() => formService.setClean(form), 100);\r\n\r\n        $scope.generalLedgerAccountShouldBeFocus = true;\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    let save = (form) => {\r\n        let deferred = $q.defer();\r\n\r\n        function execute() {\r\n            if (form.$invalid) {\r\n                formService.setDirty(form);\r\n                deferred.reject();\r\n                return;\r\n            }\r\n\r\n            $scope.isSaving = true;\r\n\r\n            if (editMode == 'create')\r\n                journalLineApi.create(journalId, $scope.journalLine)\r\n                    .then(result => {\r\n                        deferred.resolve(result);\r\n                        logger.success();\r\n                    })\r\n                    .catch((errors) => {\r\n                        $scope.errors = errors;\r\n                        deferred.reject();\r\n                    })\r\n                    .finally(() => {\r\n                        $scope.isSaving = false;\r\n                        deferred.resolve();\r\n                    });\r\n\r\n            if (editMode == 'update')\r\n                journalLineApi.update(id, $scope.journalLine)\r\n                    .then(result => {\r\n                        deferred.resolve(result);\r\n                        logger.success();\r\n                    })\r\n                    .catch((errors) => {\r\n                        $scope.errors = errors;\r\n                        deferred.reject();\r\n                    })\r\n                    .finally(() => $scope.isSaving = false);\r\n        }\r\n\r\n        $timeout(execute, 0);\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    $scope.saveAndNew = (form) => {\r\n        save(form)\r\n            .then(() => resetForm(form));\r\n    };\r\n\r\n    $scope.saveAndReturn = (form) => {\r\n        save(form)\r\n            .then((result) => $modalInstance.close(result));\r\n    };\r\n\r\n    $scope.generalLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.generalLedgerAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.generalLedgerAccountOnChange = (current) => {\r\n        $scope.journalLine.subsidiaryLedgerAccountId = null;\r\n\r\n        $scope.journalLine.detailAccount = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n        $scope.journalLine.dimension1 = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n        $scope.journalLine.dimension2 = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n        $scope.journalLine.dimension3 = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n        $scope.journalLine.detailAccount = {\r\n            canShow: false,\r\n            isRequired: false\r\n        };\r\n    };\r\n\r\n    $scope.subsidiaryLedgerAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: (filter) => {\r\n                    let generalLegerAccountId = new Collection(filter.filter.filters)\r\n                        .asEnumerable()\r\n                        .first(f => f.field == 'generalLedgerAccountId')\r\n                        .value;\r\n\r\n                    return devConstants.urls\r\n                        .subsidiaryLedgerAccount\r\n                        .allByGeneralLedgerAccount(generalLegerAccountId)\r\n                }\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    $scope.subsidiaryLedgerAccountSelect = (current) => {\r\n        let item = current;\r\n\r\n        if (!item) {\r\n            $scope.journalLine.detailAccount = {\r\n                canShow: false,\r\n                isRequired: false\r\n            };\r\n            $scope.journalLine.dimension1 = {\r\n                canShow: false,\r\n                isRequired: false\r\n            };\r\n            $scope.journalLine.dimension2 = {\r\n                canShow: false,\r\n                isRequired: false\r\n            };\r\n            $scope.journalLine.dimension3 = {\r\n                canShow: false,\r\n                isRequired: false\r\n            };\r\n\r\n            return;\r\n        }\r\n\r\n        $scope.journalLine.detailAccount = {\r\n            canShow: new Collection(['Required', 'NotRequired']).asEnumerable().contains(item.detailAccountAssignmentStatus),\r\n            isRequired: item.detailAccountAssignmentStatus == 'Required'\r\n        };\r\n\r\n        $scope.journalLine.dimension1 = {\r\n            canShow: new Collection(['Required', 'NotRequired']).asEnumerable().contains(item.dimension1AssignmentStatus),\r\n            isRequired: item.dimension1AssignmentStatus == 'Required'\r\n        };\r\n\r\n        $scope.journalLine.dimension2 = {\r\n            canShow: new Collection(['Required', 'NotRequired']).asEnumerable().contains(item.dimension2AssignmentStatus),\r\n            isRequired: item.dimension2AssignmentStatus == 'Required'\r\n        };\r\n\r\n        $scope.journalLine.dimension3 = {\r\n            canShow: new Collection(['Required', 'NotRequired']).asEnumerable().contains(item.dimension3AssignmentStatus),\r\n            isRequired: item.dimension3AssignmentStatus == 'Required'\r\n        };\r\n    };\r\n\r\n    $scope.subsidiaryLedgerAccountDataBound = (e) => e.sender.trigger('change');\r\n\r\n    $scope.detailAccountDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: devConstants.urls.detailAccount.all()\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n\r\n    let dimensionDataSourceFactory = (categoryId) => {\r\n        return {\r\n            type: \"json\",\r\n            serverFiltering: true,\r\n            transport: {\r\n                read: {\r\n                    url: devConstants.urls.dimension.allByCategory(categoryId)\r\n                }\r\n            },\r\n            schema: {\r\n                data: 'data'\r\n            }\r\n        }\r\n    };\r\n\r\n    $scope.changeAmountBalance = () =>\r\n        $scope.journalLine.balanceType = $scope.journalLine.balanceType == 'debtor'\r\n            ? 'creditor'\r\n            : 'debtor';\r\n\r\n    $scope.close = () => $modalInstance.dismiss();\r\n}\r\n\r\nfunction journalLineCreateOrUpdateControllerModalService(modalBase) {\r\n    return modalBase({\r\n        controller: journalLineCreateOrUpdateController,\r\n        templateUrl: 'partials/modals/journalLineCreateOrUpdate.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('journalLineCreateController', journalLineCreateOrUpdateController)\r\n    .factory('journalLineCreateControllerModalService', journalLineCreateOrUpdateControllerModalService);\r\n\r\naccModule\r\n    .controller('journalLineUpdateController', journalLineCreateOrUpdateController)\r\n    .factory('journalLineUpdateControllerModalService', journalLineCreateOrUpdateControllerModalService);\r\n\r\n\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction showJournalDetailController($scope, translate, $modalInstance, journalApi, journalLineApi, data) {\r\n    \"use strict\";\r\n\r\n    let id = data.id;\r\n    $scope.journal = {};\r\n\r\n    function fetch() {\r\n        journalApi.getById(id)\r\n            .then((result)=> $scope.journal = result);\r\n    }\r\n\r\n    fetch();\r\n\r\n    $scope.gridOption = {\r\n        columns: [\r\n            {name: 'row', title: '#', width: '60px', type: 'number', filterable: false, sortable: false},\r\n            {\r\n                name: 'generalLedgerAccountId',\r\n                title: translate('General ledger account'),\r\n                type: 'generalLedgerAccount',\r\n                template: '{{item.generalLedgerAccountCode}}',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'subsidiaryLedgerAccountId',\r\n                title: translate('Subsidiary ledger account'),\r\n                type: 'subsidiaryLedgerAccount',\r\n                template: '{{item.subsidiaryLedgerAccountCode}}',\r\n                width: '100px'\r\n            },\r\n            {\r\n                name: 'detailAccountId',\r\n                title: translate('Detail account'),\r\n                type: 'detailAccount',\r\n                template: '{{item.detailAccountCode}}',\r\n                width: '120px'\r\n            },\r\n            {\r\n                name: 'article', title: translate('Article'), width: '200px', type: 'string',\r\n                template: '<span title=\"{{item.article}}\">{{item.article}}</span>'\r\n            },\r\n            {\r\n                name: 'debtor', title: translate('Debtor'), width: '120px', type: 'number', template: '{{item.debtor|number}}',\r\n                aggregates: ['sum'],\r\n                footerTemplate: '{{aggregates.debtor.sum | number}}'\r\n            },\r\n            {\r\n                name: 'creditor', title: translate('Creditor'), width: '120px', type: 'number', template: '{{item.creditor|number}}',\r\n                aggregates: ['sum'],\r\n                footerTemplate: '{{aggregates.creditor.sum | number}}'\r\n            }\r\n        ],\r\n        commands: [],\r\n        gridSize: '300px',\r\n        readUrl: journalLineApi.url.getAll(id)\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n}\r\n\r\nfunction showJournalDetailModalService(modalBase) {\r\n    return modalBase({\r\n        controller: showJournalDetailController,\r\n        templateUrl: 'partials/modals/showJournalDetail.html',\r\n        size: 'lg'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('showJournalDetailController', showJournalDetailController)\r\n    .factory('showJournalDetailModalService', showJournalDetailModalService);\r\n\r\n",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction subsidiaryLedgerAccountEntryModalController($scope, $modalInstance,\r\n                                                     dimensionCategoryApi, subsidiaryLedgerAccountApi,\r\n                                                     logger, formService, data, devConstants) {\r\n\r\n    $scope.errors = [];\r\n    $scope.editMode = data.editMode;\r\n    $scope.generalLedgerAccount = data.generalLedgerAccount;\r\n    $scope.assignmentStatus = devConstants.enums.AssignmentStatus().data;\r\n\r\n    $scope.subsidiaryLedgerAccount = {\r\n        code: '',\r\n        title: '',\r\n        detailAccountAssignmentStatus: null,\r\n        isBankAccount: false,\r\n        dimension1AssignmentStatus: null,\r\n        dimension2AssignmentStatus: null,\r\n        dimension3AssignmentStatus: null,\r\n    };\r\n\r\n    if (data.editMode == 'edit')\r\n        subsidiaryLedgerAccountApi.getById(data.subsidiaryLedgerAccountId)\r\n            .then(result => $scope.subsidiaryLedgerAccount = result);\r\n\r\n    $scope.dimensionCategories = [];\r\n\r\n    dimensionCategoryApi.getAll()\r\n        .then(result => $scope.dimensionCategories = result.data);\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = form => {\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        Collection.removeAll($scope.errors);\r\n        $scope.isSaving = true;\r\n\r\n        if (data.editMode == 'edit')\r\n            subsidiaryLedgerAccountApi.update(\r\n                $scope.subsidiaryLedgerAccount.id,\r\n                $scope.subsidiaryLedgerAccount)\r\n                .then(() => {\r\n                    logger.success();\r\n                    $modalInstance.close();\r\n                })\r\n                .catch(errors => $scope.errors = errors)\r\n                .finally(() => $scope.isSaving = false);\r\n\r\n        subsidiaryLedgerAccountApi.create(\r\n            data.generalLedgerAccount.id,\r\n            $scope.subsidiaryLedgerAccount)\r\n            .then(result => {\r\n                logger.success();\r\n                $modalInstance.close(result);\r\n            })\r\n            .catch(errors => $scope.errors = errors)\r\n            .finally(() => $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = () => $modalInstance.dismiss();\r\n\r\n}\r\n\r\nfunction subsidiaryLedgerAccountEntryModalService(modalBase) {\r\n    return modalBase({\r\n        controller: subsidiaryLedgerAccountEntryModalController,\r\n        templateUrl: 'partials/modals/subsidiaryLedgerAccountEntry.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('subsidiaryLedgerAccountEntryModalController', subsidiaryLedgerAccountEntryModalController)\r\n    .factory('subsidiaryLedgerAccountEntryModalService', subsidiaryLedgerAccountEntryModalService);\r\n\r\n\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction writeChequeOnJournalLineEntryController($scope,\r\n                                                 chequeApi, chequeCategoryApi, data, $timeout,\r\n                                                 formService, $modalInstance, devConstants) {\r\n    $scope.errors = [];\r\n    $scope.cheque = {\r\n        journalLineId: data.journalLineId,\r\n        detailAccountDisplay: data.detailAccountDisplay,\r\n        chequeId: null,\r\n        amount: data.amount,\r\n        date: data.date,\r\n        description: data.description\r\n    };\r\n\r\n    $scope.openChequeCategories = [];\r\n    $scope.selectedChequeCategory = false;\r\n    $scope.hasOpenChequeCategories = true;\r\n\r\n    chequeCategoryApi.getOpens(data.detailAccountId)\r\n        .then((result)=> {\r\n            $scope.openChequeCategories = result;\r\n            if (result.length == 0)\r\n                $scope.hasOpenChequeCategories = false;\r\n        });\r\n\r\n    $scope.selectChequeCategory = (cat)=> {\r\n        $scope.selectedChequeCategory = false;\r\n        $scope.whiteChequesDataSource.transport.read.url = devConstants.urls.cheque.allwhites(cat.id);\r\n\r\n        $timeout(()=> $scope.selectedChequeCategory = cat, 1);\r\n    };\r\n\r\n    $scope.isSaving = false;\r\n\r\n    $scope.save = (form)=> {\r\n        if (!$scope.hasOpenChequeCategories)\r\n            return;\r\n        if (form.$invalid)\r\n            return formService.setDirty(form);\r\n\r\n        $scope.isSaving = true;\r\n        chequeApi.write($scope.cheque.chequeId, $scope.cheque)\r\n            .then((result)=> $modalInstance.close(result))\r\n            .catch((result)=> $scope.errors = result)\r\n            .finally(()=> $scope.isSaving = false);\r\n    };\r\n\r\n    $scope.close = ()=> $modalInstance.dismiss();\r\n\r\n    $scope.whiteChequesDataSource = {\r\n        type: \"json\",\r\n        serverFiltering: true,\r\n        transport: {\r\n            read: {\r\n                url: null\r\n            }\r\n        },\r\n        schema: {\r\n            data: 'data'\r\n        }\r\n    };\r\n}\r\n\r\nfunction writeChequeOnJournalLineEntryService(modalBase) {\r\n    return modalBase({\r\n        controller: writeChequeOnJournalLineEntryController,\r\n        templateUrl: 'partials/modals/writeChequeOnJournalLineEntry.html'\r\n    });\r\n}\r\n\r\naccModule\r\n    .controller('writeChequeOnJournalLineEntryController', writeChequeOnJournalLineEntryController)\r\n    .factory('writeChequeOnJournalLineEntryService', writeChequeOnJournalLineEntryService);",
    "import accModule from '../acc.module';\r\n\r\nfunction apiPromise($http, $q) {\r\n\r\n    function promise($httpPromise) {\r\n        var deferred = $q.defer();\r\n\r\n        $httpPromise\r\n            .success(function (result) {\r\n                if (result.isValid) {\r\n                    deferred.resolve(result.returnValue);\r\n                }\r\n                else {\r\n                    deferred.reject(result.errors)\r\n                }\r\n            })\r\n            .error(function (error) {\r\n                console.error(error);\r\n                deferred.reject(['Internal Error']);\r\n            });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    return {\r\n        get: function (url, data) {\r\n            var deferred = $q.defer();\r\n\r\n            $http.get(url, {params: data, paramSerializer: '$httpParamSerializerJQLike'})\r\n                .success(function (result) {\r\n                    deferred.resolve(result);\r\n                })\r\n                .error(function (error) {\r\n                    console.error(error);\r\n                    deferred.reject(['Internal Error']);\r\n                });\r\n\r\n            return deferred.promise;\r\n        },\r\n        post: function (url, data) {\r\n            return promise($http.post(url, data));\r\n        },\r\n        put: function (url, data) {\r\n            return promise($http.put(url, data));\r\n        },\r\n        delete: function (url, data) {\r\n            return promise($http.delete(url, data));\r\n        }\r\n    };\r\n}\r\n\r\naccModule.factory('apiPromise', apiPromise)",
    "import swal from 'bootstrap-sweetalert';\r\nimport accModule from '../acc.module';\r\n\r\nfunction confirm(translate, $q) {\r\n\r\n    return (message, title, type)=> {\r\n        let deferred = $q.defer();\r\n\r\n        swal({\r\n            title: title,\r\n            text: message,\r\n            type: type || \"warning\",\r\n            showCancelButton: true,\r\n            cancelButtonText: translate('No'),\r\n            confirmButtonText: translate('Yes')\r\n        }, (isConfirm)=> {\r\n            if (isConfirm) deferred.resolve();\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n}\r\n\r\naccModule.factory('confirm', confirm);\r\n",
    "\"use strict\";\r\n\r\nexport default class currentService {\r\n    constructor($cookies) {\r\n        this.current = {\r\n            today: null,\r\n            fiscalPeriod: null,\r\n            mode: null,\r\n            branch: null,\r\n            user: JSON.parse(localStorage.getItem('currentUser'))\r\n        };\r\n\r\n        this.$cookies = $cookies;\r\n    }\r\n\r\n    setToday(today){\r\n        this.current.today = today;\r\n    }\r\n\r\n    setFiscalPeriod(fiscalPeriodId) {\r\n        this.$cookies.put('current-period', fiscalPeriodId);\r\n        this.current.fiscalPeriod = fiscalPeriodId == 0 ? null : fiscalPeriodId;\r\n    }\r\n\r\n    setMode(mode) {\r\n        this.$cookies.put('current-mode', mode);\r\n        this.current.mode = mode;\r\n    }\r\n\r\n    setBranch(branch) {\r\n        this.current.branch = branch;\r\n    }\r\n\r\n    get() {\r\n        return this.current;\r\n    }\r\n}",
    "import accModule from '../acc.module';\r\n\r\nfunction formService() {\r\n\r\n    function setDirty(form) {\r\n        angular.forEach(form.$error, function (type) {\r\n            angular.forEach(type, function (field) {\r\n                field.$setDirty();\r\n            });\r\n        });\r\n        return form;\r\n    }\r\n\r\n    function setClean(form) {\r\n        angular.forEach(form.$error, function (type) {\r\n            angular.forEach(type, function (field) {\r\n                field.$setPristine();\r\n            });\r\n        });\r\n    }\r\n\r\n    return {\r\n        setDirty: setDirty,\r\n        setClean: setClean\r\n    }\r\n}\r\n\r\naccModule.service('formService', formService);",
    "import accModule from '../acc.module';\r\nlet translation = JSON.parse(localStorage.getItem('translate'));\r\n\r\nfunction gridFilterCellTypeProvider() {\r\n    var type = {\r\n        string: {\r\n            operator: \"contains\",\r\n            template: `<input class=\"form-control\" type=\"text\" ng-model=\"filter.value\"/>`\r\n        },\r\n        number: {\r\n            operator: \"eq\",\r\n            data: [\r\n                {key: 'eq', display: translation['Equal to']},\r\n                {key: 'gte', display: translation['Greater than or equal to']},\r\n                {key: 'gt', display: translation['Greater than']},\r\n                {key: 'lte', display: translation['Less than or equal to']},\r\n                {key: 'lt', display: translation['Less than']}\r\n            ],\r\n            template: `<li>\r\n                <dev-tag-numeric ng-model=\"filter.value\"></dev-tag-numeric>\r\n            </li>\r\n            <li>\r\n                <dev-tag-dropdownlist\r\n                    k-data-text-field=\"display\"\r\n                    k-data-value-field=\"key\"\r\n                    k-data-source=\"items\"\r\n                    ng-model=\"filter.operator\"></dev-tag-dropdownlist>\r\n            </li>`\r\n        },\r\n        date: {\r\n            template: `<li>\r\n                <dev-tag-datepicker ng-model=\"filter.value\"></dev-tag-datepicker>\r\n            </li>`\r\n        },\r\n        boolean: {\r\n            template: `<li>\r\n                <dev-tag-check-box ng-model=\"filter.value\"></dev-tag-check-box>\r\n            </li>`\r\n        }\r\n    };\r\n\r\n    function combo(option) {\r\n        return {\r\n            showOperators: false,\r\n            operator: \"eq\",\r\n            template: function (args) {\r\n                args.element.kendoComboBox({\r\n                    placeholder: '...',\r\n                    dataTextField: option.text,\r\n                    dataValueField: option.value,\r\n                    valuePrimitive: true,\r\n                    filter: \"contains\",\r\n                    autoBind: false,\r\n                    minLength: 2,\r\n                    dataSource: {\r\n                        type: \"json\",\r\n                        serverFiltering: true,\r\n                        transport: {\r\n                            read: {\r\n                                url: option.url\r\n                            },\r\n                            parameterMap: function (options) {\r\n                                return kendo.stringify(options);\r\n                            }\r\n                        },\r\n                        schema: {\r\n                            parse: function (response) {\r\n                                return response.data;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    function dropdown(option) {\r\n        return {\r\n            showOperators: false,\r\n            operator: \"eq\",\r\n            template: function (args) {\r\n                args.element.kendoDropDownList({\r\n                    dataTextField: option.text,\r\n                    dataValueField: option.value,\r\n                    filter: \"contains\",\r\n                    autoBind: false,\r\n                    minLength: 2,\r\n                    dataSource: option.data,\r\n                    valuePrimitive: true\r\n                });\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    this.control = {\r\n        combo: combo,\r\n        dropdown: dropdown\r\n    };\r\n\r\n    this.$get = function () {\r\n        return type;\r\n    };\r\n\r\n    this.set = function (extendedObject) {\r\n        type = angular.extend(type, extendedObject);\r\n    }\r\n}\r\n\r\naccModule.provider('gridFilterCellType', gridFilterCellTypeProvider);\r\n\r\n",
    "import swal from 'bootstrap-sweetalert';\r\nimport accModule from '../acc.module';\r\n\r\nfunction logger(translate) {\r\n    return {\r\n        success: function (message) {\r\n            swal({\r\n                title: translate('Successful'),\r\n                text: message || translate('Done successfully'),\r\n                type: 'success',\r\n                timer: 2000,\r\n                confirmButtonText: translate('OK')\r\n            });\r\n        },\r\n        info: function (message) {\r\n            swal({\r\n                title: translate('Info'),\r\n                text: message,\r\n                type: 'info',\r\n                timer: 2000,\r\n                confirmButtonText: translate('OK')\r\n            });\r\n        },\r\n        warning: function (message) {\r\n            swal({\r\n                title: translate('Warning'),\r\n                text: message,\r\n                type: 'warning',\r\n                timer: 2000,\r\n                confirmButtonText: translate('OK')\r\n            });\r\n        },\r\n        error: function (message) {\r\n            swal({\r\n                title: translate('Error'),\r\n                text: message,\r\n                type: 'error',\r\n                timer: 4000,\r\n                confirmButtonText: translate('OK')\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\naccModule.factory('logger', logger);\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nclass menuItemsProvider {\r\n\r\n    constructor() {\r\n        this.menuItems = [];\r\n    }\r\n\r\n    $get() {\r\n        return this.menuItems;\r\n    }\r\n\r\n    add(item) {\r\n        this.menuItems.push(item);\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\naccModule.provider('menuItems', menuItemsProvider);\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction modalBase($modal, $q) {\r\n\r\n    /*{controller: string, templateUrl: string, size(optional): string, data: object}*/\r\n\r\n    var modalFunction = function (option) {\r\n        var modalInstance = $modal.open({\r\n            animation: true,\r\n            templateUrl: option.templateUrl,\r\n            controller: option.controller,\r\n            backdrop: true,\r\n            keyboard: false,\r\n            size: option.size, // nothing = normal , 'sm' = small , 'lg' = large\r\n            resolve: {\r\n                data: function () {\r\n                    return option.data;\r\n                }\r\n            }\r\n        });\r\n\r\n        var deferred = $q.defer();\r\n\r\n        modalInstance.result.then(function (result) {\r\n            deferred.resolve(result);\r\n        });\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    return function (option) {\r\n        return {\r\n            show: function (data) {\r\n                option.data = data;\r\n                return modalFunction(option)\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\naccModule.factory('modalBase', modalBase);\r\n",
    "import accModule from '../acc.module';\r\nimport swal from 'bootstrap-sweetalert';\r\n\r\nfunction prompt(translate, $q) {\r\n    return (option)=> {\r\n        let deferred = $q.defer();\r\n\r\n        swal({\r\n            title: option.title,\r\n            text: option.text,\r\n            type: 'input',\r\n            showCancelButton: true,\r\n            closeOnConfirm: false,\r\n            cancelButtonText: translate('Cancel'),\r\n            confirmButtonText: translate('Confirm'),\r\n            showLoaderOnConfirm: true,\r\n            animation: \"slide-from-top\",\r\n            inputPlaceholder: translate(\"Type something\")\r\n        }, (inputValue)=> {\r\n            if (!inputValue) {\r\n                swal.showInputError(translate('You should type something'));\r\n                return false;\r\n            }\r\n\r\n            deferred.resolve(inputValue);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n}\r\n\r\naccModule.factory('prompt', prompt);",
    "import accModule from '../acc.module';\r\nimport Collection from 'dev.collection';\r\n\r\nfunction routeNavigatorService($route, $location) {\r\n\r\n    function getRoute(name) {\r\n        return new Collection(getKeys($route.routes))\r\n            .asEnumerable()\r\n            .select((r)=> $route.routes[r])\r\n            .first((r)=> r.controller == '{0}Controller'.format(name));\r\n    }\r\n\r\n    let navigate = (name, parameters, queryString)=> {\r\n        let route = getRoute(name);\r\n        let path = route.originalPath;\r\n\r\n        route.keys.forEach((key)=> {\r\n            let parameterValue = parameters[key.name] || '';\r\n            if (parameterValue == '' && key.optional == true)\r\n                throw new Error('[{0}] parameter is not optional'.format(key.name));\r\n\r\n            path = path.replace(new RegExp(':{0}'.format(key.name)), parameterValue);\r\n        });\r\n\r\n        if (queryString)\r\n            $location.search(queryString);\r\n\r\n        $location.path(path);\r\n\r\n    };\r\n\r\n    return navigate;\r\n}\r\n\r\naccModule.factory('navigate', routeNavigatorService);\r\n\r\n\r\n",
    "import accModule from '../acc.module';\r\n\r\nfunction showReport() {\r\n    return (url)=> {\r\n        window.open(url, '_blank');\r\n    }\r\n}\r\n\r\naccModule.factory('showReport', showReport);",
    "import accModule from '../acc.module';\r\n\r\nfunction translate($filter) {\r\n    return (key) => $filter('translate')(key);\r\n}\r\n\r\naccModule.factory('translate', translate);",
    "import accModule from '../acc.module';\r\n\r\n\r\nfunction translateStorageService() {\r\n\r\n    return {\r\n        put: (name, value)=> {\r\n            localStorage.setItem('translate.{0}'.format(name), value);\r\n        },\r\n        get: (name)=> {\r\n            return localStorage.getItem('translate.{0}'.format(name));\r\n        }\r\n    }\r\n}\r\n\r\naccModule.factory('translateStorageService', translateStorageService);",
    "\"use strict\";\r\n\r\nexport function addVariable(options) {\r\n    let variable = new Stimulsoft.Report.Dictionary.StiVariable();\r\n\r\n    variable.name = options.name;\r\n    variable.alias = options.alias;\r\n    variable.category = options.category;\r\n    variable.value = options.value;\r\n\r\n    return variable;\r\n}\r\n\r\nexport function viewerConfig() {\r\n    let config = new Stimulsoft.Viewer.StiViewerOptions();\r\n\r\n    config.toolbar.fontFamily = \"IRANSans\";\r\n    config.toolbar.showDesignButton = true;\r\n    config.toolbar.printDestination = Stimulsoft.Viewer.StiPrintDestination.Pdf;\r\n    config.appearance.htmlRenderMode = Stimulsoft.Report.Export.StiHtmlExportMode.Table;\r\n\r\n    return config;\r\n}\r\n\r\nexport function addTranslates(report) {\r\n    let translates = JSON.parse(localStorage.getItem('translate'));\r\n\r\n    Object.keys(translates).forEach(key => {\r\n        report.dictionary.variables.add(addVariable({\r\n            name: key,\r\n            alias: key,\r\n            category: \"translate\",\r\n            value: translates[key]\r\n        }));\r\n    });\r\n\r\n}\r\n",
    "/*\r\n * Picking date & time in AngularJS is easier than ever.\r\n * \r\n * Demo: http://amirkabirdataminers.github.io/ADM-dateTimePicker\r\n *\r\n * @version 1.2.0\r\n *\r\n * © 2017 Amirkabir Data Miners <info@adm-co.net> - www.adm-co.net\r\n */\r\n\r\n(function(angular) {\r\n    'use strict';\r\n    \r\n    if (!angular.merge)\r\n        angular.merge = angular.extend;\r\n\r\n    String.prototype.toPersianDigits = function(){\r\n        var id= ['۰','۱','۲','۳','۴','۵','۶','۷','۸','۹'];\r\n        return this.replace(/[0-9]/g, function(w){\r\n            return id[+w]\r\n        });\r\n    };\r\n    String.prototype.toEnglishDigits = function(){\r\n        var id= {'۰':'0','۱':'1','۲':'2','۳':'3','۴':'4','۵':'5','۶':'6','۷':'7','۸':'8','۹':'9'};\r\n        return this.replace(/[^0-9.]/g, function(w){\r\n            return id[w]||w;\r\n        });\r\n    };\r\n    String.prototype.lZero = function() {\r\n        return (this.length<2 ? '0'+this : this);\r\n    };\r\n    Array.prototype.toNumber = function() {\r\n        return this.map(function(item) {return Number(item);});\r\n    };\r\n    Array.prototype.dtp_toDate = function(type) {\r\n        var splitter = '-';\r\n        if (/invalid/i.test(new Date('1991-9-12')))\r\n            splitter = '/';\r\n        \r\n        var date = this.join(splitter);\r\n        if (this.length == 5)\r\n            date = this.slice(0,3).join(splitter) +' '+ this.slice(3,5).join(':')\r\n        if (!type) return date;\r\n        date = new Date(date);\r\n        if (type == 'unix')\r\n            return date.getTime();\r\n        return date;\r\n    };\r\n    Number.prototype.lZero = function() {\r\n        return (this<10 ? '0'+this : this);\r\n    };\r\n    Date.prototype.dtp_shortDate = function () {\r\n        return [this.getFullYear(), this.getMonth() + 1, this.getDate()].dtp_toDate();\r\n    }\r\n    \r\n    var ADMdtpProvider = function() {\r\n\r\n        var options = {\r\n            calType: 'gregorian',\r\n            format: 'YYYY/MM/DD hh:mm', \r\n            multiple: true,\r\n            autoClose: false,\r\n            transition: true,\r\n            disabled: [],\r\n            smartDisabling: true,\r\n            minuteStep: 1,\r\n            gregorianStartDay: 0,\r\n            gregorianDic: {\r\n                title: 'Gregorian',\r\n                monthsNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n                daysNames: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n                todayBtn: 'Today',\r\n            },\r\n            jalaliDic: {\r\n                title: 'جلالی',\r\n                monthsNames: ['فروردین', 'اردیبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\r\n                daysNames: ['ش', 'ی', 'د', 'س', 'چ', 'پ', 'ج'],\r\n                todayBtn: 'امروز'\r\n            }\r\n        };\r\n\r\n        var ADMdtp = {\r\n            getOptions: function(type) {\r\n                var typeOptions = type && options[type] || options;\r\n                return typeOptions;\r\n            }\r\n        };\r\n\r\n        this.setOptions = function(type, customOptions) {\r\n            if (!customOptions) {\r\n                customOptions = type;\r\n                options = angular.merge(options, customOptions);\r\n                return;\r\n            }\r\n            options[type] = angular.merge(options[type] || {}, customOptions);\r\n        };\r\n\r\n        this.$get = function() {\r\n            return ADMdtp;\r\n        };\r\n\r\n    };\r\n    \r\n    var ADMdtpDigitTypeFilter = function() {\r\n        return function(input, type) {\r\n            return type=='jalali' ? String(input).toPersianDigits() : input;\r\n        };\r\n    };\r\n    \r\n    var ADMdtpConvertor = function() {\r\n        \r\n        function getJalaliDate(date) {\r\n            var daysPassedInGregorianCalender = getDaysPassedInGregorianCalender(date);\r\n            daysPassedInGregorianCalender -= 226894;\r\n            return getJalaliDateOfDay(daysPassedInGregorianCalender);\r\n        }\r\n        function getJalaliDateOfDay(daysPassedInJalaliCalender) {\r\n            var yearOfDay = getYearJalaliCalender(daysPassedInJalaliCalender);\r\n\r\n            var monthOfDay = getMonthJalaliCalender(daysPassedInJalaliCalender, yearOfDay);\r\n\r\n            var dayOfMonth = getDayJalaliCalender(daysPassedInJalaliCalender, yearOfDay, monthOfDay);\r\n            var date =\r\n                {\r\n                    day: dayOfMonth,\r\n                    month: monthOfDay,\r\n                    year: yearOfDay\r\n                };\r\n            return date;\r\n        }\r\n        function getDayJalaliCalender(daysPassedInJalaliCalender, yearOfDay, monthOfDay) {\r\n            var leaps = howManyLeapsYearPassedInJalaliCalender(yearOfDay);\r\n            daysPassedInJalaliCalender -= leaps + ((yearOfDay - 1) * 365);\r\n            for (var i = 1; i < monthOfDay; i++) {\r\n                if (i <= 6) {\r\n                    daysPassedInJalaliCalender -= 31;\r\n                }\r\n                else {\r\n                    daysPassedInJalaliCalender -= 30;\r\n                }\r\n            }\r\n            return daysPassedInJalaliCalender;\r\n        }\r\n        function getMonthJalaliCalender(daysPassedInJalaliCalender, yearOfDay) {\r\n            var leaps = howManyLeapsYearPassedInJalaliCalender(yearOfDay);\r\n            daysPassedInJalaliCalender -= leaps + ((yearOfDay - 1) * 365);\r\n            var jalaliMonths = getJalaliMonths();\r\n            for (var i = 0; i < jalaliMonths.length; i++) {\r\n                if (daysPassedInJalaliCalender <= jalaliMonths[i].count) {\r\n                    return jalaliMonths[i].id;\r\n                }\r\n                daysPassedInJalaliCalender -= jalaliMonths[i].count;\r\n            }\r\n            return 12;\r\n        }\r\n        function getJalaliMonths() {\r\n            return [\r\n                { id: 1, count: 31 },\r\n                { id: 2, count: 31 },\r\n                { id: 3, count: 31 },\r\n                { id: 4, count: 31 },\r\n                { id: 5, count: 31 },\r\n                { id: 6, count: 31 },\r\n                { id: 7, count: 30 },\r\n                { id: 8, count: 30 },\r\n                { id: 9, count: 30 },\r\n                { id: 10, count: 30 },\r\n                { id: 11, count: 30 },\r\n                { id: 12, count: 29 }\r\n            ];\r\n        }\r\n        function getYearJalaliCalender(daysPassedInJalaliCalender) {\r\n            var years = Math.floor((daysPassedInJalaliCalender - 1) / 365);\r\n            var leapsCount = 0;\r\n            if (years > 22) {\r\n                var year1 = years - 22 - 1;\r\n                var year2 = years - 22;\r\n\r\n                var siose = Math.floor(year1 / 33);\r\n                var remainYear = (year2 - (siose * 33));\r\n                if (remainYear >= 28) {\r\n                    remainYear = 28;\r\n                }\r\n                var a = Math.floor(remainYear / 4);\r\n                var sum = a + (siose * 8) + 6;\r\n                var sal = Math.floor((daysPassedInJalaliCalender - sum) / 365);\r\n                leapsCount = howManyLeapsYearPassedInJalaliCalender(sal);\r\n                if (daysPassedInJalaliCalender - (sal * 365) - leapsCount - (isLeapYearInJalaliCalender(sal) ? 1 : 0) > 0) {\r\n                    sal++;\r\n                    return sal;\r\n                }\r\n                else if (daysPassedInJalaliCalender - (sal * 365) + leapsCount <= 0) {\r\n                    return sal;\r\n                }\r\n                return sal;\r\n\r\n            }\r\n            else {\r\n                if (years < 1) {\r\n                    leapsCount = 0;\r\n                }\r\n                else if (years >= 1 && years <= 4) {\r\n                    leapsCount = 1;\r\n                }\r\n                else if (years >= 5 && years <= 8) {\r\n                    leapsCount = 2;\r\n                }\r\n                else if (years >= 9 && years <= 12) {\r\n                    leapsCount = 3;\r\n                }\r\n                else if (years >= 13 && years <= 16) {\r\n                    leapsCount = 4;\r\n                }\r\n                else if (years >= 17 && years < 22) {\r\n                    leapsCount = 5;\r\n                }\r\n                else {\r\n                    leapsCount = 6;\r\n                }\r\n                years = Math.floor((daysPassedInJalaliCalender - leapsCount - 1) / 365);\r\n\r\n                return years + 1;\r\n            }\r\n        }\r\n        function howManyLeapsYearPassedInJalaliCalender(year) {\r\n            if (year < 23) {\r\n                switch (year) {\r\n                    case 1:\r\n                        return 0;\r\n                    case 2:\r\n                    case 3:\r\n                    case 4:\r\n                    case 5:\r\n                        return 1;\r\n                    case 6:\r\n                    case 7:\r\n                    case 8:\r\n                    case 9:\r\n                        return 2;\r\n                    case 10:\r\n                    case 11:\r\n                    case 12:\r\n                    case 13:\r\n                        return 3;\r\n                    case 14:\r\n                    case 15:\r\n                    case 16:\r\n                    case 17:\r\n                        return 4;\r\n                    case 18:\r\n                    case 19:\r\n                    case 20:\r\n                    case 21:\r\n                    case 22:\r\n                        return 5;\r\n\r\n\r\n                }\r\n            }\r\n            var yearAfterFirstEra = year - 22;\r\n            var countSioSe = Math.floor((yearAfterFirstEra - 1) / 33);\r\n            var remainOfNormalLeapsYear = yearAfterFirstEra - countSioSe * 33;\r\n            if (remainOfNormalLeapsYear > 28) {\r\n                remainOfNormalLeapsYear = 28;\r\n            }\r\n            var leapsCount = Math.floor(remainOfNormalLeapsYear / 4) + countSioSe * 8 + 6;\r\n            if (isLeapYearInJalaliCalender(year) && (yearAfterFirstEra - countSioSe * 33) <= 28) {\r\n                leapsCount--;\r\n            }\r\n            return leapsCount;\r\n        }\r\n        \r\n        function getDaysPassedInGregorianCalender(date) {\r\n            var gregorianMonths = getGregorianMonths();\r\n            var passedLeapYears = howManyGregorianLeapsYearPassed(date.year);\r\n            var days = passedLeapYears;\r\n            var isMiladiLeaps = isGregorianLeapYear(date.year);\r\n            days += (date.year - 1) * 365;\r\n            for (var i = 0; i < date.month - 1; i++) {\r\n                if (isMiladiLeaps && i + 1 == 2) {\r\n                    gregorianMonths[i].count = 29;\r\n                }\r\n                days += gregorianMonths[i].count;\r\n\r\n            }\r\n            days += date.day;\r\n            return days;\r\n        }\r\n        function getGregorianMonths() {\r\n            return [\r\n                { id: 1, count: 31 },\r\n                { id: 2, count: 28 },\r\n                { id: 3, count: 31 },\r\n                { id: 4, count: 30 },\r\n                { id: 5, count: 31 },\r\n                { id: 6, count: 30 },\r\n                { id: 7, count: 31 },\r\n                { id: 8, count: 31 },\r\n                { id: 9, count: 30 },\r\n                { id: 10, count: 31 },\r\n                { id: 11, count: 30 },\r\n                { id: 12, count: 31 }\r\n            ];\r\n        }\r\n        function isGregorianLeapYear(year) {\r\n            if (year % 4 != 0) {\r\n                return false;\r\n            }\r\n            if (year % 100 != 0) {\r\n                return true;\r\n            }\r\n            if (year % 400 != 0) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        function howManyGregorianLeapsYearPassed(year) {\r\n            var yearsPassed = year - 1;\r\n            var countOfFourYears = Math.floor(yearsPassed / 4);\r\n            var countOfHandredYears = Math.floor(yearsPassed / 100);\r\n            var countOfFourHandredYears = Math.floor(yearsPassed / 400);\r\n            return countOfFourYears - countOfHandredYears + countOfFourHandredYears;\r\n        }\r\n        function getGregorianYear(gregorianPassedDays) {\r\n            var pureYear = Math.floor((gregorianPassedDays) / 365);\r\n            var gregorianLeapsYear = howManyGregorianLeapsYearPassed(pureYear);\r\n            var year = Math.floor((gregorianPassedDays - gregorianLeapsYear) / 365);\r\n            var remainDay = gregorianPassedDays - year * 365 - gregorianLeapsYear;\r\n            if (remainDay != 0) {\r\n                year++;\r\n            }\r\n            else if (isGregorianLeapYear(year + 1)) {\r\n                year += gregorianLeapsYear / 365;\r\n            }\r\n            return Math.floor(year);\r\n        }\r\n        function getGregorianMonth(daysPassed) {\r\n            var year = getGregorianYear(daysPassed);\r\n            var leaspYearCount = howManyGregorianLeapsYearPassed(year);\r\n            daysPassed -= (year - 1) * 365 + leaspYearCount;\r\n            var months = getGregorianMonths();\r\n            var month = 0;\r\n            var isCurrentYearLeaps = isGregorianLeapYear(year);\r\n            for (var i = 0; i < months.length; i++) {\r\n                if (isCurrentYearLeaps && months[i].id == 2) {\r\n                    months[i].count = 29;\r\n                }\r\n                if (daysPassed < months[i].count) {\r\n                    if (daysPassed != 0 || month == 0) {\r\n                        month++;\r\n                    }\r\n                    return month;\r\n                }\r\n                daysPassed -= months[i].count;\r\n                month = months[i].id;\r\n            }\r\n            return month;\r\n        }\r\n        function getGregorianDayOfMonthByPassedDay(daysPassed) {\r\n            var year = getGregorianYear(daysPassed);\r\n            var month = getGregorianMonth(daysPassed);\r\n            return getGregorianDayOfMonth(year, month, daysPassed);\r\n        }\r\n\r\n        function getGregorianDayOfMonth(year, month, daysPassed) {\r\n            var leaspYearCount = howManyGregorianLeapsYearPassed(year);\r\n            var months = getGregorianMonths();\r\n            var sumOfMonths = 0;\r\n            for (var i = 0; i < months.length; i++) {\r\n                if (months[i].id < month) {\r\n                    sumOfMonths += months[i].count;\r\n                }\r\n            }\r\n            if (isGregorianLeapYear(year) && month > 2) {\r\n                sumOfMonths++;\r\n            }\r\n            return daysPassed - (year - 1) * 365 - leaspYearCount - sumOfMonths;\r\n        }\r\n        function getDaysPassedInJalaliCalander(date) {\r\n            var days = date.day;\r\n            days += passedDaysFromMonthsInJalaliCalander(date.month);\r\n            days += passedDaysToYearsInJalaliCalander(date.year);\r\n            return days;\r\n        }\r\n\r\n        function passedDaysFromMonthsInJalaliCalander(month) {\r\n            var days = 0;\r\n            var months = getJalaliMonths();\r\n            for (var i = 0; i < month - 1; i++) {\r\n                days += months[i].count;\r\n            }\r\n            return days;\r\n        }\r\n\r\n        function passedDaysToYearsInJalaliCalander(years) {\r\n            var days = howManyLeapsYearPassedInJalaliCalender(years);\r\n            days += (years - 1) * 365;\r\n            return days;\r\n        }\r\n\r\n        function getGregorianDate(date) {\r\n            var daysPassed = getDaysPassedInJalaliCalander(date) + 226894;\r\n            var day = getGregorianDayOfMonthByPassedDay(daysPassed);\r\n            var month = getGregorianMonth(daysPassed);\r\n            var year = getGregorianYear(daysPassed);\r\n            if (day == 0)\r\n            {\r\n                day = 31;\r\n                month = 12;\r\n                year--;\r\n            }\r\n            return {\r\n                day: day,\r\n                month: month,\r\n                year: year\r\n            };\r\n\r\n        }\r\n        var isLeapYearInJalaliCalender = function(years) {\r\n            if (years == 1 || years == 5 || years == 9 || years == 13 || years == 17 || years == 22) {\r\n                return true;\r\n            }\r\n            else if (years < 22) {\r\n                return false;\r\n            }\r\n            var year = years - 22;\r\n            var siosesal = Math.floor(year / 33);\r\n            return ((year - (siosesal * 33)) % 4 == 0) && (year - (siosesal * 33)) / 4 != 8;\r\n        }\r\n        var getPersianDate = function(year, month, day) {\r\n            year = (year<=99)?(2000+year):year;\r\n            var date = { year: year, month: month, day: day };\r\n            date = getJalaliDate(date);\r\n            return date;\r\n        }\r\n        var getGregorianDates = function(year, mont, day) {\r\n            year = (year<=99)?(1300+year):year;\r\n            var date= getGregorianDate( {\r\n                day: day,\r\n                month: mont,\r\n                year: year\r\n            });\r\n            return date;\r\n        }\r\n        \r\n        return {\r\n            toJalali: getPersianDate,\r\n            toGregorian: getGregorianDates,\r\n            isLeapJalali: isLeapYearInJalaliCalender\r\n        }\r\n    }\r\n    \r\n    var ADMdtpFactory = function(ADMdtpConvertor) {\r\n\r\n        this.dateFormat = function(date, time, format, notView) {\r\n            if (!date.year) return '';\r\n\r\n            var year = date.year;\r\n            var halfYear = notView ? date.year : date.year%100;\r\n            var month = date.month.lZero();\r\n            var day = date.day.lZero();\r\n            var hour = time.hour.lZero();\r\n            var minute = time.minute.lZero();\r\n            \r\n            var replaceMap = [\r\n                {key: 'YYYY', value: year},\r\n                {key: 'YY', value: halfYear},\r\n                {key: 'MM', value: month},\r\n                {key: 'DD', value: day},\r\n                {key: 'hh', value: hour},\r\n                {key: 'mm', value: minute}\r\n            ]\r\n            \r\n            for(var i=0,j=replaceMap.length;i<j;i++) {\r\n                format = format.replace(replaceMap[i].key, replaceMap[i].value);\r\n            }\r\n            \r\n            return format;\r\n        };\r\n        this.parseString = function(str, format) {\r\n            var _keys = [], _date = {};\r\n            var formats = ['YY/MM/DD', 'YY/MM/DD hh:mm', 'YY-MM-DD', 'YY-MM-DD hh:mm', 'MM/DD/YY', 'MM-DD-YY', 'MM/DD/YY hh:mm', 'MM-DD-YY hh:mm'];\r\n            formats.unshift(format);\r\n            \r\n            for(var i=0,j=formats.length;i<j;i++) {\r\n                var _isValid = new RegExp('^' + formats[i].replace(/[a-z]+/gi, function(key) {\r\n                    var _mustReplace = false;\r\n                    if (key.indexOf('YY') != -1)\r\n                        _keys.push('year'), _mustReplace=true;\r\n                    else if (key.indexOf('MM') != -1)\r\n                        _keys.push('month'), _mustReplace=true;\r\n                    else if (key.indexOf('DD') != -1)\r\n                        _keys.push('day'), _mustReplace=true;\r\n                    else if (key.indexOf('hh') != -1)\r\n                        _keys.push('hour'), _mustReplace=true;\r\n                    else if (key.indexOf('mm') != -1)\r\n                        _keys.push('minute'), _mustReplace=true;\r\n\r\n                    if (_mustReplace)\r\n                        return '[0-9]+';\r\n                    else \r\n                        return key;\r\n                }).replace(/[(]/g, '[(]').replace(/[)]/g, '[)]') + '$').test(str);\r\n\r\n                if (!_isValid)\r\n                    continue;\r\n\r\n                _keys.reverse();\r\n                \r\n                str.replace(/[0-9]+/g, function(value) {\r\n                    _date[_keys.pop()] = Number(value);\r\n                    return value;\r\n                });\r\n                _date.hour = _date.hour || 0;\r\n                _date.minute = _date.minute || 0;\r\n\r\n                return _date;\r\n            }\r\n            \r\n            return false;\r\n        };\r\n        this.toRegularFormat = function(date, type, format) {\r\n            if (!date) return false;\r\n            \r\n            if (typeof date == \"string\")\r\n                date = this.parseString(date, format);\r\n            else if (typeof date == \"number\")\r\n                date = this.convertFromUnix(date, type);\r\n            \r\n            if (!date) return false;\r\n\r\n            if (date.year<=99)\r\n                date.year = ((type == 'jalali') ? 1300+date.year : 2000+date.year);\r\n            \r\n            return [date.year, date.month.lZero(), date.day.lZero(), date.hour.lZero(), date.minute.lZero()].dtp_toDate();\r\n        };\r\n        this.isDateEqual = function(date1, date2) {\r\n            var diff = new Date(date1) - new Date(date2);\r\n            return diff==0;\r\n        };\r\n        this.isDateBigger = function(date1, date2) {\r\n            var diff = new Date(date1) - new Date(date2);\r\n            return diff>=0;\r\n        };\r\n        this.isMonthBigger = function(date1, date2) {\r\n            var diff = new Date(date1.year, date1.month) - new Date(date2.year, date2.month);\r\n            return diff>=0;\r\n        };\r\n        this.joinTime = function(date, time) {\r\n            return new Date(new Date(new Date(date).setHours(time.hour)).setMinutes(time.minute));\r\n        };\r\n        this.removeTime = function(date) {\r\n            return [date.getFullYear(), date.getMonth()+1, date.getDate()].dtp_toDate('date');\r\n        }\r\n        this.validateJalaliDateSeparate = function(date, time) {\r\n            if (date.length!=3 || time.length!=2)\r\n                return false;\r\n            \r\n            if (time[0]>23 || time[0]<0 || time[1]>59 || time[1]<0 || date[0]<0 || date[1]<1 || date[1]>12)\r\n                return false;\r\n            \r\n            if (date[1]>0 && date[1]<7) {\r\n                if (date[2]<1 || date[2]>31)\r\n                    return false;\r\n            }\r\n            else if (date[1]>6 && date[1]<12) {\r\n                if (date[2]<1 || date[2]>30)\r\n                    return false;\r\n            }\r\n            else if (date[1] == 12) {\r\n                var isLeap = ADMdtpConvertor.isLeapJalali(date[0]);\r\n                if ((isLeap && (date[2]<1 || date[2]>30)) || (!isLeap && (date[2]<1 || date[2]>29)))\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n        this.validateJalaliDate = function(input, format) {\r\n            var _dateTime;\r\n            \r\n            if (typeof input == \"number\") {\r\n                var _gDate = new Date(input);\r\n                if (/invalid/i.test(_gDate))\r\n                    return false;\r\n                var _pDate = this.convertToJalali(_gDate);\r\n                _dateTime = angular.merge(_pDate, {hour: _gDate.getHours(), minute: _gDate.getMinutes()});\r\n            }\r\n            else if (typeof input == \"string\")\r\n                _dateTime = this.parseString(input, format);\r\n            \r\n            else if (input instanceof Object)\r\n                _dateTime = input;\r\n            \r\n            if (!_dateTime) return false;\r\n            \r\n            var _date = [_dateTime.year, _dateTime.month, _dateTime.day];\r\n            var _time = [_dateTime.hour, _dateTime.minute];\r\n            \r\n            if (this.validateJalaliDateSeparate(_date, _time)) {\r\n                var _gDateC = ADMdtpConvertor.toGregorian(_date[0],_date[1],_date[2]);\r\n                var _gDate = [_gDateC.year, _gDateC.month, _gDateC.day, _time[0], _time[1]].dtp_toDate('date');\r\n                \r\n                return {\r\n                    year: _date[0],\r\n                    month: _date[1],\r\n                    day: _date[2],\r\n                    hour: _time[0],\r\n                    minute: _time[1],\r\n                    unix: _gDate.getTime(),\r\n                    gDate: _gDate\r\n                }\r\n            }\r\n            return false;\r\n\r\n        };\r\n        this.convertToUnix = function(value, type, format) {\r\n            if (!value)\r\n                return null;\r\n            if (typeof value == \"number\")\r\n                return value;\r\n            \r\n            if (typeof value == \"string\") {\r\n                value = this.parseString(value, format);\r\n            }\r\n            else if (value instanceof Date)\r\n                value = {year: value.getFullYear(), month: value.getMonth()+1, day: value.getDate(), hour: value.getHours(), minute: value.getMinutes()};\r\n            else\r\n                return null;\r\n            \r\n            if (value.year<=99)\r\n                value.year = ((type == 'jalali') ? 1300+value.year : 2000+value.year);\r\n            \r\n            \r\n            if (type == 'jalali') {\r\n                var _dateTime = this.validateJalaliDate(value, format);\r\n                return _dateTime.unix || null;\r\n            }\r\n            else if (type == 'gregorian') {\r\n                var _dateTime = new Date(this.toRegularFormat(value, type));\r\n                return (/invalid/i.test(_dateTime))?null:_dateTime.getTime();\r\n            }\r\n            \r\n            return null;\r\n        };\r\n        this.convertFromUnix = function(unix, type) {\r\n            var _gDate = new Date(unix);\r\n            if (type == 'jalali')\r\n                return this.convertToJalali(_gDate);\r\n            else if (type == 'gregorian')\r\n                return {\r\n                    year: _gDate.getFullYear(),\r\n                    month: _gDate.getMonth()+1,\r\n                    day: _gDate.getDate(),\r\n                    unix: unix\r\n                };\r\n        };\r\n        this.convertToJalali = function(date) {\r\n            \r\n            if (date instanceof Date) {\r\n                var _date = {\r\n                    year: date.getFullYear(),\r\n                    month: date.getMonth()+1,\r\n                    day: date.getDate(),\r\n                    unix: date.getTime()\r\n                }\r\n                date = _date;\r\n            }\r\n            if (date instanceof Object) {\r\n                return angular.merge(ADMdtpConvertor.toJalali(date.year, date.month, date.day), {unix: date.unix});\r\n            }\r\n        };\r\n        this.parseDisablePattern = function(options) {\r\n            var arr = options.disabled, smart = options.smartDisabling, calType = options.calType, format = options.format;\r\n            \r\n            var _inWeek = Array.apply(null, Array(7)).map(Number.prototype.valueOf,0);\r\n            var _inMonth = Array.apply(null, Array(31)).map(Number.prototype.valueOf,0);\r\n            var _static = {};\r\n            \r\n            if (arr instanceof Array) {\r\n                for (var i=0,j=arr.length; i<j; i++) {\r\n                    if (typeof arr[i] == \"number\") {\r\n                        var _gDate = new Date(arr[i]);\r\n                        if (!/invalid/i.test(_gDate))\r\n                            _static[this.removeTime(_gDate).getTime()] = true;\r\n                    }\r\n                    else if (typeof arr[i] == \"string\") {\r\n                        arr[i] = arr[i].toLowerCase();\r\n                        if (arr[i].indexOf('d') == -1 && arr[i].indexOf('i') == -1) {\r\n                            var _unix = this.convertToUnix(arr[i], calType, format);\r\n                            if (_unix)\r\n                                _static[_unix] = true;\r\n                        }\r\n                        else {\r\n                            var _inMonthValid = new RegExp(\"^[!]?(([0-9]?[0-9])?[d]([+][0-9][0-9]?)?)([&]([0-9]?[0-9])?[d]([+][0-9][0-9]?)?)*?$\").test(arr[i]);\r\n                            var _inWeekhValid = new RegExp(\"^[!]?([i]([+][0-9][0-9]?)?)([&][i]([+][0-9][0-9]?)?)*?$\").test(arr[i]);\r\n                            \r\n                            if (_inMonthValid || _inWeekhValid) {\r\n                                var _not = arr[i][0]=='!';\r\n                                arr[i] = _not?arr[i].split('!')[1]:arr[i];\r\n                                var _patt = arr[i].split('&');\r\n                                \r\n                                if (_inMonthValid) {\r\n                                    var _tmpObj = {};\r\n                                    _patt.forEach(function(item) {\r\n                                        var _params = item.split(/d[+]?/).map(function(str) {return Number(str);});\r\n                                        _params[0] = _params[0]?_params[0]:1;\r\n                                        _params[1]%=31;\r\n\r\n                                        for (var k=0; k<31; k++) {\r\n                                            if (_params[0]!=1 && k%_params[0] == _params[1] || _params[0]==1 && k==_params[1])\r\n                                                _tmpObj[k] = 1;\r\n                                        }\r\n                                    });\r\n                                    for (var k=0; k<31; k++) {\r\n                                        if (_not) {\r\n                                            if (!_tmpObj[k])\r\n                                                _inMonth[k] = 1;\r\n                                        }\r\n                                        else {\r\n                                            if (_tmpObj[k])\r\n                                                _inMonth[k] = 1;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else if (_inWeekhValid) {\r\n                                    var _tmpObj = {};\r\n                                    _patt.forEach(function(item) {\r\n                                        var _params = item.split(/i[+]?/).map(function(str) {return Number(str);});\r\n                                        _params[1]%=7;\r\n                                        _tmpObj[_params[1]] = 1;\r\n                                    });\r\n                                    for (var k=0; k<7; k++) {\r\n                                        if (_not) {\r\n                                            if (!_tmpObj[k])\r\n                                                _inWeek[k] = 1;\r\n                                        }\r\n                                        else {\r\n                                            if (_tmpObj[k])\r\n                                                _inWeek[k] = 1;\r\n                                        }\r\n                                        \r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                console.warn(arr[i] + \" is not valid!\");\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return {smart: smart, calType: calType, static: _static, inWeek: _inWeek, inMonth: _inMonth};\r\n        }\r\n        this.isDayDisable = function(calType, disabled, day) {\r\n            if (disabled.static[day.unix])\r\n                return true;\r\n            \r\n            var _gap = 0;\r\n            \r\n            if (disabled.smart) {\r\n                if (disabled.calType=='gregorian' && calType=='jalali')\r\n                    _gap = +1;\r\n                else if (disabled.calType=='jalali' && calType=='gregorian')\r\n                    _gap = -1;\r\n            }\r\n            else {\r\n                if (disabled.calType=='gregorian' && calType=='jalali')\r\n                    _gap = -1;\r\n                else if (disabled.calType=='jalali' && calType=='gregorian')\r\n                    _gap = +1;\r\n            }\r\n                \r\n            \r\n            var _dayName = (day.dayName + 7 + _gap)%7;\r\n            \r\n            if (disabled.inMonth[day.day-1])\r\n                return true;\r\n            \r\n            return !!+disabled.inWeek[_dayName];\r\n        }\r\n        \r\n        return {\r\n            dateFormat: this.dateFormat,\r\n            parseString: this.parseString,\r\n            toRegularFormat: this.toRegularFormat,\r\n            isDateEqual: this.isDateEqual,\r\n            isDateBigger: this.isDateBigger,\r\n            isMonthBigger: this.isMonthBigger,\r\n            joinTime: this.joinTime,\r\n            removeTime: this.removeTime,\r\n            validateJalaliDateSeparate: this.validateJalaliDateSeparate,\r\n            validateJalaliDate: this.validateJalaliDate,\r\n            convertToUnix: this.convertToUnix,\r\n            convertFromUnix: this.convertFromUnix,\r\n            convertToJalali: this.convertToJalali,\r\n            parseDisablePattern: this.parseDisablePattern,\r\n            isDayDisable: this.isDayDisable,\r\n            counter: 0\r\n        }\r\n    }\r\n    \r\n    var ADMdtpCalendarDirective = function(ADMdtp, ADMdtpConvertor, ADMdtpFactory, constants, $timeout) {\r\n\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            //require: '^^admDtp',\r\n            link: function(scope, element, attrs) {\r\n\r\n                var admDtp = scope.api;\r\n                \r\n                var _standValue;\r\n                if (!scope.dtpValue.unix)\r\n                    _standValue = new Date();                   \r\n                else\r\n                    _standValue = new Date(scope.dtpValue.fullDate);\r\n                \r\n                if (scope.calType == 'jalali')\r\n                    _standValue = ADMdtpFactory.convertToJalali(_standValue);\r\n                \r\n                admDtp.fillDays(_standValue, !scope.option.transition);\r\n\r\n                scope.previousMonth = function(flag) {\r\n                    if (scope.calType == 'jalali' && !flag) {\r\n                        scope.nextMonth(true);\r\n                        return;\r\n                    }\r\n                    \r\n                    if (scope.current.month == 1)\r\n                        scope.current.month = 12, scope.current.year--;\r\n                    else\r\n                        scope.current.month--\r\n                    admDtp.reload();\r\n                }\r\n\r\n                scope.nextMonth = function(flag) {\r\n                    if (scope.calType == 'jalali' && !flag) {\r\n                        scope.previousMonth(true);\r\n                        return;\r\n                    }\r\n                        \r\n                    if (scope.current.month == 12)\r\n                        scope.current.month = 1, scope.current.year++;\r\n                    else\r\n                        scope.current.month++\r\n                    admDtp.reload();\r\n                }\r\n                \r\n                scope.previousYear = function(flag) {\r\n                    if (scope.calType == 'jalali' && !flag) {\r\n                        scope.nextYear(true);\r\n                        return;\r\n                    }\r\n\r\n                    var _firstYear = scope.generatedYears.shift();\r\n                    scope.generatedYears = [];\r\n                    for (var i=1;i<17;i++) {\r\n                        scope.generatedYears.push(_firstYear - 17 + i);\r\n                    }\r\n                }\r\n\r\n                scope.nextYear = function(flag) {\r\n                    if (scope.calType == 'jalali' && !flag) {\r\n                        scope.previousYear(true);\r\n                        return;\r\n                    }\r\n\r\n                    var _lastYear = scope.generatedYears.pop();\r\n                    scope.generatedYears = [];\r\n                    for (var i=1;i<17;i++) {\r\n                        scope.generatedYears.push(_lastYear + i);\r\n                    }\r\n                }\r\n                \r\n                scope.selectMonthInit = function() {\r\n                    scope.yearSelectStat = false;\r\n                    scope.monthPickerStat = true;\r\n                }\r\n                \r\n                scope.selectYearInit = function() {\r\n                    scope.yearSelectStat = true;\r\n                    scope.generatedYears = [];\r\n                    for (var i=0;i<16;i++) {\r\n                        scope.generatedYears.push(scope.current.year + i - 7);\r\n                    }\r\n                }\r\n                \r\n                scope.selectMonth = function(monthIdx) {\r\n                    if (monthIdx+1 != scope.current.month) {\r\n                        scope.current.month = monthIdx+1;\r\n                        admDtp.reload();\r\n                    }\r\n                    scope.monthPickerStat = false;\r\n                }\r\n                \r\n                scope.selectYear = function(yearName) {\r\n                    if (yearName != scope.current.year) {\r\n                        scope.current.year = yearName;\r\n                        admDtp.reload();\r\n                    }\r\n                    scope.monthPickerStat = false;\r\n                    //scope.yearSelectStat = false;\r\n                }\r\n\r\n                scope.selectThisDay = function(day) {\r\n                    if (day.valid == 0)\r\n                        return;\r\n                    \r\n                    scope.dtpValue.selected = false;\r\n                    \r\n                    admDtp.updateMasterValue(day, 'day');\r\n                    \r\n                    if (scope.option.autoClose) {\r\n                        $timeout(function() {\r\n                            scope.closeCalendar();\r\n                        },100);\r\n                        return;\r\n                    }\r\n                        \r\n                    \r\n                    if (day.disable) {\r\n                        $timeout(function() {\r\n                            if (ADMdtpFactory.isMonthBigger(day, scope.current))\r\n                                scope.nextMonth(true);\r\n                            else\r\n                                scope.previousMonth(true);\r\n                        }, 0);\r\n                    } else\r\n                        day.selected = true;\r\n                }\r\n                \r\n                scope.today = function() {\r\n                    var _standValue = new Date();\r\n\r\n                    if (scope.calType == 'jalali')\r\n                        _standValue = ADMdtpFactory.convertToJalali(_standValue);\r\n\r\n                    admDtp.fillDays(_standValue, !scope.option.transition);\r\n                }\r\n\r\n                scope.changeTimeValue = function(variable, value) {\r\n                    value *= (variable=='minute' ? scope.option.minuteStep : 1);\r\n                    \r\n                    var _num = (Number(scope.time[variable]) + value + ((variable=='hour')?24:60)) % ((variable=='hour')?24:60);\r\n                    var _timeCopy = angular.copy(scope.time);\r\n                    _timeCopy[variable] = _num.lZero();\r\n                    \r\n                    if (scope.dtpValue.unix) {\r\n                        if (scope.minDate || scope.maxDate) {\r\n                            var _dateTime = ADMdtpFactory.joinTime(scope.dtpValue.unix, _timeCopy);\r\n                            if ((scope.minDate && !ADMdtpFactory.isDateBigger(_dateTime,scope.minDate)) || (scope.maxDate && !ADMdtpFactory.isDateBigger(scope.maxDate,_dateTime)))\r\n                                return;\r\n                        }\r\n                    }\r\n                    \r\n                    scope.time[variable] = _num.lZero();\r\n                    \r\n                    \r\n                    if (scope.dtpValue.unix)\r\n                        admDtp.updateMasterValue(false, 'time');\r\n                    \r\n                    admDtp.reload();\r\n                }\r\n                \r\n                scope.modelChanged = function(input) {\r\n                    \r\n                    var _value = (angular.isDefined(input) ? input : scope.dtpValue.formated);\r\n                    \r\n                    if (!_value) {\r\n                        if (scope.dtpValue.unix)\r\n                            scope.destroy();\r\n                        return;\r\n                    }\r\n                    \r\n                    var _inputUnix = ADMdtpFactory.convertToUnix(_value, scope.calType, scope.option.format);\r\n                    if (!_inputUnix || scope.option.freezeInput || scope.disable || ((scope.minDate && !ADMdtpFactory.isDateBigger(_inputUnix,scope.minDate)) || (scope.maxDate && !ADMdtpFactory.isDateBigger(scope.maxDate,_inputUnix)))) {\r\n                        admDtp.updateMasterValue(false);\r\n                        return;\r\n                    }\r\n                        \r\n                    if (_inputUnix == scope.fullData.unix)\r\n                        return;\r\n                    \r\n                    scope.parseInputValue(_value, false, true);\r\n                    \r\n                    var _gDate = new Date(_inputUnix);\r\n                    if (scope.calType == 'jalali')\r\n                        _gDate = ADMdtpFactory.convertToJalali(_gDate);\r\n\r\n                    admDtp.fillDays(_gDate, true);\r\n                    \r\n                }\r\n                admDtp.modelChanged = scope.modelChanged;\r\n                \r\n                scope.calTypeChanged = function(calType) {\r\n                    scope.calType = (calType ? calType : ((scope.calType=='gregorian')?'jalali':'gregorian'));\r\n                    \r\n                    scope.monthNames = scope.option[scope.calType + 'Dic'].monthsNames;\r\n                    scope.daysNames = scope.option[scope.calType + 'Dic'].daysNames;\r\n                    \r\n                    var _cur = angular.copy(scope.current);\r\n                    var _mainDate;\r\n                    \r\n                    if (scope.calType == 'jalali') {\r\n                        _mainDate = ADMdtpConvertor.toJalali(_cur.year, _cur.month, 15);\r\n                    }\r\n                    else {\r\n                        _mainDate = ADMdtpConvertor.toGregorian(_cur.year, _cur.month, 15);\r\n                        _mainDate = [_mainDate.year, _mainDate.month, _mainDate.day].dtp_toDate('date');\r\n                    }\r\n                    \r\n                    if (scope.dtpValue.unix) {\r\n                        admDtp.updateMasterValue(ADMdtpFactory.convertFromUnix(scope.dtpValue.unix, scope.calType));\r\n                    }\r\n                    \r\n                    admDtp.fillDays(_mainDate, true);\r\n                    \r\n                }\r\n\r\n                \r\n            },\r\n            //templateUrl: 'js/ADM-dateTimePicker/ADM-dateTimePicker_calendar.html'\r\n            template: '<div class=\"ADMdtp-box ADMdtp-calendar-container\" ng-class=\"{rtl: (calType==\\'jalali\\'), square: monthPickerStat||timePickerStat}\"> <div class=\"dtpNewBox\" ng-class=\"{active: monthPickerStat}\"> <i class=\"calendarIcon\" ng-class=\"{show: monthPickerStat}\" ng-click=\"monthPickerStat = false\"> <svg class=\"dtp-i\" viewBox=\"0 0 24 24\"> <use xlink:href=\"#dtp-i-calendar\" /> </svg> </i> <div class=\"content\"> <div class=\"ADMdtpMonths\" ng-class=\"{onYear: yearSelectStat, rtl: (calType==\\'jalali\\')}\"> <div class=\"ADMdtpYears\"> <svg class=\"dtp-i dtp-i-180 dtp-trs-3 arrow left\" viewBox=\"0 0 24 24\" ng-if=\"yearSelectStat\" ng-click=\"previousYear()\"> <use xlink:href=\"#dtp-i-right\" /> </svg> <p class=\"dtp-trs-3\" ng-click=\"selectYearInit()\">{{current.year | digitType:calType}}</p> <svg class=\"dtp-i dtp-trs-3 arrow right\" viewBox=\"0 0 24 24\" ng-if=\"yearSelectStat\" ng-click=\"nextYear()\"> <use xlink:href=\"#dtp-i-right\" /> </svg> </div> <span ng-repeat=\"yearName in generatedYears\" ng-if=\"yearSelectStat\"><span class=\"dtp-trs-5\" ng-class=\"{selected: yearName==current.year}\" ng-click=\"selectYear(yearName)\">{{yearName | digitType:calType}}</span></span> <span ng-repeat=\"monthName in monthNames\" ng-if=\"!yearSelectStat\"><span class=\"dtp-trs-5\" ng-class=\"{selected: monthName==current.monthDscr}\" ng-click=\"selectMonth($index)\">{{monthName}}</span></span> </div> </div> </div> <div class=\"dtpNewBox\" ng-class=\"{active: timePickerStat}\"> <i class=\"calendarIcon\" ng-class=\"{show: timePickerStat}\" ng-click=\"timePickerStat = false\"> <svg class=\"dtp-i\" viewBox=\"0 0 24 24\"> <use xlink:href=\"#dtp-i-calendar\" /> </svg> </i> <div class=\"content\"> <div class=\"ADMdtpTime\"> <span class=\"dtpIcon null up\" ng-click=\"changeTimeValue(\\'hour\\', 1)\"><svg class=\"dtp-i dtp-trs-5 dtp-i-270\" viewBox=\"0 0 24 24\"><use xlink:href=\"#dtp-i-right\" /></svg></span><!-- --><span></span><!-- --><span class=\"dtpIcon null up\" ng-click=\"changeTimeValue(\\'minute\\', 1)\"><svg class=\"dtp-i dtp-trs-5 dtp-i-270\" viewBox=\"0 0 24 24\"><use xlink:href=\"#dtp-i-right\" /></svg></span><!-- --><span>{{time.hour}}</span><!-- --><span class=\"period\">:</span><!-- --><span>{{time.minute}}</span><!-- --><span class=\"dtpIcon null down\" ng-click=\"changeTimeValue(\\'hour\\', -1)\"><svg class=\"dtp-i dtp-trs-5 dtp-i-90\" viewBox=\"0 0 24 24\"><use xlink:href=\"#dtp-i-right\" /></svg></span><!-- --><span></span><!-- --><span class=\"dtpIcon null down\" ng-click=\"changeTimeValue(\\'minute\\', -1)\"><svg class=\"dtp-i dtp-trs-5 dtp-i-90\" viewBox=\"0 0 24 24\"><use xlink:href=\"#dtp-i-right\" /></svg></span> </div> </div> </div> <header> <svg class=\"dtp-i dtp-i-180 dtp-trs-3 arrow left\" viewBox=\"0 0 24 24\" ng-click=\"previousMonth()\"> <use xlink:href=\"#dtp-i-right\" /> </svg> <span class=\"yearMonth\" ng-click=\"selectMonthInit()\">{{current.monthDscr}} {{current.year | digitType:calType}}</span> <svg class=\"dtp-i dtp-trs-3 arrow right\" viewBox=\"0 0 24 24\" ng-click=\"nextMonth()\"> <use xlink:href=\"#dtp-i-right\" /> </svg> </header> <div class=\"daysNames\"> <span ng-repeat=\"dayName in daysNames\">{{dayName}}</span> </div> <hr> <div class=\"ADMdtpDays\" ng-class=\"{loading:loadingDays}\"> <span ng-repeat=\"day in current.days\" ng-click=\"selectThisDay(day)\"><span ng-class=\"[{disable: day.disable||!day.valid, today: day.today, selected: day.selected, valid:(day.valid==2)}, (day.isMin)?((calType==\\'jalali\\')?\\'max\\':\\'min\\'):\\'\\', (day.isMax)?((calType==\\'jalali\\')?\\'min\\':\\'max\\'):\\'\\']\">{{day.day | digitType:calType}}</span></span> </div> <hr> <footer> <div class=\"calTypeContainer dtp-trs-3\" ng-class=\"$parent.calType\" ng-click=\"calTypeChanged()\" ng-if=\"option.multiple\"> <p class=\"gregorian\">{{option.gregorianDic.title}}</p> <p class=\"jalali\">{{option.jalaliDic.title}}</p> </div> <button type=\"button\" class=\"today dtp-trs-3\" ng-click=\"today()\">{{option[calType + \"Dic\"].todayBtn}}</button> <svg class=\"dtp-i dtp-trs-5 timeSelectIcon\" viewBox=\"0 0 24 24\" ng-show=\"option.dtpType != \\'date\\'\" ng-click=\"timePickerStat = !timePickerStat\"> <use xlink:href=\"#dtp-i-clock\" /> </svg> </footer> </div>'\r\n        }\r\n    }\r\n\r\n    var ADMdtpDirective = function(ADMdtp, ADMdtpConvertor, ADMdtpFactory, constants, $compile, $timeout) {\r\n\r\n        return {\r\n            restrict: 'E',\r\n            replace: true,\r\n            transclude: true,\r\n            require: ['ngModel', 'admDtp'],\r\n            scope: {\r\n                options: '=?',\r\n                fullData: '=?',\r\n                name: '=?',\r\n                ngRequired: '=?',\r\n                onChange: '&?',\r\n                onDatechange: '&?',\r\n                onTimechange: '&?',\r\n                onOpen: '&?',\r\n                onClose: '&?',\r\n            },\r\n            link: function(scope, element, attrs, ctrls) {\r\n                var ngModel = ctrls[0], admDtp = ctrls[1];\r\n                scope.api = admDtp;\r\n                scope.dtpId = 'adm-' + (++ADMdtpFactory.counter);\r\n                \r\n                if (!element.find('ng-transclude').children().length) {\r\n                    scope.defaultTemplate = true;\r\n                    element.find('ng-transclude').remove();\r\n                }\r\n                \r\n                var _options = scope.options;\r\n                if (!(_options instanceof Object))\r\n                    _options = {};\r\n                scope.option = angular.merge(angular.copy(ADMdtp.getOptions()), _options);\r\n                scope.option.minuteStep = Math.max(Math.min(scope.option.minuteStep, 60), 1);\r\n                var dayNames = angular.copy(scope.option.gregorianDic.daysNames);\r\n                scope.option.gregorianDic.daysNamesUntouched = dayNames;\r\n                scope.option.gregorianDic.daysNames = dayNames.slice(scope.option.gregorianStartDay,7).concat(dayNames.slice(0,scope.option.gregorianStartDay));\r\n                \r\n                scope.disableDays = ADMdtpFactory.parseDisablePattern(scope.option);\r\n                scope.calType = scope.option.calType;\r\n                scope.monthNames = scope.option[scope.calType + 'Dic'].monthsNames;\r\n                scope.daysNames = scope.option[scope.calType + 'Dic'].daysNames;\r\n                scope.timeoutValue = [0,0];\r\n                scope.dtpValue = {};\r\n\r\n                scope.minDate = scope.mindate?new Date(scope.mindate):null;\r\n                scope.maxDate = scope.maxdate?new Date(scope.maxdate):null;\r\n                \r\n                scope.current = {\r\n                    year: '',\r\n                    month: '',\r\n                    monthDscr: '',\r\n                    days: []\r\n                };\r\n                \r\n\r\n                scope.updateMasterValue = function(newDate, releaseTheBeast) {\r\n                    if (!newDate)\r\n                        newDate = (scope.dtpValue.unix ? scope.dtpValue : {});\r\n                        \r\n\r\n                    scope.$applyAsync(function() {\r\n                        scope.dtpValue = newDate;\r\n                        var minute = Number(scope.time.minute);\r\n                        minute -= minute % scope.option.minuteStep;\r\n                        scope.time.minute = minute.lZero();\r\n                        scope.dtpValue.formated = ADMdtpFactory.dateFormat(newDate, scope.time, scope.option.format);\r\n                        scope.dtpValue.fullDate = ADMdtpFactory.joinTime(newDate.unix, scope.time);\r\n                        scope.fullData = {\r\n                            formated: scope.dtpValue.formated,\r\n                            lDate: scope.dtpValue.fullDate.dtp_shortDate(),\r\n                            gDate: scope.dtpValue.fullDate,\r\n                            unix: scope.dtpValue.fullDate.getTime(),\r\n                            year: newDate.year,\r\n                            month: newDate.month,\r\n                            day: newDate.day,\r\n                            hour: Number(scope.time.hour),\r\n                            minute: Number(scope.time.minute),\r\n                            minDate: scope.minDate,\r\n                            maxDate: scope.maxDate,\r\n                            calType: scope.calType,\r\n                            format: scope.option.format\r\n                        }\r\n\r\n                        ngModel.$setViewValue( scope.dtpValue.formated );\r\n                        ngModel.$render();\r\n                            \r\n                        if (scope.hasInputDtp)\r\n                            element[0].querySelector('[dtp-input]').value = scope.dtpValue.formated;\r\n\r\n                        if (releaseTheBeast) {\r\n                            if (scope.onChange)\r\n                                scope.onChange({date:scope.fullData});\r\n                            if (releaseTheBeast == 'time' && scope.onTimechange)\r\n                                scope.onTimechange({date:scope.fullData});\r\n                            else if (releaseTheBeast == 'day' && scope.onDatechange)\r\n                                scope.onDatechange({date:scope.fullData});\r\n                        }\r\n\r\n                    });\r\n                }\r\n                \r\n                scope.parseInputValue = function(valueStr, resetTime, releaseTheBeast) {\r\n                    if (valueStr == 'today') {\r\n                        valueStr = ADMdtpFactory.removeTime(new Date()).getTime();\r\n                    }\r\n                    \r\n                    var _dateTime = false;\r\n\r\n                    if (valueStr) {\r\n\r\n                        if (scope.calType == 'jalali') {\r\n                            _dateTime = ADMdtpFactory.validateJalaliDate(valueStr, scope.option.format);\r\n                        }\r\n                        else {\r\n                            if (typeof valueStr == \"string\")\r\n                                valueStr = ADMdtpFactory.toRegularFormat(valueStr, scope.calType, scope.option.format);\r\n                                \r\n                            _dateTime = new Date(valueStr);\r\n                            _dateTime = (/invalid/i.test(_dateTime))?false:_dateTime;\r\n                        }\r\n                    }\r\n\r\n                    if (_dateTime) {\r\n                        scope.dtpValue = {\r\n                            year: _dateTime.year || _dateTime.getFullYear(),\r\n                            month: _dateTime.month || _dateTime.getMonth()+1,\r\n                            day: _dateTime.day || _dateTime.getDate(),\r\n                            unix: _dateTime.unix || _dateTime.getTime(),\r\n                            fullDate: _dateTime.gDate || _dateTime\r\n                        }\r\n                        \r\n                        scope.dtpValue.fullDate = ADMdtpFactory.removeTime(scope.dtpValue.fullDate);\r\n                        scope.dtpValue.unix = scope.dtpValue.fullDate.getTime();\r\n\r\n                        scope.time = {\r\n                            hour: ( _dateTime.getHours?_dateTime.getHours():_dateTime.hour ).lZero(),\r\n                            minute: ( _dateTime.getMinutes?_dateTime.getMinutes():_dateTime.minute ).lZero()\r\n                        }\r\n\r\n                        scope.updateMasterValue(false, releaseTheBeast);\r\n                    }\r\n                    else {\r\n                        if (resetTime)\r\n                            scope.time = {\r\n                                hour: '00',\r\n                                minute: '00'\r\n                            }\r\n                        }\r\n                }\r\n                scope.parseInputValue(ngModel.$viewValue || scope.option.default, true, false);\r\n                \r\n                ngModel.$formatters.push(function (val) {\r\n                    if (!val && scope.dtpValue.unix) {\r\n                        scope.destroy();\r\n                    }\r\n                    else if (scope.dtpValue && val == scope.dtpValue.formated) {\r\n                    }\r\n                    else {\r\n                        scope.parseInputValue(val, false, true);\r\n                    }\r\n\r\n                    return val;\r\n                });\r\n                \r\n                if (scope.option.watchingOptions) {\r\n                    //return;\r\n                    scope.$watch('options', function(nuVal, old) {\r\n                        if (!nuVal || typeof nuVal != 'object') return;\r\n                        if (old && JSON.stringify(old) == JSON.stringify(nuVal)) return;\r\n                        \r\n                        var daysNamesUntouched = scope.option.gregorianDic.daysNamesUntouched;\r\n                        scope.option = angular.merge(angular.copy(ADMdtp.getOptions()), nuVal);\r\n                        scope.option.minuteStep = Math.max(Math.min(scope.option.minuteStep, 60), 1);\r\n                        \r\n                        if (nuVal.gregorianDic && nuVal.gregorianDic.daysNames)\r\n                            scope.option.gregorianDic.daysNamesUntouched = nuVal.gregorianDic.daysNames;\r\n                        else\r\n                            scope.option.gregorianDic.daysNamesUntouched = daysNamesUntouched;\r\n                        \r\n                        var dayNames = angular.copy(scope.option.gregorianDic.daysNamesUntouched);\r\n                        scope.option.gregorianDic.daysNames = dayNames.slice(scope.option.gregorianStartDay,7).concat(dayNames.slice(0,scope.option.gregorianStartDay));\r\n\r\n                        scope.disableDays = ADMdtpFactory.parseDisablePattern(scope.option);\r\n                        if (scope.calTypeChanged) scope.calTypeChanged(scope.option.calType);\r\n                    }, true);\r\n                }                \r\n                \r\n                attrs.$observe(\"disable\", function (_newVal) {\r\n                    scope.$applyAsync(function() {\r\n                        _newVal = scope.$eval(_newVal);\r\n                        scope.disable = _newVal;\r\n                    });\r\n                });\r\n                \r\n                attrs.$observe(\"mindate\", function (_newVal) {\r\n                    scope.$applyAsync(function() {\r\n                        _newVal = scope.$eval(_newVal);\r\n                        scope.minDate = ADMdtpFactory.convertToUnix(_newVal, scope.calType, scope.option.format);\r\n                    });\r\n                });\r\n                \r\n                attrs.$observe(\"maxdate\", function (_newVal) {\r\n                    scope.$applyAsync(function() {\r\n                        _newVal = scope.$eval(_newVal);\r\n                        scope.maxDate = ADMdtpFactory.convertToUnix(_newVal, scope.calType, scope.option.format);\r\n                    });\r\n                }); \r\n\r\n                scope.onKeydown = function(e) {\r\n                    if (e.keyCode == 9)\r\n                        scope.closeCalendar();\r\n                }\r\n                \r\n                scope.openCalendar = function() {\r\n                    if (scope.showCalendarStat || scope.disable)\r\n                        return;\r\n                    \r\n                    scope.timeoutValue[0] = 0;\r\n                    scope.showCalendarStat = true;\r\n                    \r\n                    var _admDtpCalendarHtml = angular.element('<adm-dtp-calendar id=\"'+ scope.dtpId +'\" style=\"opacity:0; z-index: '+ scope.option.zIndex +';\"></adm-dtp-calendar>');\r\n                    angular.element(document.body).append(_admDtpCalendarHtml);\r\n\r\n                    scope.$applyAsync(function () {\r\n                        $compile(_admDtpCalendarHtml)(scope);\r\n                    });\r\n                    \r\n                    $timeout(function() {\r\n                        var top = document.documentElement.scrollTop || document.body.scrollTop;\r\n                        var popup = document.getElementById(scope.dtpId);\r\n                        var popupBound = popup.getBoundingClientRect();\r\n                        var _input = element.children().children()[0];\r\n                        var _inputBound = _input.getBoundingClientRect();\r\n                        var _corner = {\r\n                            x: _inputBound.left,\r\n                            y: _inputBound.top + _inputBound.height\r\n                        }\r\n\r\n                        var _totalSize = {\r\n                            width: popupBound.width + _corner.x,\r\n                            height: popupBound.height + _corner.y\r\n                        }\r\n                        \r\n                        var _pos = {\r\n                            top: '',\r\n                            bottom: '',\r\n                            left: '',\r\n                            right: ''\r\n                        }\r\n                        if (_totalSize.height > window.innerHeight)\r\n                            _pos.top = (top + _inputBound.top - popupBound.height) + 'px';\r\n                        else\r\n                            _pos.top = (top + _inputBound.top + _inputBound.height) + 'px';\r\n                        \r\n                        if (_totalSize.width > window.innerWidth)\r\n                            _pos.left = (_corner.x + window.innerWidth - _totalSize.width - 20) + 'px';\r\n                        else\r\n                            _pos.left = _corner.x + 'px';\r\n                        \r\n                        angular.element(popup).css({top: _pos.top, bottom: _pos.bottom, left: _pos.left, opacity: 1});\r\n                        \r\n                    }, 70);\r\n                    \r\n                    if (scope.onOpen)\r\n                        scope.onOpen();\r\n                }\r\n                \r\n                scope.closeCalendar = function() {\r\n                    if (!scope.showCalendarStat)\r\n                        return;\r\n                    \r\n                    scope.$applyAsync(function() {\r\n                        scope.monthPickerStat = false;\r\n                        scope.timePickerStat = false;\r\n                        scope.showCalendarStat = false;\r\n                    });\r\n                \r\n                    var popup = document.getElementById(scope.dtpId);\r\n                    if (popup) {\r\n                        angular.element(popup).remove();\r\n                        \r\n                        if (scope.onClose)\r\n                            scope.onClose();\r\n                    }\r\n                    \r\n                }\r\n                \r\n                scope.toggleCalendar = function() {\r\n                    if (scope.showCalendarStat)\r\n                        scope.closeCalendar();\r\n                    else\r\n                        scope.openCalendar();\r\n                }\r\n\r\n                scope.destroy = function(noRefresh) {\r\n                    if (scope.disable)\r\n                        return;\r\n                    \r\n                    scope.monthPickerStat = false;\r\n                    scope.timePickerStat = false;\r\n                    \r\n                    scope.current = {\r\n                        year: '',\r\n                        month: '',\r\n                        monthDscr: '',\r\n                        days: []\r\n                    };\r\n                    scope.dtpValue = {};\r\n                    scope.fullData = {\r\n                        minDate: scope.minDate,\r\n                        maxDate: scope.maxDate\r\n                    }\r\n                    scope.time = {\r\n                        hour: '00',\r\n                        minute: '00'\r\n                    }\r\n                    var _standValue = new Date();                   \r\n\r\n                    if (scope.calType == 'jalali')\r\n                        _standValue = ADMdtpFactory.convertToJalali(_standValue);\r\n\r\n                    ngModel.$setViewValue('');\r\n                    ngModel.$render();\r\n                    \r\n                    if (!noRefresh)\r\n                        admDtp.fillDays(_standValue, !scope.option.transition);\r\n                    \r\n                    if (scope.onChange)\r\n                        scope.onChange({date:scope.fullData});\r\n                }\r\n                                \r\n                var dtpOpen = element[0].querySelector('[dtp-open]') || {};\r\n                dtpOpen.onclick = scope.openCalendar;\r\n                \r\n                var dtpClose = element[0].querySelector('[dtp-close]') || {};\r\n                dtpClose.onclick = scope.closeCalendar;\r\n\r\n                var dtpToggle = element[0].querySelector('[dtp-toggle]') || {};\r\n                dtpToggle.onclick = scope.toggleCalendar;\r\n                \r\n                var dtpDestroy = element[0].querySelector('[dtp-destroy]') || {};\r\n                dtpDestroy.onclick = scope.destroy;\r\n            },\r\n            controller: ['$scope', function($scope) {\r\n\r\n                this.updateMasterValue = function(newDate, releaseTheBeast) {\r\n                    $scope.updateMasterValue(newDate, releaseTheBeast);\r\n                }\r\n\r\n                this.fillDays = function(date, noTransition) {\r\n\r\n                    if (noTransition)\r\n                        $scope.timeoutValue[0] = 0;\r\n                    else\r\n                        $scope.loadingDays = true;\r\n\r\n\r\n                    var _mainDate = angular.copy(date);\r\n\r\n                    if ($scope.calType == 'jalali') {\r\n                        var _gDate = ADMdtpConvertor.toGregorian(date.year, date.month, 29);\r\n                        date = [_gDate.year, _gDate.month, _gDate.day].dtp_toDate('date');\r\n                    }\r\n\r\n                    var _input = {\r\n                        year: date.getFullYear(),\r\n                        month: date.getMonth()+1,\r\n                        day: date.getDate()\r\n                    }\r\n\r\n                    $scope.$applyAsync(function() {\r\n                        var _month = _mainDate.month || (_mainDate.getMonth()+1);\r\n                        angular.merge($scope.current, {\r\n                            year: _mainDate.year || _mainDate.getFullYear(),\r\n                            month: _month,\r\n                            monthDscr: $scope.monthNames[_month-1]\r\n                        });\r\n                    });\r\n\r\n                    var startDay, shift = startDay = $scope.option.gregorianStartDay;\r\n\r\n                    if ($scope.calType == 'jalali')\r\n                        shift = 0, startDay = 6;\r\n\r\n                    var _today = new Date();\r\n                    _today = [_today.getFullYear(), _today.getMonth()+1, _today.getDate(), 1, 0].dtp_toDate('unix');\r\n\r\n                    var _selected = ($scope.dtpValue.unix || -1), _selectedIdx;\r\n\r\n                    var _currDay = [_input.year, _input.month, _input.day, 1, 0].dtp_toDate('date');\r\n                    var _firstDayName = new Date(angular.copy(_currDay).setDate(1)).getDay();\r\n\r\n                    var _days = [];\r\n\r\n                    var _diff = -1 * (_firstDayName - shift + 7) % 7,\r\n                        _ite_date, _disable = true;\r\n                    var _lastValidStat = -1;\r\n\r\n                    if ($scope.calType == 'jalali') {\r\n                        var _ite_date = new Date(angular.copy(_currDay).setDate(_diff));\r\n                        var _pDate = ADMdtpConvertor.toJalali(_ite_date.getFullYear(), _ite_date.getMonth()+1, _ite_date.getDate());\r\n                        _diff -= (Math.ceil((_pDate.day-1)/7)*7 + 1);\r\n                    }\r\n\r\n\r\n                    while (true) {\r\n                        _diff++;\r\n                        var _ite_date = new Date(angular.copy(_currDay).setDate(_diff));\r\n                        var _pDate = false;\r\n\r\n                        if ($scope.calType == 'jalali') {\r\n                            _pDate = ADMdtpConvertor.toJalali(_ite_date.getFullYear(), _ite_date.getMonth()+1, _ite_date.getDate());\r\n                        }\r\n\r\n                        var _thisDay = _pDate.day || _ite_date.getDate();\r\n\r\n                        if (_thisDay == 1)\r\n                            _disable = !_disable;\r\n\r\n                        if (_disable && _thisDay < 8 && _ite_date.getDay() == startDay)\r\n                            break;\r\n\r\n\r\n                        var _isMin = false;\r\n                        var _valid = 1;\r\n                        if ($scope.minDate || $scope.maxDate) {\r\n                            var _dateTime = ADMdtpFactory.joinTime(_ite_date, $scope.time);\r\n                            if (($scope.minDate && !ADMdtpFactory.isDateBigger(_dateTime,$scope.minDate)) || ($scope.maxDate && !ADMdtpFactory.isDateBigger($scope.maxDate,_dateTime))) {\r\n                                _valid = 0;\r\n\r\n                                if (_lastValidStat == 2)\r\n                                    _days[_days.length-1].isMax = true;\r\n                            }\r\n                            else {\r\n                                _valid = 2;\r\n\r\n                                if (_lastValidStat == 0)\r\n                                    _isMin = true;\r\n                            }\r\n                            _lastValidStat = _valid;\r\n                        }\r\n\r\n                        var _unix = _ite_date.getTime();\r\n                        var _dayName = _ite_date.getDay() + (($scope.calType=='jalali')?1:0);\r\n                        \r\n                        var _day = {\r\n                            day: _thisDay,\r\n                            month: _pDate.month || _ite_date.getMonth()+1,\r\n                            year: _pDate.year || _ite_date.getFullYear(),\r\n                            dayName: _dayName,\r\n                            fullDate: _ite_date,\r\n                            disable: _disable,\r\n                            today: (_unix == _today),\r\n                            selected: (_unix == _selected),\r\n                            unix: _unix,\r\n                            valid: _valid,\r\n                            isMin: _isMin\r\n                        }\r\n\r\n                        if (ADMdtpFactory.isDayDisable($scope.calType, $scope.disableDays, _day))\r\n                            _day.valid = 0;\r\n\r\n                        if (_day.selected)\r\n                            _selectedIdx = _days.length;\r\n\r\n                        _days.push(_day);\r\n                    }\r\n\r\n                    $timeout(function() {\r\n\r\n                        $scope.timeoutValue[0] = 500;\r\n\r\n                        $scope.$applyAsync(function() {\r\n                            $scope.current.days = _days;\r\n                            if (_selectedIdx)\r\n                                $scope.updateMasterValue($scope.current.days[_selectedIdx]);\r\n                            $timeout(function() {\r\n                                $scope.loadingDays = false;\r\n                            }, $scope.timeoutValue[1]);\r\n                        });\r\n\r\n                    }, $scope.timeoutValue[0]);\r\n                }\r\n\r\n                this.reload = function() {\r\n                    var _cur = angular.copy($scope.current);\r\n                    _cur.day = 29;\r\n                    var _date = [_cur.year, _cur.month, 8].dtp_toDate('date');\r\n                    if ($scope.calType == 'jalali')\r\n                        _date = _cur;\r\n                    this.fillDays(_date, !$scope.option.transition);\r\n                }\r\n\r\n                this.vm = $scope;\r\n            }],\r\n            //templateUrl: 'js/ADM-dateTimePicker/ADM-dateTimePicker_view.html'\r\n            template: '<div class=\"ADMdtp ADMdtp-container\" ng-class=\"{rtl: (calType==\\'jalali\\'), touch: option.isDeviceTouch, disable: disable}\"> <div class=\"clickOutContainer\" click-out=\"closeCalendar()\"  alias=\"{{dtpId}}\"> <ng-transclude></ng-transclude> <div ng-if=\"defaultTemplate\" class=\"ADMdtpInput masterInput\" ng-class=\"{touch: option.isDeviceTouch, disable: disable, open: showCalendarStat}\"> <input type=\"text\" name=\"{{name}}\" ng-model=\"dtpValue.formated\" ng-focus=\"openCalendar()\" ng-click=\"openCalendar()\" ng-readonly=\"option.freezeInput || option.isDeviceTouch || disable\" ng-blur=\"modelChanged()\" ng-keydown=\"onKeydown($event)\" ng-required=\"ngRequired\" > <div class=\"dtp-ig\" ng-click=\"toggleCalendar()\"> <svg class=\"dtp-i fakeIcon\" viewBox=\"0 0 24 24\"> <use xlink:href=\"#dtp-i-right\" /> </svg> <svg class=\"dtp-i calendarIcon\" viewBox=\"0 0 24 24\"> <use xlink:href=\"#dtp-i-calendar\" /> </svg> <svg class=\"dtp-i closeIcon\" viewBox=\"0 0 24 24\"> <use xlink:href=\"#dtp-i-off\" /> </svg> </div> <svg class=\"removeIcon\" viewBox=\"0 0 24 24\" ng-if=\"dtpValue.formated\" ng-click=\"destroy()\"> <use xlink:href=\"#dtp-i-close\" /> </svg> </div> </div> <svg style=\"display:none;\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\"> <defs> <g id=\"dtp-i-calendar\"> <path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/> <path d=\"M0 0h24v24H0z\" fill=\"none\"/> </g> <g id=\"dtp-i-clock\"> <path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/> <path d=\"M0 0h24v24H0z\" fill=\"none\"/> <path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/> </g> <g id=\"dtp-i-right\"> <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/> <path d=\"M0 0h24v24H0z\" fill=\"none\"/> </g> <g id=\"dtp-i-close\"> <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/> <path d=\"M0 0h24v24H0z\" fill=\"none\"/> </g> <g id=\"dtp-i-off\"> <path d=\"M0 0h24v24H0z\" fill=\"none\"/> <path d=\"M13 3h-2v10h2V3zm4.83 2.17l-1.42 1.42C17.99 7.86 19 9.81 19 12c0 3.87-3.13 7-7 7s-7-3.13-7-7c0-2.19 1.01-4.14 2.58-5.42L6.17 5.17C4.23 6.82 3 9.26 3 12c0 4.97 4.03 9 9 9s9-4.03 9-9c0-2.74-1.23-5.18-3.17-6.83z\"/> </g> </defs> </svg> </div>'\r\n        };\r\n    }\r\n    \r\n    var dtpInputDirective = function() {\r\n        return {\r\n            require: ['^^admDtp', 'ngModel'],\r\n            link: function(scope, element, attrs, ctrls) {\r\n                var admDtp = ctrls[0], ngModel = ctrls[1];\r\n\r\n                ngModel.$parsers.push(function() {\r\n                    return ngModel.$modelValue;\r\n                })\r\n\r\n                admDtp.vm.hasInputDtp = true;\r\n\r\n                element.on('focus', function() {\r\n                    admDtp.vm.openCalendar();\r\n                });\r\n                element.on('blur', function() {\r\n                    admDtp.vm.modelChanged(element[0].value);\r\n                });\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    /* https://github.com/IamAdamJowett/angular-click-outside */\r\n    var clickOutside = function($document) {\r\n        return {\r\n            restrict: 'A',\r\n            scope: {\r\n                clickOut: '&'\r\n            },\r\n            link: function ($scope, elem, attr) {\r\n                if (attr.id == undefined) attr.$set('id', 'id_' + Math.random());\r\n\r\n                $document.on('click contextmenu', function (e) {\r\n                    var i = 0,\r\n                        element;\r\n\r\n                    if (!e.target) return;\r\n                    \r\n                    var classList = (attr.alias !== undefined) ? attr.alias.replace(', ', ',').split(',') : [];\r\n                    classList.push(attr.id);\r\n\r\n                    for (element = e.target; element; element = element.parentNode) {\r\n                        var id = element.id;\r\n                        var classNames = element.className;\r\n\r\n                        if (id !== undefined) {\r\n                            for (i = 0; i < classList.length; i++) {\r\n                                if (id.indexOf(classList[i]) > -1 || (typeof classNames == 'string' && classNames.indexOf(classList[i]) > -1)) {\r\n                                    return;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    $scope.$eval($scope.clickOut);\r\n                });\r\n            }\r\n        };\r\n    }\r\n    \r\n    var ADMdtpConfig = function(ADMdtp) {\r\n        \r\n        ADMdtp.setOptions({isDeviceTouch: ('ontouchstart' in window || navigator.maxTouchPoints)});\r\n        \r\n        var style = document.createElement('style');\r\n        style.type = 'text/css';\r\n        \r\n        var vendor = function(css) {\r\n            return '-moz-' + css + '-o-' + css + '-webkit-' + css + css;\r\n        }\r\n        \r\n        for (var i=1; i<51; i++)\r\n            style.innerHTML += '.ADMdtpDays>span:nth-child('+ i +')>span {'+ vendor('transition: all .5s, transform 0.2s '+ i*.01 +'s cubic-bezier(0.680, -0.550, 0.265, 1.550); ') +'}';\r\n\r\n        document.getElementsByTagName('head')[0].appendChild(style);\r\n        \r\n    }\r\n\r\n    return angular.module('ADM-dateTimePicker', [])\r\n        .constant('constants', {})\r\n        .provider('ADMdtp', ADMdtpProvider)\r\n        .filter('digitType', [ADMdtpDigitTypeFilter])\r\n        .factory('ADMdtpConvertor', [ADMdtpConvertor])\r\n        .factory('ADMdtpFactory', ['ADMdtpConvertor', ADMdtpFactory])\r\n        .directive('admDtp', ['ADMdtp', 'ADMdtpConvertor', 'ADMdtpFactory', 'constants', '$compile', '$timeout', ADMdtpDirective])\r\n        .directive('admDtpCalendar', ['ADMdtp', 'ADMdtpConvertor', 'ADMdtpFactory', 'constants', '$timeout', ADMdtpCalendarDirective])\r\n        .directive('dtpInput', [dtpInputDirective])\r\n        .directive('clickOut', ['$document', clickOutside])\r\n        .config(['ADMdtpProvider', ADMdtpConfig]);\r\n}(window.angular));\r\n\r\n\r\n\r\n"
  ]
}