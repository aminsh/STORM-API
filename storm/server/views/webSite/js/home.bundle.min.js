(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

(function (window, document, $) {

    var $items = $(".so-home-content_apis_list_item[data-num]");
    var $list = $(".so-home-content_apis_list");
    var $content = $(".so-home-content_apis_upper");
    var $htmlBody = $("html, body");
    var $section = $("#APIs");
    var $closeBtn = $("#APIs_close");

    $items.on("click", function () {

        var num = $(this).data("num");
        openItem(num);
    });

    $closeBtn.on("click", closeItem);

    function openItem(num) {

        $list.addClass("so-diactive");
        $content.addClass("so-active");

        // close everything
        $(".so-home-content_apis_upper_title, .so-home-content_apis_upper_p").css({
            display: "none"
        });

        // Open the header
        $(".so-home-content_apis_upper_title[data-num='" + num + "']").css({
            display: "block"
        });
        // Open the content
        $(".so-home-content_apis_upper_p[data-num='" + num + "']").css({
            display: "block"
        });

        // Open the close btn
        $closeBtn.css({
            display: "block"
        });

        $htmlBody.animate({
            scrollTop: $section.offset().top
        });
    }

    function closeItem() {

        $list.removeClass("so-diactive");
        $content.removeClass("so-active");
        $closeBtn.css({
            display: "none"
        });
    }

    module.exports = {
        openItem: openItem,
        closeItem: closeItem
    };
})(window, document, $);

},{}],2:[function(require,module,exports){
"use strict";

(function (window, document, $) {

    function loginByGoogle() {

        var url = window.location.origin + "/auth/google";
        window.open(url, '_self');
    }

    module.exports = {
        loginByGoogle: loginByGoogle
    };
})(window, document, $);

},{}],3:[function(require,module,exports){
"use strict";

(function (window, document, $) {

    var $window = $(window);
    var $htmlBody = $("html, body");
    var $section = $("#features");
    var $boxes = $(".so-home_features_content_box");
    var $blackLayer = $(".so-home_features_black-layer");
    var $upperLayer = $(".so-home_features_upper-layer");
    var $content = $(".so-home_features_content");
    var $title = $("#features_title");
    var $closer = $(".so-features_btn_close");
    var $featuresCloseBtn = $("#features_close");
    var $contentHolder = $(".so-home_features_upper-layer_content_holder");
    var vpHeight = document.documentElement.clientHeight;

    $boxes.on("click", function () {

        var $this = $(this);

        if (!$this.data("num")) return;

        openFeaturesLayer($this.data("num"));
    });

    $closer.on("click", closeFeaturesLayer);

    function openFeaturesLayer(num) {

        $content.addClass("so-blur");
        $blackLayer.addClass("so-active");
        $upperLayer.addClass("so-active");

        $(".so-home_features_upper-layer_content_h").css({
            display: "none"
        });
        $(".so-home_features_upper-layer_content_p").css({
            display: "none"
        });
        $(".so-home_features_upper-layer_content_img").css({
            display: "none"
        });

        $(".so-home_features_upper-layer_content_h[data-num='" + num + "']").css({
            display: "block"
        });
        $(".so-home_features_upper-layer_content_p[data-num='" + num + "']").css({
            display: "block"
        });
        $(".so-home_features_upper-layer_content_img[data-num='" + num + "']").css({
            display: "block"
        });
        $featuresCloseBtn.removeClass("fadeOutRight").addClass("so-anim-dly-1s").addClass("fadeInLeft");

        $htmlBody.animate({
            scrollTop: $section.offset().top
        });
    }

    function closeFeaturesLayer() {

        $content.removeClass("so-blur");
        $blackLayer.removeClass("so-active");
        $upperLayer.removeClass("so-active");

        $featuresCloseBtn.removeClass("fadeInLeft").removeClass("so-anim-dly-1s").addClass("fadeOutRight");
    }

    module.exports = {
        openFeaturesLayer: openFeaturesLayer,
        closeFeaturesLayer: closeFeaturesLayer
    };
})(window, document, $);

},{}],4:[function(require,module,exports){
"use strict";

// General Dependencies

var _textType = require("./text-type.js");

var _textType2 = _interopRequireDefault(_textType);

require("./page-scroll.js");

require("./material_input.js");

var _menuBtn = require("./menu-btn.js");

var _menuBtn2 = _interopRequireDefault(_menuBtn);

var _topMenu = require("./top-menu.js");

var _topMenu2 = _interopRequireDefault(_topMenu);

require("./sign-form.js");

require("./features.js");

require("./apis.js");

var _authentication = require("./authentication.js");

var _authentication2 = _interopRequireDefault(_authentication);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var wow = new WOW({
    boxClass: 'wow', // default
    animateClass: 'animated', // default
    offset: 50, // default
    mobile: true, // default
    live: true // default
});
wow.init();

(0, _textType2.default)("#so-amin-type", ["شیخی", "بنیانگذار و مدیر فنی"]);
(0, _textType2.default)("#so-sanaz-type", ["سلیمانی", "بنیانگذار و مدیر کسب و کار"]);
/*text_typing(
    "#so-ramin-type"
    ,[
        "یزدانی",
        "مهندس محصول"
    ]
);
text_typing(
    "#so-smrsan-type"
    ,[
        "ابوالحسنی",
        "توسعه دهنده"
    ]
);*/

// My Dependencies


// code
(function (window, document, $, menuBtn, topMenu) {

    var // $topMenu = topMenu.get(),
    $menuBtn = menuBtn.get(),
        $topMenu_toggle = $(".so-top-menu_toggle"),
        $topMenu_close = $(".so-top-menu_close, .so-top-menu .so-top-menu_list a[href^='#']"); //$body = $( "body" );

    // start -- TopMenu
    function topMenu_close_fn() {
        topMenu.closeTopMenu();
        $menuBtn.removeClass("so-active");
        // $body[0].classList.remove("so-no-scroll");
    }
    function topMenu_open_fn() {
        topMenu.openTopMenu();
        $menuBtn.addClass("so-active");
        // $body[0].classList.add("so-no-scroll");
    }

    $topMenu_toggle.on("click", function () {

        if (topMenu.isOpen()) {
            return topMenu_close_fn();
        }
        topMenu_open_fn();
    });

    $topMenu_close.on("click", topMenu_close_fn);
    // end -- TopMenu
    //start -- SignUp/In Form

    $("#loginByGoogle").on("click", _authentication2.default.loginByGoogle);

    //end -- SignUp/In Form
})(window, document, $, _menuBtn2.default, _topMenu2.default);

},{"./apis.js":1,"./authentication.js":2,"./features.js":3,"./material_input.js":5,"./menu-btn.js":6,"./page-scroll.js":7,"./sign-form.js":8,"./text-type.js":9,"./top-menu.js":10}],5:[function(require,module,exports){
"use strict";

(function (console, window, document, $) {

    var $mInputs = $("div.so-material_input > input");

    $mInputs.on("blur", function () {

        checkIfEmpty(this);

        if (!this.value) return this.classList.remove("so-active");

        this.classList.add("so-active");
    }).on("focus", function () {

        checkIfEmpty(this);
        this.classList.add("so-active");
    }).on("keydown keyup keypress change", function () {
        checkIfEmpty(this);
    }).addClass("so-empty");

    function checkIfEmpty(elem) {

        if (!elem.value) return elem.classList.add("so-empty");

        elem.classList.remove("so-empty");
    }
})(console, window, document, $);

},{}],6:[function(require,module,exports){
"use strict";

(function (window, document, $) {

    var $btns = $(".so-menu-btn");

    $btns.on("click", function () {
        $(this).toggleClass("so-active");
    });

    function get() {
        return $btns;
    }

    module.exports = {
        get: get
    };
})(window, document, $);

},{}],7:[function(require,module,exports){
"use strict";

var ex = {};

(function (window, document, $) {

    var $htmlBody = $("html, body");
    var $contactSection = $("section#contact");

    // Scroll Page Link
    $('a.page-scroll[href^="#"]').on('click', function (event) {

        event.preventDefault();
        $('html, body').stop().animate({
            scrollTop: $($.attr(this, "href")).offset().top
        }, 500);
    });

    // Set the section indicator
    var lastSectionIndex = -1;

    function setIndicator() {

        var $window = $(window),
            vpHeight = document.documentElement.clientHeight,
            scrollTop = $window.scrollTop(),
            offsetTops = [{ index: 0, top: 0, height: vpHeight /* The First Section Properties */ }],
            $sections = $("div.so-home-content_wrapper > section"),
            $sectionLinks = $(".so-home-nav_links_list a.page-scroll[href^='#']"),
            $smSectionLinks = $(".so-top-menu_list a.page-scroll[href^='#']"),

        // sectionIndex = Math.round(scrollTop / vpHeight),
        // goRight = lastSectionIndex > sectionIndex,
        // equalIndex = lastSectionIndex === sectionIndex,
        $indicated = $("a.page-scroll[href^='#'].indicated"),
            $smIndicated = $("a.page-scroll[href^='#'].sm-indicated");

        $sections.each(function (index, elem) {

            var $elem = $(elem);
            offsetTops.push({
                index: index + 1,
                top: $elem.offset().top,
                height: $elem.outerHeight()
            });
        }).promise().done(function () {

            var sectionIndex = void 0,
                goRight = void 0,
                equalIndex = void 0;

            for (var i = 0; i < offsetTops.length; i++) {

                if (scrollTop >= offsetTops[i].top && scrollTop < offsetTops[i].top + Math.round(offsetTops[i].height / 2)) {

                    sectionIndex = i;
                    goRight = lastSectionIndex > sectionIndex;
                    equalIndex = lastSectionIndex === sectionIndex;
                    break;
                } else if (scrollTop >= offsetTops[i].top + Math.round(offsetTops[i].height / 2) && scrollTop <= offsetTops[i].top + offsetTops[i].height) {

                    if (offsetTops[i + 1] && scrollTop + vpHeight >= offsetTops[i + 1].top + 200) {

                        sectionIndex = i + 1;
                        goRight = lastSectionIndex > sectionIndex;
                        equalIndex = lastSectionIndex === sectionIndex;
                        break;
                    }
                    sectionIndex = i;
                    goRight = lastSectionIndex > sectionIndex;
                    equalIndex = lastSectionIndex === sectionIndex;
                    break;
                } else if (scrollTop + vpHeight >= offsetTops[i].top + Math.round(offsetTops[i].height / 2) && scrollTop + vpHeight <= offsetTops[i].top + offsetTops[i].height) {

                    sectionIndex = i;
                    goRight = lastSectionIndex > sectionIndex;
                    equalIndex = lastSectionIndex === sectionIndex;
                    break;
                }
            }
            var $sectionLink = $($sectionLinks[sectionIndex]);
            if (sectionIndex !== 0) $sectionLinks[sectionIndex - 1].classList.add("indicate-right");
            lastSectionIndex = sectionIndex;

            if (equalIndex && $indicated.length === 0) {
                $sectionLink[0].classList.remove("indicate-right");
                $sectionLink[0].classList.add("indicated");
                return;
            }

            // FadeOut Last
            if ($indicated.length !== 0) {
                if (goRight) {
                    $indicated[0].classList.remove("indicate-right");
                } else {
                    $indicated[0].classList.add("indicate-right");
                }
                $sectionLinks.removeClass("indicated");
            }
            $smSectionLinks.removeClass("sm-indicated");

            // FadeIn New
            if (goRight) {
                $sectionLink[0].classList.add("indicate-right");
            } else {
                $sectionLink[0].classList.remove("indicate-right");
            }
            $sectionLink[0].classList.add("indicated");
            if (sectionIndex !== 0) $smSectionLinks[sectionIndex - 1].classList.add("sm-indicated");
        });
    }
    setIndicator();

    // Set the navbar style
    function setNavBarStyle() {

        var $window = $(window),
            scrollTop = $window.scrollTop(),
            vpHeight = document.documentElement.clientHeight,
            $topNav = $("div.so-home-nav_wrapper");

        if (scrollTop >= vpHeight) {

            if ($topNav[0].classList.contains("so-home-nav_scroll-active")) return;
            $topNav[0].classList.add("so-home-nav_scroll-active");
            return;
        }
        $topNav[0].classList.remove("so-home-nav_scroll-active");
    }
    setNavBarStyle();
    ex.setNavBarStyle = setNavBarStyle;

    $(document).on("scroll", function () {
        setIndicator();
        setNavBarStyle();
    });

    // Scroll to contact
    $(".so-scroll-to-contact").on("click", function () {

        $htmlBody.animate({
            scrollTop: $contactSection.offset().top
        });
    });
})(window, document, $);

module.exports = ex;

},{}],8:[function(require,module,exports){
"use strict";

(function (window, document, $) {

    var selectedForm = 0;
    var $contents = $(".so-home-first-section_form_content");

    $contents.each(function (index, elem) {

        if (index === 0) return;

        var $elem = $(elem);

        $elem.css({
            right: "-100%",
            left: "100%",
            opacity: "0"
        });
    });

    $(".so-sign-form_go-next").on("click", goNext);
    $(".so-sign-form_go-prev").on("click", goPrev);

    function goNext() {

        var $newContent = $(".so-home-first-section_form_content[data-num='" + (selectedForm + 1) + "']");

        if ($newContent.length === 0) return;

        var $oldContent = $(".so-home-first-section_form_content[data-num='" + selectedForm + "']");
        selectedForm += 1;

        $oldContent.stop().animate({
            left: "-100%",
            right: "100%",
            opacity: "0"
        });
        $newContent.stop().animate({
            left: "0",
            right: "0",
            opacity: "1"
        });
    }

    function goPrev() {

        var $newContent = $(".so-home-first-section_form_content[data-num='" + (selectedForm - 1) + "']");

        if ($newContent.length === 0) return;

        var $oldContent = $(".so-home-first-section_form_content[data-num='" + selectedForm + "']");
        selectedForm -= 1;

        $oldContent.stop().animate({
            left: "100%",
            right: "-100%",
            opacity: "0"
        });
        $newContent.stop().animate({
            left: "0",
            right: "0",
            opacity: "1"
        });
    }

    function goTo(num) {

        if (selectedForm === num) return;

        var prevForm = num < selectedForm;

        var $newContent = $(".so-home-first-section_form_content[data-num='" + num + "']");

        if ($newContent.length === 0) return;

        var $oldContent = $(".so-home-first-section_form_content[data-num='" + selectedForm + "']");

        if (prevForm) {

            $oldContent.stop().animate({
                left: "100%",
                right: "-100%",
                opacity: "0"
            });
            $newContent.stop().animate({
                left: "0",
                right: "0",
                opacity: "1"
            });
        } else {

            $oldContent.stop().animate({
                left: "-100%",
                right: "100%",
                opacity: "0"
            });
            $newContent.stop().animate({
                left: "0",
                right: "0",
                opacity: "1"
            });
        }

        selectedForm = num;
    }

    window.sign_form = {
        goNext: goNext,
        goPrev: goPrev,
        goTo: goTo
    };

    module.exports = {
        goNext: goNext,
        goPrev: goPrev,
        goTo: goTo
    };
})(window, document, $);

},{}],9:[function(require,module,exports){
"use strict";

//TextTyping Plugin By SMRSAN

Object.defineProperty(exports, "__esModule", {
    value: true
});
var text_typing = function (window, document, $) {

    var tt_elems = [];

    function text_typing_use(elemSelection, textArray, intervalSpeed) {

        var elem = $(elemSelection)[0],
            writeFlag = true,
            stringIndex = 0,
            charIndex = 1,
            waitTime = false,
            waitFrame = 0,
            newTTElem = {
            elem: elem,
            txtArr: textArray,
            interval: setInterval(function () {

                var str = "";
                if (!waitTime) {
                    //NoWait for user reading
                    if (writeFlag) {
                        //Typing...
                        if (charIndex <= textArray[stringIndex].length) {
                            str = "";
                            for (var i = 0; i < charIndex; i++) {
                                str += textArray[stringIndex][i];
                            }
                            charIndex++;
                            $(elem).html(str);
                        } else {
                            charIndex--;
                            waitTime = true;
                            writeFlag = false;
                        }
                    } else {
                        //Backspace
                        if (charIndex >= 0) {
                            str = "";
                            for (var _i = 0; _i < charIndex; _i++) {
                                str += textArray[stringIndex][_i];
                            }
                            charIndex--;
                            $(elem).html(str);
                        } else {
                            writeFlag = true;
                            stringIndex++;
                            stringIndex = stringIndex >= textArray.length ? 0 : stringIndex;
                            charIndex = 1;
                        }
                    }
                } else {
                    if (waitFrame === 20) {
                        waitTime = false;
                        waitFrame = 0;
                    } else {
                        waitFrame++;
                    }
                }
            }, intervalSpeed ? intervalSpeed : 100)
        };
        tt_elems.push(newTTElem);
    }
    return text_typing_use;
}(window, document, $);

exports.default = text_typing;

},{}],10:[function(require,module,exports){
"use strict";

(function (window, document, $) {

    var $topMenu = $(".so-top-menu");

    function openTopMenu() {

        if (!$topMenu[0].classList.contains("so-active")) $topMenu[0].classList.add("so-active");
    }

    function closeTopMenu() {

        if ($topMenu[0].classList.contains("so-active")) $topMenu[0].classList.remove("so-active");
    }

    function isOpen() {

        return $topMenu[0].classList.contains("so-active");
    }

    function get() {
        return $topMenu;
    }

    module.exports = {
        openTopMenu: openTopMenu,
        closeTopMenu: closeTopMenu,
        isOpen: isOpen,
        get: get
    };
})(window, document, $);

},{}]},{},[4])
//# sourceMappingURL=home.bundle.min.map
