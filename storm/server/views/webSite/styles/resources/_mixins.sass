/*
 *	In The Name Of ALLAH
 *	mixins.sass
 */
@import "vars"

/*
 * box-sizing
 * Provides cross-browser "box-sizing" properties
 */
=box-sizing($val)
  -webkit-box-sizing: $val
  -moz-box-sizing:  $val
  box-sizing:  $val

/*
 * bg
 * Makes the "background" property shorter
 */
=bg($val)
  background: $val

/*
 * bg-color
 * Makes the "background-color" property shorter
 */
=bg-color($color)
  background-color: $color

/*
 * bg-size
 * Makes the "background-size" property shorter
 * Provides cross-browser "background-size" properties
 */
=bg-size($val)
  -webkit-background-size: $val
  background-size: $val

/*
 * bg-img
 * Provides cross-browser "background-image" properties
 */
=bg-img($val)
  -webkit-background-image: $val
  -moz-background-image: $val
  -o-background-image: $val
  background-image: $val

/*
 * dir
 * Makes the "direction" property shorter
 */
=dir($val)
  direction: $val

/*
 * border
 * Makes the "border" properties shorter
 */
=border($mode: "", $val: "")
  @if $val == ""
    border: $mode
  @else
    border-#{$mode}: $val

/*
 * border-radius
 * Provides cross-browser "border-radius" properties
 */
=border-radius($val: 0.2rem)
  -webkit-border-radius: $val
  -moz-border-radius: $val
  border-radius: $val

/*
 * transition
 * Provides cross-browser "transition" properties
 */
=transition($val: inherit)
  -webkit-transition: $val
  -moz-transition: $val
  -ms-transition: $val
  -o-transition: $val
  transition: $val
// Abbreviation
=trans($val: inherit)
  -webkit-transition: $val
  -moz-transition: $val
  -ms-transition: $val
  -o-transition: $val
  transition: $val

/*
 * transition-duration
 * Provides cross-browser "transition-duration" properties
 */
=transition-duration($val: inherit)
  -webkit-transition-duration: $val
  -moz-transition-duration: $val
  -ms-transition-duration: $val
  -o-transition-duration: $val
  transition-duration: $val
// Abbreviation
=trans-dur($val: inherit)
  -webkit-transition-duration: $val
  -moz-transition-duration: $val
  -ms-transition-duration: $val
  -o-transition-duration: $val
  transition-duration: $val

/*
 * transition-property
 * Provides cross-browser "transition-property" properties
 */
=transition-property($val: inherit)
  -webkit-transition-property: $val
  -moz-transition-property: $val
  -ms-transition-property: $val
  -o-transition-property: $val
  transition-property: $val
// Abbreviation
=trans-prop($val: inherit)
  -webkit-transition-property: $val
  -moz-transition-property: $val
  -ms-transition-property: $val
  -o-transition-property: $val
  transition-property: $val

/*
 * transition-delay
 * Provides cross-browser "transition-delay" properties
 */
=transition-delay($val: inherit)
  -webkit-transition-delay: $val
  -moz-transition-delay: $val
  -ms-transition-delay: $val
  -o-transition-delay: $val
  transition-delay: $val
// Abbreviation
=trans-dly($val: inherit)
  -webkit-transition-delay: $val
  -moz-transition-delay: $val
  -ms-transition-delay: $val
  -o-transition-delay: $val
  transition-delay: $val

/*
 * transition-timing-function
 * Provides cross-browser "transition-timing-function" properties
 */
=transition-timing-function($val: inherit)
  -webkit-transition-timing-function: $val
  -moz-transition-timing-function: $val
  -ms-transition-timing-function: $val
  -o-transition-timing-function: $val
  transition-timing-function: $val
// Abbreviation
=trans-time-fn($val: inherit)
  -webkit-transition-timing-function: $val
  -moz-transition-timing-function: $val
  -ms-transition-timing-function: $val
  -o-transition-timing-function: $val
  transition-timing-function: $val

/*
 * transform
 * Provides cross-browser "transform" properties
 */
=transform($val: inherit)
  -webkit-transform: $val
  -moz-transform: $val
  -ms-transform: $val
  -o-transform: $val
  transform: $val

/*
 * box-shadow
 * Provides cross-browser "box-shadow" properties
 */
=box-shadow($val: 0px 1px 2px 1px rgba(0,0,0,0.2))
  @if type-of($val) == string and $val == "flat"
    -webkit-box-shadow: $bshadow-flat-0_050cm
    -moz-box-shadow: $bshadow-flat-0_050cm
    box-shadow: $bshadow-flat-0_050cm
  @else
    -webkit-box-shadow: $val
    -moz-box-shadow: $val
    box-shadow: $val

/*
 * text-shadow
 * Provides cross-browser "text-shadow" properties
 */
=text-shadow($val)
  @if type-of($val) == string and $val == "flat"
    text-shadow: $tshadow-flat-0_050cm
  @else
    text-shadow: $val

/*
 * margin-v
 * Makes the use of "margin-top" and "margin-bottom" properties together shorter
 * [Not recommended for browsers]
 */
=margin-v($val)
  margin-top: $val
  margin-bottom: $val

/*
 * margin-h
 * Makes the use of "margin-left" and "margin-right" properties together shorter
 * [Not recommended for browsers]
 */
=margin-h($val)
  margin-left: $val
  margin-right: $val

/*
 * padding-v
 * Makes the use of "padding-top" and "padding-bottom" properties together shorter
 * [Not recommended for browsers]
 */
=padding-v($val)
  padding-top: $val
  padding-bottom: $val

/*
 * padding-h
 * Makes the use of "padding-left" and "padding-right" properties together shorter
 * [Not recommended for browsers]
 */
=padding-h($val)
  padding-left: $val
  padding-right: $val

/*
 * anim
 * Provides cross-browser "animation" properties
 */
=anim($val)
  -webkit-animation: $val
  -o-animation: $val
  animation: $val

/*
 * anim-name
 * Provides cross-browser "animation-name" properties
 */
=anim-name($val: inherit)
  -webkit-animation-name: $val
  -moz-animation-name: $val
  -o-animation-name: $val
  animation-name: $val

/*
 * anim-delay
 * Provides cross-browser "animation-delay" properties
 */
=anim-delay($val)
  -webkit-animation-delay: $val
  -moz-animation-delay: $val
  -o-animation-delay: $val
  animation-delay: $val
// Abbreviation
=anim-dly($val)
  -webkit-animation-delay: $val
  -moz-animation-delay: $val
  -o-animation-delay: $val
  animation-delay: $val

/*
 * anim-dur
 * Makes cross browser "animation-duration"
 */
=anim-dur($s)
  -webkit-animation-duration: $s
  -moz-animation-duration: $s
  -o-animation-duration: $s
  animation-duration: $s

/*
 * anim-timing-func
 * Makes cross browser "animation-timing-function"
 */
=anim-timing-func($v)
  -webkit-animation-timing-function: $v
  -moz-animation-timing-function: $v
  -o-animation-timing-function: $v
  animation-timing-function: $v
// Abbreviation
=anim-time-fn($v)
  -webkit-animation-timing-function: $v
  -moz-animation-timing-function: $v
  -o-animation-timing-function: $v
  animation-timing-function: $v

/*
 * animation-fill-mode
 * Makes cross browser "animation-fill-mode"
 */
=anim-fill-mode($val: inherit)
  -webkit-animation-fill-mode: $val
  -moz-animation-fill-mode: $val
  -o-animation-fill-mode: $val
  animation-fill-mode: $val

/*
 * no-user-select
 * Avoids object selecting by user
 */
=no-user-select()
  -webkit-user-select: none  /* Chrome all / Safari all */
  -moz-user-select: none     /* Firefox all */
  -ms-user-select: none      /* IE 10+ */
  user-select: none          /* Likely future */

/*
 * perspective
 * Provides cross-browser "perspective" properties
 */
=perspective($val: 0)
  -webkit-perspective: $val
  -moz-perspective: $val
  perspective: $val

/*
 * backface-visib
 * Provides cross-browser "backface-visibility" properties
 */
=backface-visib($val)
  -webkit-backface-visibility: $val
  -moz-backface-visibility: $val
  backface-visibility: $val

/*
 * no-focus-outline
 * Avoids from showing an outline after focusing on an input element
 */
=no-focus-outline()
  &:focus
    outline: 0 !important

  &::-moz-focus-inner
    border: 0

/*
 * text-stroke
 * Makes something similar to text stroke by using text-shadow property
 */
=text-stroke($fg-color, $stroke-color: "")
  @if type-of($fg-color) == color and type-of($stroke-color) == color
    color: $fg-color
    text-shadow: -1px -1px 0 $stroke-color, 1px -1px 0 $stroke-color, -1px 1px 0 $stroke-color, 1px 1px 0 $stroke-color
  @else
    text-shadow: -1px -1px 0 $fg-color, 1px -1px 0 $fg-color, -1px 1px 0 $fg-color, 1px 1px 0 $fg-color

/*
 * word-break
 * Does "word-break" in cross-browser way
 */
=word-break()
  white-space: pre-wrap
  word-break: break-all
  /* For Chrome and IE */
  word-wrap: break-word

/*
 * gradient
 * Makes cross browser gradient
 * With supple arguments
 */
=gradient($adjustment, $dir: top, $default-bg: "", $gradient-mode: linear)
  $toDir: ""
  @if $gradient-mode == radial
    @if $dir == top
      $toDir: at top
    @else if $dir == bottom
      $toDir: at bottom
    @else if $dir == right
      $toDir: at right
    @else if $dir == left
      $toDir: at left
    @else if $dir == (top left)
      $toDir: at top left
    @else if $dir == (top right)
      $toDir: at top right
    @else if $dir == (bottom left)
      $toDir: at bottom left
    @else if $dir == (bottom right)
      $toDir: at bottom right
  @else
    @if $dir == top
      $toDir: to bottom
    @else if $dir == bottom
      $toDir: to top
    @else if $dir == right
      $toDir: to left
    @else if $dir == left
      $toDir: to right
    @else if $dir == (top left)
      $toDir: to bottom right
    @else if $dir == (top right)
      $toDir: to bottom left
    @else if $dir == (bottom left)
      $toDir: to top right
    @else if $dir == (bottom right)
      $toDir: to top left

  @if $default-bg != "" or $default-bg != null
    background: $default-bg /* For browsers that do not support gradients */
  background-image: -webkit-#{$gradient-mode}-gradient($dir ,#{$adjustment}) /* For Safari 5.1 to 6.0 */
  background-image: -o-#{$gradient-mode}-gradient($dir,#{$adjustment}) /* For Opera 11.1 to 12.0 */
  background-image: -moz-#{$gradient-mode}-gradient($dir,#{$adjustment}) /* For Firefox 3.6 to 15 */
  background-image: #{$gradient-mode}-gradient($toDir,#{$adjustment}) /* Standard syntax */

/*
 * overflow-x & overflow-y
 * Makes cross browser overflow property
 */
=overflow-x($val: hidden)
  overflow-x: $val
  -ms-overflow-x: $val
=overflow-y($val: hidden)
  overflow-y: $val
  -ms-overflow-y: $val

/*
 * transform-origin
 * Makes cross browser transform-origin property
 */
=transform-origin($val: center center)
  -webkit-transform-origin: $val
  -moz-transform-origin: $val
  -ms-transform-origin: $val
  -o-transform-origin: $val
  transform-origin: $val

/*
 * placeholder
 * Makes cross browser placeholder elements
 */
=placeholder()
  &::placeholder
    @content
  &:-moz-placeholder
    @content
  &::-moz-placeholder
    @content
  &:-ms-input-placeholder
    @content
  &::-webkit-input-placeholder
    @content

/*
 * keyframes
 * Makes cross browser keyframes
 */
=keyframes($animName)
  @keyframes #{$animName}
    @content
  @-o-keyframes #{$animName}
    @content
  @-ms-keyframes #{$animName}
    @content
  @-moz-keyframes #{$animName}
    @content
  @-khtml-keyframes #{$animName}
    @content
  @-webkit-keyframes #{$animName}
    @content

/*
 * filter
 * Makes cross browser filter
 */
=filter($value)
  -webkit-filter: $value
  filter: $value

/*
 * selection
 * Makes cross browser selections
 */
=selection($selection: "")
  #{$selection}::selection
    @content
  #{$selection}::-moz-selection
    @content